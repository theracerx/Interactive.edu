$qdur: .281s;
$focusColor: #00bfff;
$focusBgColor:#00617d;//0081ac,006587,2f4f4f
$selectColor: #ffa500;
$uiBgColor: rgba(0,0,0,0.8);
@import "mixins.scss";
@import "toastr.scss";
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap');

@font-face {
    font-family: 'dosismedium';
    src: url('../fonts/dosismedium-xp6m-webfont.woff2'),
         url('../fonts/dosismedium-xp6m-webfont.woff');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}   

html{
    font-size: 16px;
}
*:focus {
    // outline-style: solid;
    // outline-width: 2px;
    // outline-offset: 4px !important;
    // outline-width: medium !important;
    outline-color: #fff !important;
    // outline: none;
    // border: none;
    // border-radius: 2pt;
    // box-shadow: 0 0 3pt 2pt white;
}
*:focus-visible{
    outline-color: #fff !important;
}
p,span,input{
    // font-family: "dosismedium";
    // font-family: monospace;
    font-family: 'Roboto', sans-serif;  
    font-size: inherit;
    // font-size: min(50vw,16px);
}

button{
    cursor: pointer;
}

body{
    background-color: #808080;
    margin: 0px;
}

.loading-screen{
    z-index: 1;
    pointer-events: none;
    flex-direction: column;
    svg{
        width: 20%;
        height: auto;
        animation: 2s linear infinite loading;
        // background-image: url("../images/525.jpg");
    }
    span{
        margin: 0px;
        // font-size: 8vw;
    }
}

.ui-hints{
    // visibility: hidden;
    background-color: rgba(#000,.75);
    z-index: 1;
    & > div {
        background-color: $focusBgColor;
        width: 90%;
        height: 75%;
    }

    .ui-4x4{
        display: grid;
        border-radius: 3rem 0% 3rem 3rem;
        text-align: center;
        grid-template-columns: 16% 25% 25% 25%;
        grid-template-rows: 10% 24% 24% 24%;
        column-gap: 3%;
        row-gap: 6%;
        padding: 1%;
        pointer-events: none;

        svg{
            fill:#fff;
            width: auto;
            height: 100%;
        }
        // @media only screen and (orientation:portrait){
        // svg{
        //     height: 50%;
        // }
        // }
        span{
            color: #fff;
        }
        div{
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }
    }
    .hint-exit{
        display: flex;
        justify-content: center;
        pointer-events: all;
        align-items: center;
        position: absolute;
        top:8%;
        left:92%;
        color: #fff;
        background: #000;
        border:1px solid #fff;
        
        svg{
            box-sizing: border-box;
            // padding: 0% !important;
        }

        //onOver state
        &:hover{ //for non-keyboard
            svg{
                fill:$focusColor
            }
        }
        &:focus-visible{ //for keyboard
            svg{
                fill:$focusColor
            }
        }
        &:focus:not(:focus-visible){ //for non-keyboard
            outline:none;
        }

        &:active{
            & > svg{
                padding: 10%;
                fill: $selectColor;
            }
        }
    }
    .hint-title{
        display: flex;
        justify-content: center;
        align-items: center;
        color:#fff;
    }
    .hint-L-border{
        border-left: 1px solid #fff;
    }

}
.ui-controls{
    @include control-setup;

    .ui-btn{
        cursor: pointer;
        text-align: center;
        will-change: transform;
        transition: transform $qdur;
        user-select: none;
        
        & > button{
            width: auto;
            height: 100%;
            padding: 0%;
            background: none;
            border:none;

            //onOver state
            &:hover{ //for non-keyboard
                & > svg{
                    fill:$focusColor
                }
            }
            &:focus-visible{ //for keyboard
                // outline:none;
                & > svg{
                    // outline: 2px solid white;
                    // outline-offset: 3px;
                    fill:$focusColor;
                }
            }
            &:focus:not(:focus-visible){ //for non-keyboard
                outline:none;
            }
            &:active {
                & > svg{
                    fill:$selectColor;
                    padding: 10%;
                }
            }
        }

        svg{
            fill: #fff;
            padding: 0%;
            pointer-events: none;
            box-sizing: border-box;
            width: auto;
            height: 100%;
            user-select: none;
            filter: drop-shadow(0px 4px 2px black);
        }

        //for player-bar-settings
        .speed-opt, .quality-opt, .annotation-opt{
            overflow: scroll;
            overflow-x: hidden;
            & > div{
                justify-content: space-evenly;
            }
        }
    }
    .ui-btn-mobile{
        .ui-name{
            visibility: hidden !important;
        }
    }
    .ui-opts{
        display: flex;
        // background: $uiBgColor;
        flex-direction: column;
        position: relative;
        // justify-content: center;
        align-items: center;
    }
    .ui-opt{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;

        border:none;
        padding: 0%;
        width: 100%;

        background: $uiBgColor;
        color: #fff;
        fill:#fff;
        font-size: 1rem;

        .opt_icon, .opt_arrow{
            height: 100%;
        }

        svg{
            width: 75%;
            height: 100%;
        }
        @media only screen and (max-width: 992px){
            .editable{
                display: none;
            }
        }



        &:hover{ //for non-keyboard
            svg{
                fill:$focusColor
            }
        }
        &:focus:not(:focus-visible){ //for non-keyboard
            outline:none;
        }
        &:focus-visible{ //for keyboard
            outline-offset: -4px;
            svg{
                fill:$focusColor
            }
        }
        &:active {
            svg{
                fill:$selectColor;
                padding: 10%;
            }
        }
    }

    .ui-hidden{
        pointer-events: none;
        transform: scale(0);
    }

    .ui-divider{
        pointer-events: none;
        visibility: visible !important;
        margin: 0px;

        position: inherit !important;
        transform: none !important;
        color: #fff;
        fill:#fff
    }

    .ui-caption{
        border-bottom: 6px solid $focusColor;
    }

    .ui-trivolume{
        .ui-trivolume-bg{
            z-index: 1;
            pointer-events: none;
            width: auto;
            position: relative;
            // background-color: red;
            // top: -102%;
            top: -100%;
            // left: -1%;
            border-style: solid;
            border-color: transparent transparent transparent $uiBgColor;
        }
        .ui-trivolume-slider{
            border-radius: 0px !important;

            &:focus-visible ~ .ui-name{
                visibility: visible;
            }
        }
        .ui-trivolume-text{
            pointer-events: none;
            user-select: none;
            position: relative;
            top: -200%;
            left: -25%;
            color: #fff;
            z-index: 2;
        }
        .ui-name{
            position: relative;
            top: -150%;
        }
    }
    @media only screen and (max-width: 992px){
        .ui-trivolume{
            display: none;
        }
    }
    @media only screen and (orientation:portrait){
        .ui-trivolume{
            display: none;
        }
    }

    .ui-timeline, .ui-trivolume-slider{
        appearance: none;
        width: 100%;
        background: $focusBgColor;
        background-image: linear-gradient($focusColor, $focusColor);
        background-size: 0% 100%;
        background-repeat: no-repeat;
        border-radius: 9999px;
        margin: 0px;

        position: relative;
        top: 50%;
        transform: translateY(-50%);
        box-shadow: 1px 2px 2px black inset;

        // outline-color: transparent;
        // outline-style: solid;

        &::-webkit-slider-thumb{
            @include timeline-thumb()
        } 
        &::-moz-range-thumb{
            @include timeline-thumb()
        }
        &::-ms-thumb {
            @include timeline-thumb()
        }

      /*   //onOver state
        &:hover{ //for non-keyboard
            background-image: linear-gradient($focusColor, $focusColor);
            &::-webkit-slider-thumb{
                visibility: visible;
                background: $selectColor;
            } 
            &::-moz-range-thumb{
                visibility: visible;
                background: $selectColor;
            }
            &::-ms-thumb {
                visibility: visible;
                background: $selectColor;
            }
        }
        &:focus-visible{ //for keyboard
            background-image: linear-gradient($focusColor, $focusColor);
            &::-webkit-slider-thumb{
                // visibility: visible;
                background: $selectColor;
            } 
            &::-moz-range-thumb{
                // visibility: visible;
                background: $selectColor;
            }
            &::-ms-thumb {
                // visibility: visible;
                background: $selectColor;
            }
        }
        &:focus:not(:focus-visible){ //for non-keyboard
            outline:none;
        } */


        &::-webkit-slider-runnable-track  {
           cursor:pointer;
        }
        &::-moz-range-track {
            cursor:pointer;
        }
        &::-ms-track {
            cursor:pointer;

        }
    }

    .ui-timecode{
        z-index: 1;
        position: relative;
        top: 50%;
        color: #fff;
        padding: 0 3%;
        background-color: $uiBgColor;
    }
    @media only screen and (max-width: 576px){
        .ui-timecode{visibility: hidden !important;}
    }
    .show-overflow{
        overflow: visible !important;
    }

    .ui-collapse{
        & > svg{
            width: 100%;
        }
    }
    .player-bar-options{
        position: relative;
    }
    .ui-nopointer{
        // width: auto !important;
        pointer-events: none;
    }
    .ui-toggle-on{
        svg{
            fill:$focusColor !important;
        }
    }
    .ui-toggle-off{
        svg{
            fill:$focusBgColor !important;
        }
    }
    .ui-navigation-tip{
        & > svg{
            padding: 0% !important;
        }
        & > div{
            width: 100%;
        }
    }
    .ui-show-playerbar{
        justify-content: center !important;
    }
    .ui-vertical-text{
        writing-mode: vertical-lr;
    }
    .ui-justify-content-center{
        justify-content: center !important;
    }
    .ui-editable{
        // padding: 10%;
        width: 33%;
        height: 100%;
        text-align: center;
        border-radius: 10px;
        color:#fff;
        background-color: $focusBgColor !important;
        pointer-events: all !important;

        @include inputNumNoArrow()
    }
    .ui-slide-menu{
        position: absolute;
        background-color: $uiBgColor;
        color: #fff;
        display: flex;
        flex-direction: column;
        overflow: scroll;
        overflow-x: hidden;
        pointer-events: all;

        span{
            border-left: 8px solid $focusBgColor;

            &:hover{ //for non-keyboard
                border-top: 1px solid $focusColor;
                border-bottom: 1px solid $focusColor;
                border-left: 8px solid $focusColor;
            }
            &:focus:not(:focus-visible){ //for non-keyboard
                outline:none;
            }
            &:focus-visible{ //for keyboard
                // outline-offset: -4px;
                border-top: 1px solid $focusColor;
                border-bottom: 1px solid $focusColor;
                border-left: 8px solid $focusColor;
            }
            &:active {
                border-top: 1px solid $selectColor;
                border-bottom: 1px solid $selectColor;
                border-left: 8px solid $selectColor;
            }
        }
    }
    .ui-anim-menu{
        overflow: scroll;
        overflow-x: hidden;
        & div{
            position: absolute;
            background-color: $uiBgColor;
            color: #fff;
            display: flex;
            flex-direction: column;
            width: 100%;
            height: auto;
        }
        
        button{
            pointer-events: all;
            color: #fff;
            padding: 0%;
            background: none;
            border:none;
            border-left: 8px solid $focusBgColor;
            &:hover{ //for non-keyboard
                border-top: 1px solid $focusColor;
                border-bottom: 1px solid $focusColor;
                border-left: 8px solid $focusColor;
            }
            &:focus:not(:focus-visible){ //for non-keyboard
                outline:none;
            }
            &:focus-visible{ //for keyboard
                // outline-offset: -4px;
                border-top: 1px solid $focusColor;
                border-bottom: 1px solid $focusColor;
                border-left: 8px solid $focusColor;
            }
            &:active {
                border-left: 8px solid $selectColor;
                border-top: 1px solid $selectColor;
                border-bottom: 1px solid $selectColor;
            }
        }
    }
}

.inspect-viewer{
    &>div{
        position: absolute;
        @include fill-available()
    }
}
// .panorama-viewer{

// }
// .model-viewer{

// }
// .carousel-viewer{

// }
// .slideshow-viewer{

// }


//For TIPPYJS
.tippy-box[data-animation=fade][data-state=hidden]{
    opacity:0
}
[data-tippy-root]{
    max-width:calc(100vw - 10px)
}
.tippy-box{
    position:relative;
    // background-color:#333;
    // background-color:$focusColor;
    // background-color:#efd469;
    background-color:#DDD;
    // background-color:#2f4f4f;
    // color:#2f4f2f;;
    // color:#fff;
    color:#000;
    border-radius:4px;
    font-size:1rem;
    line-height:1.4;
    white-space:normal;
    outline:0;
    transition-property:transform,visibility,opacity

}
.tippy-box[data-placement^=top]>.tippy-arrow{
    bottom:0;
    &::before{
        bottom:-7px;
        left:0;
        border-width:8px 8px 0;
        border-top-color:initial;
        transform-origin:center top
    }
}
.tippy-box[data-placement^=bottom]>.tippy-arrow{
    top:0;
    &::before{
        top:-7px;
        left:0;
        border-width:0 8px 8px;
        border-bottom-color:initial;
        transform-origin:center bottom
    }
}
.tippy-box[data-placement^=left]>.tippy-arrow{
    right:0;

    &::before{
        border-width:8px 0 8px 8px;
        border-left-color:initial;
        right:-7px;
        transform-origin:center left
    }
}
.tippy-box[data-placement^=right]>.tippy-arrow{
    left:0;

    &::before{
        left:-7px;
        border-width:8px 8px 8px 0;
        border-right-color:initial;
        transform-origin:center right  
    }
}
.tippy-box[data-inertia][data-state=visible]{
    transition-timing-function:cubic-bezier(.54,1.5,.38,1.11)
}
.tippy-arrow{
    width:16px;
    height:16px;
    color:#DDD;
    // color:#2f4f4f;
    // color:$focusColor;
    // color:#333;

    &::before{
        content:"";
        position:absolute;
        border-color:transparent;
        border-style:solid
    }
}
.tippy-content{
    font-family: 'Roboto', sans-serif;
    // font-family: monospace;
    position:relative;
    padding:5px 9px;
    z-index:1
}

//FOR PDFJS text-builder
.textLayer {
    position: absolute;
    text-align: initial;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
    opacity: 0.2;
    line-height: 1;
    text-size-adjust: none;
    span.markedContent{
        top: 0;
        height: 0;
    }
    .highlight {
        margin: -1px;
        padding: 1px;
        background-color: rgba(180, 0, 170, 1);
        border-radius: 4px;

        &.appended{
            position: initial;
        }
        &.begin {
            border-radius: 4px 0 0 4px;
        }
        &.end {
            border-radius: 0 4px 4px 0;
        }
        &.middle {
            border-radius: 0;
        }
        &.selected {
            background-color: rgba(0, 100, 0, 1);
        }

        
    }
    & ::selection{
        background: rgba(0, 0, 255, 1);
    }
    br, span {
        color: transparent;
        position: absolute;
        white-space: pre;
        cursor: text;
        transform-origin: 0% 0%;
    }
    br::selection {
        background: transparent;
    }
    .endOfContent {
        display: block;
        position: absolute;
        left: 0;
        top: 100%;
        right: 0;
        bottom: 0;
        z-index: -1;
        cursor: default;
        user-select: none;

        &.active {
            top: 0;
        }
    }
}





.flex-center{
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    @include fill-available()
}
.hidden{
    display: none !important;
    visibility: hidden !important;
    pointer-events: none !important;
}
.tempShow{
    visibility: visible;
}
.tempHidden{
    visibility: hidden;
}

//focus only on 8:5 and 16:9 aspect ratios
$minXS: 18vmin;
@media only screen and (max-width: 576px){ //devices 600px > (360x640||360x576) 64pxHB
    html{
        font-size: max(calc(#{$minXS} * #{$uiFntSz}), 12px);
        
        @media only screen and (orientation:portrait){//change fntSz
            font-size: max(calc(#{$minXS} * #{$uiFntSz}), 16px);
        }
    }
    .ui-controls{
        @include control-config($minXS);
        
    } 
    .ui-hints{
        @include hint-config($minXS,.9rem, .75rem)
    }
    @media only screen and (orientation:portrait){//change fntSz
        html{
            font-size: max(calc(#{$minXS} * #{$uiFntSz}), 16px);
        }
    }
}
$minS: 18vmin;
@media only screen and (min-width: 576px){ //devices 600px < (640x360||576x360) 64pxHB
    html{
        font-size: max(calc(#{$minS} * #{$uiFntSz}), 14px);
    }
    .ui-controls{
        @include control-config($minS);
    } 
    .ui-hints{
        @include hint-config($minS,1.25rem,1rem)
    }
}
$minM: 12.5vmin;
@media only screen and (min-width: 768px){ //devices 768px < (768x1024||1080x192) 96pxHB
    html{
        font-size: max(calc(#{$minM} * #{$uiFntSz}), 16px);
    }
    .ui-controls{
        @include control-config($minM);
    }
    .ui-hints{
        @include hint-config($minM,1.5rem,1rem)
    }
}
$minL: 12.5vmin;
@media only screen and (min-width: 992px){ //devices 992px < (1024x768||962x601) 96pxHB
    html{
        font-size: max(calc(#{$minL} * #{$uiFntSz}), 18px);
    }
    .ui-controls{
        @include control-config($minL);
    } 
    .ui-hints{
        @include hint-config($minL,1.5rem,1rem)
    }
}
$minXL: 13.5vmin;
@media only screen and (min-width: 1200px){ //devices 1200px < (1280x720||1280x800) 96pxHB
    html{
        font-size: max(calc(#{$minXL} * #{$uiFntSz}), 20px);
    }
    .ui-controls{
        @include control-config($minXL);
    }  
    .ui-hints{
        @include hint-config($minXL,1.5rem,1rem)
    }
}
$minXXL: 12.5vmin;
@media only screen and (min-width: 1400px){ //devices 1400px < (1440x990||1536x864)
    html{
        font-size: max(calc(#{$minXXL} * #{$uiFntSz}), 22px);
    }
    .ui-controls{
        @include control-config($minXXL);
    } 
    .ui-hints{
        @include hint-config($minXXL,1.5rem,1rem)
    }
}



// @media only screen and (orientation:portrait){//force landscape mode
//     body {
//       height: 100vw;
//       width: 100vh;
//       transform: rotate(90deg);
//       left: calc((100vw - 100vh)/2);
//       top: calc((100vh - 100vw)/2);
//       position: relative;
//     }
// }

@media (prefers-reduced-motion: reduce){
    .ui-btn{
        transition-duration: 0s;
        svg{
            transition-duration: 0s;
        }
    }
}

@keyframes loading {
    0%{transform: rotate(0deg);}
    100%{transform: rotate(360deg);}
}
/* 
Exit,Exit Fullscreen, Settings on top-right circle; circle either expands down or left

include forwards skip? anti-learning?
*/