// import { setTimeout } from "timers/promises"
import { spawn } from "child_process"
import { type } from "os"
import { group } from "console"


require("@google/model-viewer")
window.MobileDetect = require("mobile-detect")
window.device = new window.MobileDetect(window.navigator.userAgent)
window.PANOLENS = require("panolens")
window.toastr = require("toastr")
import tippy,{followCursor} from 'tippy.js';
import {Wave} from "@foobar404/wave";
import { AnyFunction } from "@splidejs/splide"
import { cp } from "fs"
window.toastr.options = {
    "closeButton": false,
    "debug": false,
    "newestOnTop": false,
    "progressBar": false,
    "positionClass": "toast-top-center",
    "preventDuplicates": true,
    "showDuration": "300",
    "hideDuration": "1000",
    "timeOut": "5000",
    "extendedTimeOut": "1000",
    "showEasing": "swing",
    "hideEasing": "linear",
    "showMethod": "fadeIn",
    "hideMethod": "fadeOut"
};


window.pdfjsLib = require('pdfjs-dist');
window.pdfjsLib.GlobalWorkerOptions.workerSrc = "dist/bundle.worker.js";

export{}
declare global {
    interface Window {
        PANOLENS:any,
        toastr:any,
        pdfjsLib:any,
        MobileDetect:any,

        followCursor:any,
        device:any,
        deviceChecker:any,
        modalActive:any,
        modalInactive:any,
        interactiveActive:any,
        cNarratorCaption:boolean,
        cCaption:boolean,
        cVolume:number,
        cPlaybackSpeed:number,
        setTimeout:any
        isFullscreen:boolean,
        showPlayerBar:any,

        //window mouse.key
        autoClose:any,
        elemBelow:any,
        movement:boolean,
        autoHideBars:boolean

        //loader
        loader:any,
        
        //main UI
        settingBar:any,
        sideBar:any,
        // [key: string]: any
        playerBar:any,
        mediaCont:any,


        //observer
        sizeObserver:any;

        //media Callables
        videoFile:any,
        audioFile:any,

        //UI callables
        showBars:any,
        hideBars:any,
        uiVisibilityManager:any,

        //MISC
        MISC:any

        slideshow:any,
        dog:object,
        webkitAudioContext:any,
        testAudio:any,
    }
    interface anyObj {
        [key:string]:any
    }
    interface eventsTemplate{
        onOver?:any,
        onSelect?:any,
        onActive?:any,
        onLeave?:any,
        enableAllKeys?:boolean,
        disableKeys?:boolean,
        custom?: object,
    }
    interface elemTemplate{
        [key:string]:any,
        type: string,

        identity?:string,
        class?:string,
        id?:string,

        innerText?:string | number,
        // innerHTML?:any,
        tabbable?:boolean,

        attributes?:object,
        props?:object,
        events?:eventsTemplate,
        setup?:any, //executable function

        appendTo?:any
    }
}

const dataImage:any= {//SVG Icons
    loading:{
        viewBox: "24 24",
        groups:[
            {
                paths:[
                    {d:"M0 0h24v24H0z",fill:"none"},
                    {d:"M12 3a9 9 0 0 1 9 9h-2a7 7 0 0 0-7-7V3z"}
                ]
            }
        ]
    },
    enterFullscreen:{
        viewBox: "24 24",
        groups:[
            {
                paths:[
                    {d:"M3 15h.1a1 1 0 0 1 .9.9v.1 4h4 .1a1 1 0 0 1 0 2H8 3h-.1a1 1 0 0 1-.9-.9V21v-5-.1a1 1 0 0 1 .9-.9H3zm18 0a1 1 0 0 1 1 .9v.1 5a1 1 0 0 1-.9 1H21h-5a1 1 0 0 1-.1-2h.1 4v-4a1 1 0 0 1 .9-1h.1zM8 2a1 1 0 0 1 .1 2H8 4v4a1 1 0 0 1-.9 1H3a1 1 0 0 1-1-.9V8 3a1 1 0 0 1 .9-1H3h5zm13 0h.1a1 1 0 0 1 .9.9V3v5 .1a1 1 0 0 1-.9.9H21h-.1a1 1 0 0 1-.9-.9V8 4h-4-.1a1 1 0 0 1 0-2h.1 5z"}
                ]
            }
        ]
    },
    exitFullscreen:{
        viewBox: "24 24",
        groups:[
            {
                paths:[
                    {d:"M21 15a1 1 0 0 1 .1 2H21h-4v4a1 1 0 0 1-.9 1H16a1 1 0 0 1-1-.9V21v-5a1 1 0 0 1 .9-1h.1 5zM8 15h.1a1 1 0 0 1 .9.9v.1 5 .1a1 1 0 0 1-.9.9H8h-.1a1 1 0 0 1-.9-.9V21v-4H3h-.1a1 1 0 0 1 0-2H3h5zm8-13h.1a1 1 0 0 1 .9.9V3v4h4 .1a1 1 0 0 1 0 2H21h-5-.1a1 1 0 0 1-.9-.9V8 3v-.1a1 1 0 0 1 .9-.9h.1zM8 2a1 1 0 0 1 1 .9V3v5a1 1 0 0 1-.9 1H8 3a1 1 0 0 1-.1-2H3h4V3a1 1 0 0 1 .9-1H8z"}
                ]
            }
        ]
    },
    exitViewer:{
        viewBox: "8 8",
        groups:[
            {
                paths:[
                    {d:"M1.41 0l-1.41 1.41.72.72 1.78 1.81-1.78 1.78-.72.69 1.41 1.44.72-.72 1.81-1.81 1.78 1.81.69.72 1.44-1.44-.72-.69-1.81-1.78 1.81-1.81.72-.72-1.44-1.41-.69.72-1.78 1.78-1.81-1.78-.72-.72z"}
                ]
            }
        ]
    },
    caretLeft:{
        viewBox: "18 18",
        groups:[
            {
                paths:[
                    {d:"M9.39 15.51L4.38 10A1.524 1.524 0 0 1 4 9a1.474 1.474 0 0 1 .38-1l5.01-5.51a1.5 1.5 0 0 1 2.22 2.02L7.53 9l4.08 4.49a1.5 1.5 0 0 1-2.22 2.02z"}
                ]
            }
        ]
    },
    caretRight:{
        src:"caretLeft",
        styles:[
            {name:"transform",val:"rotate(180deg)"}
        ]
    },
    caretTop:{
        src:"caretLeft",
        styles:[
            {name:"transform",val:"rotate(90deg)"}
        ]
    },
    caretBottom:{
        src:"caretLeft",
        styles:[
            {name:"transform",val:"rotate(-90deg)"}
        ]
    },
    video:{
        viewBox:"18 18",
        groups:[
            {
                paths:[
                    {d:"M17.58 5.18A1.043 1.043 0 0 0 17 5a1.018 1.018 0 0 0-.34.06L13 6.38v-.3A2.09 2.09 0 0 0 10.92 4H2.08A2.09 2.09 0 0 0 0 6.08v5.84A2.09 2.09 0 0 0 2.08 14h8.84A2.09 2.09 0 0 0 13 11.92v-.48l3.62 1.49A.985.985 0 0 0 17 13a1 1 0 0 0 1-1V6a1.014 1.014 0 0 0-.42-.82zM3 8a1 1 0 1 1 1-1 1 1 0 0 1-1 1z"}
                ]
            }
        ]

    },
    musicNote:{
        viewBox: "120 120",
        groups:[
            {
                paths:[
                    {d:"M28.2 17.4H47V101H28.2zm73-13.4H120v84.5h-18.7z"},
                    {d:"M33.4 41.7l-5.2-24.3L120 0v23.8z"},
                    {type:"ellipse", cx:"23.4",cy:"100.8", rx:"23.4", ry:"19.5"},
                    {type:"ellipse", cx:"96.6",cy:"88.5", rx:"23.4", ry:"19.5"}
                ]
            }
        ]
    },
    image:{
        viewBox: "370 370",
        groups:[
            {
                paths:[
                    {d:"M334.6 0H35.4C16 0 0 16 0 35.4v299.2C0 354 16 370 35.4 370h299.2c19.5 0 35.4-16 35.4-35.4V35.4C370 16 354 0 334.6 0zM330 226.6c-3.4-4.5-50.4-67.4-71.8-67.4S208 196.4 208 196.4l-26.2-36.8C148 115.3 134.2 110 125 110.4c-9 .5-22 7.2-64.4 79.6L40 226.6V40h290v186.6z"},
                    {type:"circle", cx:"265.8",cy:"93.2", r:"26.5"},
                ]
            }
        ]
    },
    control:{
        viewBox: "87.5 87.5",
        groups:[
            {
                paths:[
                    {d:"M67.5 19.3H20a20 20 0 0 0-20 20v9a20 20 0 0 0 20 20h47.5a20 20 0 0 0 20-20v-9a20 20 0 0 0-20-20zm-29 29h-9.8V58H20V48H10v-8.7H20v-9.8h8.7v9.8h9.8V48h0zm18.3-4.4a8 8 0 1 1 0-16 8 8 0 1 1 0 16zM71.5 58a8 8 0 1 1 0-16 8 8 0 1 1 0 16z"}
                ]
            }
        ]
    },
    question:{
        viewBox: "973.1 973.1",
        groups:[
            {
                paths:[
                    {d:"M502.3 788.2h-47a60 60 0 0 0-60 60v65a60 60 0 0 0 60 60h47a60 60 0 0 0 60-60v-65a60 60 0 0 0-60-60zM171 285.8l86.7 10.8a60 60 0 0 0 63.5-38.3c12.5-32.7 30-58.5 52.2-77.3 31.6-26.6 71-40 118-40 48.7 0 87.5 12.8 116.3 38.3 28.8 25.6 43 56.2 43 92a114 114 0 0 1-24.3 70.8c-10.5 13.6-42.8 42.2-96.7 86-54 43.7-90 83-108 118-18.4 35.8-24.8 75.5-26.4 115.3a60 60 0 0 0 60 62.5h49a60 60 0 0 0 59.8-54.9c2-22.3 5.7-39.2 11.3-50.7 9.4-19.7 33.7-45.7 72.7-78 75.5-62.5 124.7-112 147.8-148.3 23-36.3 34.6-74.8 34.6-115.5 0-73.5-31.3-138-94-193.4-62.6-55.4-147-83-253-83-100.8 0-182 27.3-244 82-52.8 46.6-85 101.8-96.2 165.5-3.5 18.6 9.2 36 27.7 38.3z"}
                ]
            }
        ]
    },
    zoomIn:{
        viewBox: "8 8",
        groups:[
            {
                paths:[
                    {d:"M3.5 0C1.6 0 0 1.6 0 3.5S1.6 7 3.5 7c.6 0 1.2-.2 1.7-.4a1 1 0 0 0 .1.1l1 1a1 1 0 1 0 1.4-1.4l-1-1a1 1 0 0 0-.1-.1c.3-.5.4-1.1.4-1.7C7 1.6 5.4 0 3.5 0zm0 1C4.9 1 6 2.1 6 3.5c0 .6-.2 1.1-.5 1.6h0a1 1 0 0 0-.1 0 1 1 0 0 0-.2.3c-.4.4-1 .6-1.6.6C2.1 6 1 4.9 1 3.5S2.1 1 3.5 1zM3 2v1H2v1h1v1h1V4h1V3H4V2H3z"}
                ]
            }
        ]
    },
    zoomOut:{
        viewBox: "8 8",
        groups:[
            {
                paths:[
                    {d:"M3.5 0C1.6 0 0 1.6 0 3.5S1.6 7 3.5 7c.6 0 1.2-.2 1.7-.4a1 1 0 0 0 .1.1l1 1a1 1 0 1 0 1.4-1.4l-1-1a1 1 0 0 0-.1-.1c.3-.5.4-1.1.4-1.7C7 1.6 5.4 0 3.5 0zm0 1C4.9 1 6 2.1 6 3.5c0 .6-.2 1.1-.5 1.6h0a1 1 0 0 0-.1 0 1 1 0 0 0-.2.3c-.4.4-1 .6-1.6.6C2.1 6 1 4.9 1 3.5S2.1 1 3.5 1zM2 3v1h3V3H2z"}
                ]
            }
        ]
    },
    rotateRight:{
        viewBox: "24 24",
        groups:[
            {
                paths:[
                    {d:"M12 3a9 9 0 0 1 4.1 17H18a1 1 0 0 1 .1 2H18h-4a1 1 0 0 1-1-.9V21v-4a1 1 0 0 1 2-.1v.1 1.3A7 7 0 0 0 12 5a7 7 0 0 0-7 7 1 1 0 1 1-2 0 9 9 0 0 1 9-9zm0 6a3 3 0 1 1 0 6 3 3 0 1 1 0-6zm0 2a1 1 0 1 0 0 2 1 1 0 1 0 0-2z"}
                ]
            }
        ]
    },
    play:{
        viewBox: "120 120",
        groups:[
            {
                paths:[
                    {type:"polygon", points:"17.5,120 17.5,0 107.5,60"}
                ]
            }
        ]
    },
    pause:{
        viewBox: "120 120",
        groups:[
            {
                paths:[
                    {type:"polygon", points:"15,0 50,0 50,120 15,120"},
                    {type:"polygon", points:"70,0 105,0 105,120 70,120"}
                ]
            }
        ]
    },
    caption:{
        viewBox: "24 24",
        groups:[
            {
                paths:[
                    {d:"M18.8 4C20.5 4 22 5.5 22 7.3v9.5c0 1.8-1.5 3.3-3.2 3.3H5.3C3.5 20 2 18.5 2 16.8V7.3C2 5.5 3.4 4.1 5.1 4h.2 13.5zm-8.1 4.6c-2.4-1.4-5.1.3-5.1 3.4s2.7 4.8 5.1 3.4c.4-.2.5-.7.3-1s-.7-.5-1-.3C8.5 14.9 7 14 7 12s1.5-2.9 2.9-2.1c.4.2.8.1 1-.3s.1-.8-.3-1zm7.5 0C15.7 7.2 13 8.9 13 12s2.7 4.8 5.1 3.4c.4-.2.5-.7.3-1s-.7-.5-1-.3c-1.4.8-2.9-.1-2.9-2.1s1.5-2.9 2.9-2.1c.4.2.8.1 1-.3s.1-.8-.3-1z"}
                ]
            }
        ]
    },
    setting:{
        viewBox: "18 18",
        groups:[
            {
                paths:[
                    {d:"M17 7h-.76a1 1 0 0 1-.7-1.71l.53-.53a1.008 1.008 0 0 0 0-1.42l-1.41-1.41a1.008 1.008 0 0 0-1.42 0l-.51.51a.974.974 0 0 1-.73.32 1 1 0 0 1-1-1V1a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v.76a1 1 0 0 1-1 1 .974.974 0 0 1-.73-.32l-.51-.51a1.008 1.008 0 0 0-1.42 0L1.93 3.34a1.008 1.008 0 0 0 0 1.42c.19.19.4.37.58.57a.92.92 0 0 1 .25.67 1 1 0 0 1-1 1H1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h.76a1 1 0 0 1 1 1 .92.92 0 0 1-.25.67c-.18.2-.39.38-.58.57a1.008 1.008 0 0 0 0 1.42l1.41 1.41a1.008 1.008 0 0 0 1.42 0l.51-.51a.974.974 0 0 1 .73-.32 1 1 0 0 1 1 1V17a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-.76a1 1 0 0 1 1-1 .974.974 0 0 1 .73.32l.51.51a1.008 1.008 0 0 0 1.42 0l1.41-1.41a1.008 1.008 0 0 0 0-1.42l-.53-.53a1 1 0 0 1 .7-1.71H17a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1zm-8 5a3 3 0 1 1 3-3 3 3 0 0 1-3 3z"}
                ]
            }
        ]
    },
    annotation:{
        viewBox: "16 16",
        groups:[
            {
                paths:[
                    {d:"M9 9V2h7v7.1c0 4.8-4.5 5.4-4.5 5.4l-.6-1.4s2-.3 2.4-1.9c.4-1.2-.4-2.2-.4-2.2H9zM0 9V2h7v7.1c0 4.8-4.5 5.4-4.5 5.4l-.6-1.4s2-.3 2.4-1.9C4.7 10 3.9 9 3.9 9H0z"}
                ]
            }
        ]
    },
    playspeed:{
        viewBox: "612 612",
        groups:[
            {
                paths:[
                    {d:"M175.2 239.6c.1-2-.5-4-1.8-5.4l-58.8-67c-1.3-1.5-3-2.4-5-2.5s-4 .5-5.4 1.8a306 306 0 0 0-66.7 83.3c-1 1.7-1.2 3.8-.6 5.7s1.8 3.5 3.6 4.4l78.2 42.7c1 .6 2.4 1 3.6 1 2.6 0 5.2-1.4 6.5-4a202 202 0 0 1 44-55c1.5-1.3 2.4-3 2.5-5zm26.3-24.8c1.3 2.5 4 4 6.6 4 1.2 0 2.4-.3 3.5-1a200 200 0 0 1 67-21.6c4-.6 7-4.3 6.4-8.4l-12-88.3c-.6-4-4.3-7-8.4-6.4-35.7 4.8-70 16-101.8 32.7-3.6 2-5 6.4-3 10l41.8 78.7zm-95.7 119.5l-86-23.3c-2-.5-4-.3-5.6.7s-3 2.6-3.5 4.5A307 307 0 0 0 0 396.5a304 304 0 0 0 .3 14.3c.2 4 3.5 7 7.4 7H8l89-4c2-.1 3.8-1 5-2.4s2-3.4 2-5.3l-.2-9.5a204 204 0 0 1 7-53c1-4-1.3-8-5.2-9zm333-213.6c-32.4-15.6-67-25.3-103-28.8-2-.2-4 .4-5.4 1.7a8 8 0 0 0-2.7 5l-8.6 88.7c-.4 4 2.6 7.7 6.7 8a200 200 0 0 1 67.8 19c1 .5 2 .7 3.2.7.8 0 1.7-.1 2.4-.4 2-.6 3.4-2 4.2-3.8l38.7-80.3c1.8-3.7.2-8-3.5-10zm131 124.6c.5-2 .2-4-.8-5.6A306 306 0 0 0 499 159c-1.5-1.2-3.5-1.8-5.4-1.6-2 .2-3.8 1.2-5 2.7l-56.2 69c-1.2 1.5-1.8 3.5-1.6 5.4s1.2 3.8 2.7 5a202 202 0 0 1 46.2 53.4c1.4 2.3 4 3.6 6.4 3.6 1.3 0 2.6-.3 3.8-1l76.5-45.7c1.7-1 3-2.7 3.4-4.6zM598 305c-1.2-4-5.4-6-9.3-5l-85 26.6c-4 1.2-6 5.4-5 9.3a202 202 0 0 1 9.2 60.5l-.2 9.5c-.1 2 .6 4 2 5.3s3.2 2.3 5 2.4l89 4h.4c4 0 7.2-3 7.4-7l.3-14.3a306 306 0 0 0-14-91.6zm-292.3 75.8l-3.8.1-120.6-71.2c-3-1.7-6.7-1.3-9.2 1s-3 6-1.5 9L236.4 443a71 71 0 0 0-.4 7.2 69 69 0 0 0 69.7 69.7 69 69 0 0 0 69.7-69.7 69 69 0 0 0-69.7-69.7z"}
                ]
            }
        ]
    },
    leftArrow:{
        viewBox: "124.1 124.1",
        groups:[
            {
                paths:[
                    {d:"M124 73.6V50.4c0-4.7-3.8-8.4-8.6-8.4H81c-4.8 0-9-4-9-8.8V18.5c0-7.2-8-11.2-13.8-6.8L3.3 56c-4.4 3.4-4.5 10 0 13.6l55 43c5.7 4.4 13.7.3 13.7-6.8V90.8c0-4.8 4.3-8.8 9-8.8h34.4c4.8 0 8.6-3.7 8.6-8.4z"}
                ]
            }
        ]
    },
    rightArrow:{
        src:"leftArrow",
        styles:[
            {name:"transform",val:"rotate(180deg)"}
        ]
    },
    toggleOn:{
        viewBox: "330 330",
        groups:[
            {
                paths:[
                    {d:"M240,75H90c-49.6,0-90,40.4-90,90s40.4,90,90,90h150c49.6,0,90-40.4,90-90S289.6,75,240,75z"},
                    {type:"circle",cx:"240",cy:"165",r:"60",fill:"#fff"}
                ]
            }
        ]
    },
    toggleOff:{
        src:"toggleOn",
        styles:[
            {name:"transform",val:"rotate(180deg)"}
        ]
    },
    skipNav:{
        viewBox: "2820 720",
        groups:[
            {
                paths:[
                    {d:"M346.6 70.6L341 76v139.4 139.4l5.8 4.5c5.8 4.7 8 4.7 145 4.7h139l5.4-5.6 5.6-5.4V217l-2.5-141.4c-1.4-3-5-6.7-8-8-3.8-1.8-46.7-2.5-142.4-2.5H352l-5.4 5.6zm259.4 144V328H491.5 377V214.5 101h114.5H606v113.5zm-152.4-13c-30.3 29.2-34.4 34-34.2 40.2 0 5.2 2 8.8 7.2 13 11.5 9.7 14.4 8 49.2-25.4l14.6-14.2 22.7 21.3 27.4 22.7c10.8 3.4 24.7-10.3 22-21.8a522 522 0 0 0-72.1-69.2c-1.3 0-18 15-36.8 33.3zm-441 200.8C.8 407 1.2 402.6 1 550v138l5.6 5.4L12 699h140.2 140.2l4.7-5.2 5-5.2V550.4 411.8l-5.8-5.4-5.8-5.4-136-.4c-84.5-.2-138.4.4-141.8 1.8zM266 549.5V663H151.5 37V549.5 436h114.5H266v113.5zm-126.2-34l-32.8 36c0 1.4 10.6 12.8 59.8 65.4 8.8 9.2 18.7 10 26.8 1.8 10.3-10 8-16.4-15.7-42.5L156.5 551c0-1 3.6-5.6 8-10 17-16.2 34.6-38.2 34.6-43.4 0-9.2-8-17-18-17-8 0-10 1.6-41.4 34.8zM353 402c-12.6 5-12 .7-12 149v137l5.6 5.4 5.4 5.6h140.2 140.2l4.7-5.2 5-5.2V550l-4.3-143.7-4.3-5.4-138-.4c-75.7-.2-140 .4-142.4 1.6zm253 147.4V663H491.5 377V549.5 436h114.5H606v113.5zM425 511c-11.7 11.5-8 18.2 33.7 59.6l32.6 32.6 36-36.2c32.8-32.8 36-36.6 36-43.8 0-10.3-7.6-17.8-18-17.8-6.3 0-10.6 3-30.6 23l-23.4 23-23.4-23c-19.6-19.3-24.3-23-30.3-23-4.7 0-9.2 2-12.6 5.6zm263.2-108.7c-3.6 1.3-7 5-8.3 9.2-3.4 9.4-3.4 266.7-.2 275.3 4.7 12.4-1 12 150.2 12h140l5.4-5.6 5.6-5.4v-137-137.2l-5.4-6.3-5.4-6.3-138-.4c-86.4-.2-140 .4-144 1.8zM945 549.7l.5 113.3H829.7 714V551l1.6-113.7c.7-1 52.6-1.4 115-1H944l1 113.7zM788.5 486c-9.2 10-6.7 17.5 11.5 37l21.6 23.4 5.4 6-21 22-22.7 27.2c-4.3 11.2 9 25.2 21 22.3 3.6-1 18.7-15.3 39-36.6l32.8-35-8.3-9.2-33.3-36c-22.7-24.3-25.2-26.3-32.8-26.3-5.6 0-9.6 1.6-13 5.2z"}
                ]
            },
            {
                styles:[
                    {name:"transform",val:"matrix(.1 0 0 -.1 0 511)"}
                ],
                paths:[
                    {d:"M13607.3 4232.6l-112.3-107.8V1337-1450.6l116.7-90c116.7-94.4 157.3-94.4 2902-94.4h2780.8l107.7 112.4 112.7 108v2720.3l-49.4 2828a354 354 0 0 1-161.7 161.8c-76.3 36-934.4 49.4-2848 49.4h-2740.6l-108-112.4zM18795 1355V-915h-2290-2290v2270 2270h2290 2290V1355zm1352.6 2910c-251.6-99-242.6-13.4-242.6-2982v-2735l112.3-108 107.7-112.5h2803.3 2803.3l94.3 103.5 99 103.5v2770.8l-85.3 2874.2-85.3 108-2758.4 9c-1513.8 4.5-2798.8-9.2-2848.2-31.6zM25205 1317.5v-2270h-2290-2290v2270 2270h2290 2290v-2270zm-9819.6 939v-320h323.5c77 0 132-14.8 164.7-44.5 32.8-29.7 49-68.5 49-116.3 0-46.8-16.3-85.2-49-114.6-32.8-29.7-87.7-44.5-164.7-44.5h-693.7c-77 0-132 14.8-164.7 44.5-32.8 29.7-49 68.5-49 116.3 0 46.8 16.7 85 50 114.6 33.2 29.7 88 44.5 164 44.5h50v1220h-49.6c-76.5 0-131.3 14.8-163.7 44.3-32.6 29.5-48.8 68-48.8 115.7s16.2 86.2 48.8 115.7 87.2 44.3 163.7 44.3l729.6-1.6c212 0 380.4-57.8 504.3-173.7a557 557 0 0 0 186-423.2c0-91.8-20.8-178.6-62.7-260.3-31.5-61.3-84.5-121.7-158.3-181.4-74-59.7-149.4-104.5-226.5-134.7-77-30-178.8-45-305.4-45h-297.5zm.2 320h285.4c134.2 0 240.6 30.4 319.2 91s118 133.4 118 218.5c0 72-31.8 135.2-95.5 189.4-63.5 54-154.4 81.2-272.7 81.2h-354.5v-580h.2zm2819.8-380.2v-427c-140.8-77.5-260.6-130.7-359.4-159.2s-205.4-42.7-320-42.7c-159 0-306.4 24.4-442 73-106.4 37.3-190.2 84.3-251.6 141.3-61.2 56.8-118 141-169.5 252.3-51.6 111.2-77.5 235.7-77.5 373.3V2623c0 207.6 63.3 393.2 190 556.3 170.3 221 401.6 331.3 694.6 331.3 85 0 166-8.6 242.4-26s149.2-43.2 218-77.5c41.6 37.6 82 56.2 121.5 56.2 45.6 0 82.5-15.7 111-47.2 28.3-31.3 42.6-84.5 42.6-159.7V3054c0-74.4-14.4-127.7-43-159.2-28.7-31.7-65.6-47.5-111-47.5-36.3 0-67.4 11-93.6 33.3-20 15.2-37 48.5-50.7 100.3-13.6 52-29 86.8-46 105-27 29-75.2 55-144.2 77.8s-146.2 34-231.8 34c-123 0-229.4-25-320-75.4-64.4-37.3-124-102-178-194.7-54.3-92.6-81.6-193.3-81.6-302V2402c0-166.6 47.6-293 142.7-379.2s246-129.4 453.4-129.4c140.3 0 268.4 26.8 384 80.2V2196H17576c-75 0-128.3 14.8-160.2 44.3s-47.8 68-47.8 115.7 16 86.2 47.8 115.7 85.3 44.3 160.2 44.3l553.2-1.6c75 0 128.3-14.6 160.2-43.5s47.8-67.3 47.8-115c0-37.3-10.8-70-32.7-97.8-21-28-54.4-48.7-99-62z"},
                    {d:"M16265.4 816.8v-870c0-191.8-69-354.8-207.5-489s-304.8-201.4-499.5-201.4c-96.2 0-186.8 17-271.4 50.8s-160.7 83.4-228 149.2c-67.5 65.6-120 134-157.3 205-37.6 71.2-56.3 166.2-56.3 285.4v879.4c-66 0-114.5 14.6-146 43.8-31.3 29.2-47.2 66.6-47.2 112 0 46.4 15.7 83.8 47.2 112 31.3 28.2 85.2 42.4 161 42.4l418 1.6c75.2 0 129-14.8 161-44.5s48-68.5 48-116.3-16-86.6-48-116.3-85.7-44.5-161-44.5h-113v-934.6c0-95.7 39-180.2 116.8-253.6s171.7-110 281.6-110c73.2 0 142 17.7 206.2 53 64 35.3 116.6 86.8 157.3 154.4 25.4 42.7 38 94.6 38 156v934.8H15857c-72 0-123.8 14.8-154.4 44.3-30.8 29.5-46 68-46 115.7s15.3 86.2 46 115.7c30.8 29.5 82.2 44.3 154.4 44.3l393.8-1.6c72 0 123.8-14.6 154.4-43.5 30.8-29 46-67.3 46-115 0-46.6-15-85-45.5-115-30-29.7-77-44.7-140.3-44.7zm960-900.4v-320h303.3c72.2 0 124-14.8 154.6-44.5 30.8-29.7 46-68.5 46-116.3 0-46.8-15.3-85.2-46-114.6-30.8-29.7-82.3-44.5-154.6-44.5h-650.3c-72.2 0-124 14.8-154.5 44.5-30.8 29.7-46 68.5-46 116.3 0 46.8 15.7 85 46.8 114.6 31.2 29.7 82.5 44.5 154 44.5h46.8v1220h-49.6c-76.5 0-131.3 14.8-163.7 44.3-32.6 29.5-48.8 68-48.8 115.7s16.2 86.2 48.8 115.7 87.2 44.3 163.7 44.3l709.6-1.6c212 0 380.4-57.8 504.3-173.7s186-256.8 186-423.2a565 565 0 0 0-62.7-260.3c-31.5-61.3-84.5-121.7-158.3-181.4-74-59.7-149.4-104.5-226.5-134.7s-178.8-45-305.4-45h-297.3 0zm20.2 320h285.4c134.2 0 240.6 30.4 319.2 91s118 133.4 118 218.5c0 72-31.8 135.2-95.5 189.4-63.5 54-154.4 81.2-272.7 81.2h-354.5v-580h.2zm4544.7 1975v-320h323.5c77 0 132-14.8 164.7-44.5 32.8-29.7 49-68.5 49-116.3 0-46.8-16.3-85.2-49-114.6-32.8-29.7-87.7-44.5-164.7-44.5H21420c-77 0-132 14.8-164.8 44.5s-49 68.5-49 116.3c0 46.8 16.7 85.2 50 114.6 33.2 29.7 88 44.5 164 44.5h50v1220h-49.6c-76.5 0-131.3 14.8-163.7 44.3-32.6 29.5-48.8 68-48.8 115.7s16.2 86.2 48.8 115.7 87.2 44.3 163.7 44.3l729.6-1.6c212 0 380.4-57.8 504.3-173.7a557 557 0 0 0 186-423.2c0-91.8-20.8-178.6-62.7-260.3-31.5-61.3-84.5-121.7-158.3-181.4-74-59.7-149.4-104.5-226.5-134.7-77-30-178.8-45-305.4-45h-297.4zm.2 320h285.4c134.2 0 240.6 30.4 319.2 91s118 133.4 118 218.5c0 72-31.8 135.2-95.5 189.4-63.5 54-154.4 81.2-272.7 81.2h-354.5v-580h.2zm2819.8-380.2v-427c-140.8-77.5-260.6-130.7-359.4-159.2s-205.4-42.7-320-42.7c-159 0-306.4 24.4-442 73-106.4 37.3-190.2 84.3-251.6 141.3-61.2 56.8-118 141-169.5 252.3-51.6 111.2-77.5 235.7-77.5 373.3V2578c0 207.6 63.3 393.2 190 556.3 170.3 221 401.6 331.3 694.6 331.3 85 0 166-8.6 242.4-26s149.2-43.2 218-77.5c41.6 37.6 82 56.2 121.5 56.2 45.6 0 82.5-15.7 111-47.2 28.3-31.3 42.6-84.5 42.6-159.7V3009c0-74.4-14.4-127.5-43-159.2s-65.6-47.5-111-47.5c-36.3 0-67.4 11-93.6 33.3-20 15.2-37 48.5-50.7 100.3-13.6 52-29 86.8-46 105-27 29-75.2 55-144.2 77.8s-146.2 34-231.8 34c-123 0-229.4-25-320-75.4-64.4-37.3-124-102-178-194.7-54.3-92.6-81.6-193.3-81.6-302V2357c0-166.4 47.6-292.8 142.7-379.2 95-86.2 246-129.4 453.4-129.4 140.3 0 268.4 26.8 384 80.2V2151H23981c-75 0-128.3 14.8-160.2 44.3s-47.8 68-47.8 115.7 16 86.2 47.8 115.7 85.3 44.3 160.2 44.3l553.2-1.6c75 0 128.3-14.6 160.2-43.5s47.8-67.3 47.8-115c0-37.3-10.8-70-32.7-97.8-21-28-54.4-48.7-99-62zm-3340-2608.7V759c-65.8 1-114.3 15.8-145.8 44.7-31.3 29-47 66-47 111.4 0 46.5 15.8 84.2 47.7 113 32 29 85.3 43.3 160 43.3l651.3-1.6a815 815 0 0 0 296.9-56.1c96.7-37.5 174.3-85 233-142.5 44.5-43.5 91-103.2 138.8-179 48-75.8 84.3-151 108.5-226 24.3-74.8 36.5-166.3 36.5-274.6V43c0-131.5-22.3-248-66.8-349.5s-103-184.6-175.3-248.7c-72.4-64.3-140.4-111.4-204.2-142-101.3-47.5-232.3-71.3-393.2-71.3h-625.5c-74.8 0-128.4 14.4-160 43.3a145 145 0 0 0-47.7 113c0 45.5 15.8 83 47.7 112.2 32 29.4 80.3 43.5 145 42.5zm300.2 9h331.8c124 0 217.2 17.7 280 53.3 82.2 46.6 144 106 185.6 178s62.3 165.2 62.3 280V210c0 98.3-18.7 184.5-56.3 258.6-59 115.5-125 195-198.7 238s-165.7 64.7-276.3 64.7H21570v-1220h.3zm1859.8 950.7v-950.8h108.4c72.2 0 124-14.8 154.5-44.5 30.8-29.7 46-68.5 46-116.3 0-46.8-15.3-85.2-46-114.6-30.8-29.7-82.3-44.5-154.5-44.5h-394c-72.2 0-124 14.8-154.5 44.5-30.8 29.7-46 68.5-46 116.3a154 154 0 0 0 45.5 114c30.2 30 77.2 45.4 140.7 45.4V771.4h-48.2c-74.4 0-127.6 14.8-159 44.3-31.7 29.5-47.4 68-47.4 115.7s15.7 86.2 47.4 115.7 84.7 44.3 159 44.3l357.6-1.6 790.6-1276v957.7h-115c-76.5 0-131 14.8-163.7 44.3s-48.8 68-48.8 115.7 16.2 86.2 48.8 115.7 87.2 44.3 163.7 44.3l398.5-1.6c74.3 0 127.2-14.2 158.8-42.5s47.4-65.7 47.4-112.2c0-45.5-15.5-83-46.8-112.2-31-29.3-78.8-44-143-44V-748.6h-305.8l-794 1250.8z",}
                ]
            },
            {
                paths:[
                    {d:"M1254.6 359h-70.4v-65.4c0-14.7-14-26-29.5-21.3-9.3 3-15.3 12-15.3 21.7v65h-68.6c-14.7 0-26 14-21.3 29.5 3 9.2 12 15.2 21.6 15.2h68.3V477c0 9.7 6 18.8 15.3 21.7 15.4 4.7 29.4-6.6 29.4-21.3v-73.7h70c9.7 0 18.7-6 21.6-15.2 5-15.4-6.5-29.5-21.2-29.5z"}
                ]
            }
        ]
    },
    download:{
        viewBox:"8 8",
        groups:[
            {
                paths:[
                    {d:"M3 0v3h-2l3 3 3-3h-2v-3h-2zm-3 7v1h8v-1h-8z"}
                ]
            }
        ]
    },
    tileView:{
        viewBox:"18 18",
        groups:[
            {
                paths:[
                    {type:"rect",width:"8",height:"8",rx:"2"},
                    {type:"rect",width:"8",height:"8",x:"10",rx:"2"},
                    {type:"rect",width:"8",height:"8",x:"10",y:"10",rx:"2"},
                    {type:"rect",width:"8",height:"8",y:"10",rx:"2"},
                ]
            }
        ]
    },
    filter:{
        viewBox: "512 512",
        groups:[
            {
                paths:[
                    {d:"M238.6 496H192V253.8L24 53.8V16h456v37.6l-160 200v161zM224 464h1.4l62.6-62.6v-159L443.5 48H61l163 194.2z"}
                ]
            }
        ]
    },
    keyStrokes:{
        viewBox:"940.2 620.2",
        groups:[
            {
                paths:[
                    {d:"M575.6 0h-211c-11.8 0-23.2 4.7-31.5 13s-13 19.7-13 31.5v211c0 24.6 20 44.5 44.5 44.5h211c24.6 0 44.5-20 44.5-44.5v-211C620 20 600 0 575.6-.1zm25.2 236.3c0 24.6-20 44.5-44.6 44.5H384c-24.6 0-44.5-20-44.6-44.5V64a45 45 0 0 1 13-31.5 44 44 0 0 1 31.5-13h172.4c24.6 0 44.5 20 44.5 44.6zm-196-68.6l55.2-50c2.8-2.4 6.3-3.8 10-3.8s7.3 1.3 10 3.8L535 168a15 15 0 1 1-20.2 22.2l-45-41-45 41a15 15 0 1 1-20.2-22.2zm171 152.3h-211c-11.8 0-23.2 4.7-31.5 13s-13 19.7-13 31.5v211c0 24.6 20 44.5 44.5 44.5h211c24.6 0 44.5-20 44.5-44.5v-211c0-24.6-20-44.5-44.5-44.5zm25.2 236.2c0 24.6-20 44.5-44.6 44.5H384c-24.6 0-44.5-20-44.6-44.5V384a45 45 0 0 1 13-31.5 44 44 0 0 1 31.5-13h172.4c24.6 0 44.5 20 44.5 44.5zM535 460l-55 50c-2.8 2.4-6.3 3.8-10 3.8s-7.3-1.3-10-3.8l-55.3-50a15 15 0 1 1 20.3-22.2l45 41 45-41a15 15 0 1 1 20.2 22.2zm360.6-140h-211a45 45 0 0 0-31.5 13 44 44 0 0 0-13 31.5v211c0 24.6 20 44.5 44.5 44.5h211c24.6 0 44.5-20 44.5-44.5v-211c0-24.6-20-44.5-44.5-44.5zm25.2 236.2c0 24.6-20 44.5-44.6 44.5H704c-24.6 0-44.5-20-44.5-44.5V384a45 45 0 0 1 13-31.5 44 44 0 0 1 31.5-13h172.4c24.6 0 44.5 20 44.5 44.5zM776 408.6l50.2 55.2c2.4 2.8 3.8 6.3 3.8 10s-1.3 7.3-3.8 10L776 539a15 15 0 1 1-22.2-20.2l41-45-41-45a15 15 0 1 1 22.2-20.2zM255.6 320h-211c-11.8 0-23.2 4.7-31.5 13A45 45 0 0 0 0 364.6v211C0 600.2 20 620 44.5 620h211c24.6 0 44.5-20 44.6-44.5v-211c0-24.6-20-44.5-44.5-44.5zm25.2 236.2c0 24.6-20 44.5-44.6 44.5H64c-24.6 0-44.5-20-44.5-44.5V384a45 45 0 0 1 13-31.5 44 44 0 0 1 31.5-13h172.4c24.6 0 44.5 20 44.6 44.5zM164 539l-50.2-55.2c-2.4-2.8-3.8-6.3-3.8-10s1.3-7.3 3.8-10l50.2-55.2a15 15 0 1 1 22.2 20.2l-41 45 41 45A15 15 0 1 1 164 539z"}
                ]
            }
        ]
    },
    pageDown:{
        viewBox:"300.2 300.2",
        groups:[
            {
                paths:[
                    {d:"M72.2 78c.1 3.4-.5 6.8-1.8 10-1 2.8-3 5.3-5 7.3-2.4 2-5.2 3.6-8.2 4.5-3.7 1-7.6 1.6-11.5 1.6H40v21.4c0 .3-.1.7-.3 1-.3.3-.7.6-1 .7l-2 .4c-1 .1-2.2.2-3.3.2a30 30 0 0 1-3.3-.2c-.7-.1-1.4-.2-2-.4-.4-.1-.8-.3-1-.7-.2-.3-.3-.6-.3-1V62.5c-.1-1.3.4-2.7 1.3-3.6 1-.8 2-1.3 3.3-1.2h15.8q2.4 0 4.5.2l5 .8c2 .4 4.2 1.2 6 2.2A18 18 0 0 1 68 65c1.5 1.7 2.6 3.7 3.3 5.8a19 19 0 0 1 1 7.4zM58 79a12 12 0 0 0-1.2-5.8c-.7-1.4-1.8-2.5-3-3.4-1.2-.7-2.5-1.2-3.8-1.4a29 29 0 0 0-4.1-.3h-6v23h6c2 .1 3.7-.2 5.5-1a9 9 0 0 0 3.6-2.5c1-1 1.7-2.4 2-3.8.5-1.5.7-3.2.7-4.8zm61.3 44c0 .4-.2 1-.5 1-.5.3-1 .5-1.6.6-1 .1-2.2.2-3.3.2-1 0-2.3 0-3.4-.2-.5-.1-1-.3-1.5-.6-.3-.3-.5-.7-.4-1v-3.7a21 21 0 0 1-6.5 4.8c-2.5 1.2-5.3 1.7-8 1.7-2.3 0-4.6-.3-6.7-1a15 15 0 0 1-5.3-2.8c-1.5-1.3-2.7-3-3.5-4.7-1-2-1.3-4.3-1.2-6.5-.1-2.4.5-4.8 1.6-7 1-2 2.7-3.7 4.7-5 2.4-1.4 5-2.4 7.8-3 3.6-.7 7.2-1 10.8-1h4.5V92c0-1.3-.1-2.6-.4-3.8-.3-1-.7-2-1.4-2.7a6 6 0 0 0-2.7-1.6c-1.4-.4-2.8-.6-4.2-.5a22 22 0 0 0-5.8.7c-1.5.4-3 1-4.5 1.6l-3.8 2c-.6.4-1.4.7-2 .7-.4 0-.7-.1-1-.4s-.6-.6-.7-1c-.2-.5-.4-1-.4-1.7l-.2-2.2c0-1 0-1.7.2-2.6.2-.6.5-1.2 1-1.7.8-.7 1.6-1.2 2.5-1.7a37 37 0 0 1 4.2-1.7c1.7-.5 3.5-1 5.3-1.3a39 39 0 0 1 15.2.6c2.3.6 4.5 1.7 6.3 3.3 1.7 1.5 3 3.5 3.6 5.7.8 2.7 1.2 5.4 1 8.2zm-12.8-19.8h-5c-1.8 0-3.6.1-5.4.5-1.3.2-2.5.7-3.6 1.4-1 .6-1.5 1.3-2 2.3-.4 1-.7 2-.7 3-.1 1.7.6 3.4 1.8 4.5 1.4 1.2 3.3 1.8 5 1.7 1.8 0 3.5-.5 5-1.4a21 21 0 0 0 4.7-4.1zM174 80a9 9 0 0 1-.6 3.7c-.4.8-.8 1.2-1.4 1.2h-5.4c.8.8 1.3 1.8 1.6 3s.5 2.2.5 3.3a18 18 0 0 1-1.3 7.2c-1 2-2.2 3.8-3.8 5.3-1.8 1.5-3.8 2.6-6 3.3-2.6.8-5.2 1-8 1-1.4 0-3-.2-4.3-.5a13 13 0 0 1-3-1.3c-.4.5-.8 1-1 1.6-.3.6-.5 1.3-.5 2 0 1 .5 2 1.3 2.5 1 .7 2.4 1 3.7 1l11.2.4a28 28 0 0 1 7 1.1c2 .6 3.6 1.5 5.2 2.7 1.4 1 2.5 2.5 3.2 4.2a13 13 0 0 1 1.1 5.5c0 2.2-.5 4.4-1.5 6.4s-2.6 4-4.5 5.3c-2.3 1.6-4.8 2.8-7.5 3.5a39 39 0 0 1-10.6 1.3 47 47 0 0 1-10.1-.9 22 22 0 0 1-6.8-2.6c-1.6-1-3-2.3-4-4-.8-1.5-1.2-3.3-1.2-5a12 12 0 0 1 .4-3.3 13 13 0 0 1 1.3-3c.6-1 1.3-2 2-2.7 1-1 1.8-1.7 3-2.5-1.4-.7-2.6-2-3.4-3.2-.8-1.3-1.2-3-1.2-4.5 0-2 .5-4 1.4-5.6a18 18 0 0 1 3.6-4.5c-1.2-1.2-2.2-2.7-3-4.3-.8-2-1.2-4.2-1-6.3 0-2.5.4-5 1.4-7.2 1-2 2.3-4 4-5.4 1.8-1.5 3.8-2.7 6-3.4a25 25 0 0 1 7.8-1.2c1.4 0 2.8.1 4.2.3l3.7.7H172c.6 0 1 .4 1.4 1 .5 1.2.6 2.5.6 3.8zm-13.7 47.7a4 4 0 0 0-1.9-3.6c-1.5-1-3.3-1.4-5-1.3l-9.3-.3c-.8.5-1.5 1.2-2 2-.5.5-1 1-1.3 1.7-.3.5-.5 1-.6 1.6-.1.5-.2 1-.2 1.6 0 1.7 1 3.3 2.6 4 2.3 1 4.8 1.5 7.4 1.3 1.7 0 3.4-.2 5-.6 1.2-.3 2.3-.8 3.3-1.6.8-.6 1.4-1.3 1.8-2.2.3-.8.5-1.7.5-2.6zm-3-36.8c.1-2-.6-4.2-2-5.8-1.6-1.5-3.7-2.2-5.8-2a8 8 0 0 0-3.4.7c-1 .4-1.7 1-2.4 1.8-.6.8-1 1.6-1.4 2.6-.3 1-.5 2-.5 3-.1 2 .6 4 2 5.6 1.6 1.4 3.6 2 5.8 2 1.2 0 2.3-.2 3.4-.6 1-.4 1.7-1 2.4-1.7.6-.7 1-1.6 1.5-2.5a9 9 0 0 0 .5-3zm66.7 7.5a5 5 0 0 1-1.1 3.5c-.8.8-1.8 1.2-3 1h-28a19 19 0 0 0 .7 5.4c.4 1.5 1.2 3 2.2 4 1 1.2 2.4 2 4 2.6a17 17 0 0 0 5.8.9 32 32 0 0 0 6-.5l4.5-1 3-1c.6-.3 1.3-.4 2-.5.3 0 .5.1.8.2.2.2.4.4.5.7.2.4.3 1 .3 1.3l.1 2v2c0 .5-.1 1-.2 1.4 0 .3-.2.7-.3 1-.2.3-.3.5-.5.8l-1.8 1-3.8 1.2c-1.8.4-3.5.8-5.3 1a45 45 0 0 1-6.4.4 34 34 0 0 1-10.8-1.6c-3-1-5.6-2.5-7.7-4.7-2.2-2.3-3.7-5-4.6-8-1-3.7-1.6-7.5-1.5-11.3a36 36 0 0 1 1.6-11.1c1-3 2.5-6 4.7-8.4a20 20 0 0 1 7.4-5.3c6.4-2.4 13.4-2.4 19.8-.1a16 16 0 0 1 6.7 4.7 19 19 0 0 1 3.9 7.2c1 3 1.3 6 1.2 9zm-12.6-3.7c.1-3.7-.6-6.5-2.2-8.6s-4-3-7.3-3c-1.5 0-3 .3-4.3 1-1.2.6-2.2 1.5-3 2.5s-1.5 2.4-2 3.7c-.4 1.5-.7 3-.7 4.6zM82 181.2a47 47 0 0 1-2.4 15.8c-1.4 4-3.8 7.8-7 10.7-3 2.8-7 5-11 6a57 57 0 0 1-15.3 2h-16c-1 0-2-.3-3-1-1-1-1.3-2-1.2-3.3V153c-.1-1.2.3-2.4 1.2-3.3.8-.7 1.8-1 3-1h17.2a48 48 0 0 1 15.2 2.1 28 28 0 0 1 10.5 6.2c3 3 5 6.3 6.5 10.2 1.6 4.5 2.3 9.3 2.2 14zm-14 .5c0-3-.3-6-1-9-.7-2.6-2-5-3.6-7-1.7-2-4-3.6-6.3-4.7-3.2-1.2-6.7-1.8-10-1.7h-7v45.5h7c3.2.1 6.4-.4 9.4-1.4 2.5-1 4.7-2.4 6.4-4.3 1.8-2 3-4.6 3.8-7.3 1-3.3 1.3-6.7 1.2-10zm71 8.6c0 3.6-.5 7.3-1.6 10.8a25 25 0 0 1-4.7 8.4c-2.2 2.4-5 4.3-8 5.4-3.6 1.3-7.3 2-11 2a30 30 0 0 1-10.7-1.7c-3-1-5.5-2.8-7.6-5-2-2.3-3.6-5-4.5-8a40 40 0 0 1-1.5-11 35 35 0 0 1 1.6-10.8 25 25 0 0 1 4.7-8.4c2.2-2.4 5-4.3 8-5.4a32 32 0 0 1 11-2 31 31 0 0 1 10.8 1.7c3 1 5.5 2.7 7.5 5s3.6 5 4.4 8a37 37 0 0 1 1.4 11zm-13.4.5a34 34 0 0 0-.5-6.3c-.3-1.8-1-3.5-1.8-5a9 9 0 0 0-3.4-3.3c-1.7-.8-3.5-1.3-5.4-1.2-1.7 0-3.5.3-5 1-1.4.7-2.7 1.8-3.6 3-1 1.5-1.7 3.2-2 5-.5 2-.7 4.3-.7 6.6 0 2 .2 4.2.6 6.3.3 1.8 1 3.5 1.8 5a9 9 0 0 0 3.4 3.3c1.7.8 3.5 1.2 5.4 1.2 1.8 0 3.5-.3 5-1 1.4-.7 2.7-1.8 3.6-3 1-1.5 1.7-3.2 2-5 .5-2 .7-4.3.7-6.5zm94.4-23.2c0 .5-.1 1-.2 1.4l-.6 2.4-12.3 41.8c-.1.5-.4 1-.7 1.4s-.8.7-1.3.8c-.8.2-1.6.4-2.4.4h-4c-1.7 0-3 0-4-.1-1 0-1.7-.2-2.5-.4-.5-.1-1-.4-1.3-1-.3-.4-.5-1-.6-1.4l-7.8-28v-.5l-.1.5-7.2 28c-.1.5-.3 1-.6 1.4s-.8.7-1.3 1c-.8.2-1.7.4-2.5.4l-4 .1c-1.7 0-3 0-4.2-.1-.8 0-1.7-.2-2.5-.4-.5-.2-1-.4-1.3-.8s-.5-1-.6-1.4l-12.2-41.8c-.3-.8-.5-1.6-.6-2.4l-.1-1.4c0-.3.1-.6.3-1a2 2 0 0 1 1-.6c.7-.2 1.3-.3 2-.3.8-.1 2-.1 3.2-.1l3.4.1c.7 0 1.4.2 2 .4.4.1.8.4 1 .7s.4.7.4 1l9.2 34v.6-.6l8.6-34c.1-.4.3-.7.5-1 .3-.3.6-.6 1-.7a7 7 0 0 1 1.9-.4c.8-.1 2-.1 3-.1l3 .1 2 .4a2 2 0 0 1 1 .6 3 3 0 0 1 .4.9l9.2 34.2v.6-.6l8.8-34a3 3 0 0 1 .4-1 2 2 0 0 1 1-.7c.6-.2 1.3-.3 2-.4.8-.1 2-.1 3.2-.1l3 .1c.6 0 1.3.1 2 .3.4.1.7.3 1 .6.2.3.3.6.3 1zm52.3 46.4c0 .3-.1.7-.3 1-.3.3-.6.5-1 .6-.6.2-1.3.3-2 .4-1 .1-2 .1-3 .1a31 31 0 0 1-3.2-.1c-.7-.1-1.4-.2-2-.4-.4-.1-.7-.3-1-.6-.2-.3-.3-.6-.3-1v-26.3c0-1.8-.1-3.5-.5-5.3-.3-1.2-.8-2.3-1.4-3.3s-1.4-1.6-2.4-2c-1-.5-2.3-.8-3.5-.7-1.8.1-3.6.7-5 1.8-2 1.5-3.8 3.3-5.3 5.3V214c0 .3-.1.7-.3 1-.3.3-.7.5-1 .6-.6.2-1.3.3-2 .4h-6.3a9 9 0 0 1-2-.4c-.4-.1-.8-.3-1-.6s-.3-.6-.3-1v-46.2c0-.3.1-.6.3-1 .2-.3.6-.5 1-.7.6-.2 1-.3 1.7-.4a24 24 0 0 1 2.7-.1l2.7.1 1.7.4c.3.1.6.4.8.6.2.3.3.6.3 1v5.3a31 31 0 0 1 7.8-6.2 17 17 0 0 1 8.3-2c2.7-.1 5.5.4 8 1.6a14 14 0 0 1 5.2 4.2c1.4 2 2.3 4 3 6.2a36 36 0 0 1 .9 8.6zM255.6 0h-211C20 0 0 20 0 44.6v211C0 280.2 20 300 44.6 300h211c24.6 0 44.5-20 44.6-44.5v-211a45 45 0 0 0-13-31.6C279 4.6 267.4 0 255.6 0zM281 236.3a45 45 0 0 1-13 31.5 44 44 0 0 1-31.5 13H64a45 45 0 0 1-31.5-13 44 44 0 0 1-13-31.5V64c0-24.6 20-44.5 44.6-44.5h172.3c11.8 0 23.2 4.7 31.5 13s13 19.7 13 31.5z"}
                ]
            }
        ]
    },
    pageUp:{
        viewBox:"301.2 299",
        groups:[
            {
                paths:[
                    {d:"M72.4 77.4c0 3.8-.6 7-1.8 10a20 20 0 0 1-5.1 7.3c-2.2 2-5 3.5-8.3 4.5a39 39 0 0 1-11.5 1.6H40v21.4c0 .3-.1.7-.3 1s-.6.5-1 .7-1.2.3-2 .4-2 .2-3.3.2-2.4-.1-3.3-.2l-2-.4c-.5-.2-1-.4-1-.7s-.3-.6-.3-1V62c0-1.6.4-2.8 1.3-3.6.8-.8 2-1.2 3.3-1.2H47l4.5.2a42 42 0 0 1 5 .8c2 .4 4 1 6 2.2a18 18 0 0 1 5.3 4.1 17 17 0 0 1 3.3 5.7 20 20 0 0 1 1.2 7.3zm-14.3 1c0-2.3-.4-4.3-1.2-5.8s-2-2.6-3-3.6c-1.2-.7-2.5-1.2-3.8-1.4a27 27 0 0 0-4-.3h-6V90h6c2.2 0 4-.3 5.5-1s2.7-1.4 3.6-2.5 1.6-2.3 2-3.8c.5-1.2.7-2.8.7-4.6zm61.3 44c0 .5-.2 1-.5 1-.3.3-1 .5-1.6.6s-1.8.2-3.3.2c-1.6 0-2.7-.1-3.4-.2s-1.2-.3-1.5-.6-.4-.7-.4-1v-3.7c-2 2-4 3.6-6.5 4.8s-5 1.7-8 1.7a21 21 0 0 1-6.8-1c-2-.6-3.8-1.6-5.3-2.8-1.5-1.3-2.7-2.8-3.5-4.7s-1.2-4-1.2-6.5c0-2.7.5-5 1.6-7a13 13 0 0 1 4.7-4.9 23 23 0 0 1 7.8-2.9 56 56 0 0 1 10.8-1h4.5v-2.8c0-1.4-.1-2.7-.4-3.8s-.8-2-1.4-2.7-1.6-1.3-2.7-1.6-2.5-.5-4.2-.5a21 21 0 0 0-5.8.7 29 29 0 0 0-4.5 1.6L84.4 87c-1 .5-1.6.7-2 .7s-.7-.1-1-.4c-.3-.2-.5-.6-.7-1s-.3-1-.4-1.7l-.2-2.2c0-1 .1-2 .3-2.5s.5-1.2 1-1.7a13 13 0 0 1 2.5-1.7c1.2-.7 2.6-1.2 4.2-1.7a59 59 0 0 1 5.3-1.3 38 38 0 0 1 5.9-.5 36 36 0 0 1 9.3 1.1c2.6.7 4.7 1.8 6.3 3.3 1.7 1.5 3 3.4 3.6 5.7.8 2.3 1 5 1 8.2v31zm-12.8-19.8h-5c-2 0-4 .2-5.4.5a10 10 0 0 0-3.6 1.4c-1 .6-1.6 1.4-2 2.3s-.6 2-.6 3c0 2 .6 3.5 1.8 4.6s3 1.7 5 1.7c1.8 0 3.5-.5 5-1.4s3-2.3 4.7-4v-8zM174 79.3c0 1.7-.2 3-.6 3.7s-.8 1.2-1.4 1.2h-5.4c.8.8 1.3 1.8 1.6 2.8a12 12 0 0 1 .5 3.3c0 2.7-.4 5-1.3 7.2s-2.2 3.8-4 5.3c-1.7 1.4-3.7 2.5-6 3.3a28 28 0 0 1-7.9 1.1 18 18 0 0 1-4.2-.5 9 9 0 0 1-3.1-1.3c-.4.4-.8 1-1 1.6s-.5 1.3-.5 2c0 1 .4 1.8 1.3 2.5 1 .6 2 1 3.7 1l11.2.4c2.6.1 5 .5 7 1 2 .6 3.8 1.5 5.2 2.7a11 11 0 0 1 3.2 4.2c.7 1.6 1 3.5 1 5.5a14 14 0 0 1-1.5 6.4 15 15 0 0 1-4.5 5.3c-2 1.5-4.5 2.7-7.5 3.5a37 37 0 0 1-10.6 1.3 49 49 0 0 1-10.1-.9c-2.8-.6-5-1.5-6.8-2.6-1.8-1-3-2.4-4-4-.8-1.5-1.2-3.2-1.2-5 0-1 .1-2.2.4-3.3a13 13 0 0 1 1.3-3 14 14 0 0 1 2.1-2.7c.8-1 1.8-1.7 2.8-2.5-1.5-.8-2.6-2-3.4-3.2-.8-1.4-1.2-3-1.2-4.5 0-2 .5-4 1.4-5.6s2-3.2 3.6-4.5c-1.2-1.2-2.2-2.7-3-4.3-.7-1.7-1-3.8-1-6.3 0-2.7.5-5 1.4-7.2s2.3-4 4-5.4 3.7-2.6 6-3.4a24 24 0 0 1 7.8-1.2c1.4 0 2.8.1 4.2.3l3.7.7H172c.6 0 1 .4 1.4 1s.6 2 .6 3.7zM160.3 127a4 4 0 0 0-1.9-3.6c-1.3-1-3-1.3-5-1.3l-9.3-.3c-1 .7-1.6 1.3-2 2s-1 1.2-1.3 1.7c-.3.6-.5 1-.6 1.6s-.2 1-.2 1.6c0 1.7 1 3 2.6 4s4.2 1.3 7.4 1.3a18 18 0 0 0 5-.6c1.3-.4 2.4-1 3.3-1.6.8-.7 1.4-1.4 1.8-2.2.3-.6.4-1.5.4-2.4zm-3-36.8c0-2.5-.7-4.4-2-5.8s-3.3-2-5.8-2a9 9 0 0 0-3.4.6c-1 .4-1.8 1-2.4 1.8-.6.7-1 1.6-1.4 2.6s-.5 2-.5 3a8 8 0 0 0 2 5.6c1.3 1.4 3.3 2 5.7 2a9 9 0 0 0 3.4-.6c1-.4 1.8-1 2.4-1.7s1-1.6 1.4-2.5a8 8 0 0 0 .6-3zm67 7.6c0 1.6-.4 2.8-1 3.5-.7.8-1.7 1-3 1h-28c0 2 .2 3.8.7 5.4s1.2 3 2.2 4 2.3 2 4 2.6 3.5 1 5.8 1 4.3-.2 6-.5l4.5-1 3-1c.8-.3 1.5-.5 2-.5.3 0 .6.1.8.2s.4.3.5.6.2.8.3 1.3c.1.6.1 1.3.1 2v2c0 .5-.1 1-.2 1.4s-.2.7-.3 1-.3.5-.5.8c-.2.2-.8.6-1.8 1l-3.8 1.2c-1.5.4-3.3.7-5.3 1a43 43 0 0 1-6.4.4c-4 0-7.7-.5-10.8-1.6s-5.7-2.6-7.7-4.7c-2-2-3.6-4.8-4.6-8s-1.5-7-1.5-11.3a35 35 0 0 1 1.6-11.1 23 23 0 0 1 4.7-8.4c2-2.3 4.5-4 7.4-5.3 3-1.2 6.2-1.8 10-1.8 4 0 7.2.6 10 1.7s5 2.7 6.8 4.7a18 18 0 0 1 3.9 7.2c.8 2.8 1.2 5.8 1.2 9V98zM211.5 94c.1-3.7-.6-6.5-2.2-8.6s-4-3-7.3-3c-1.7 0-3 .3-4.3 1s-2.2 1.5-3 2.5-1.4 2.3-2 3.7a22 22 0 0 0-.8 4.6h19.6zM81.2 190c0 4-.6 7.8-1.8 11a22 22 0 0 1-5.3 8.2 22 22 0 0 1-8.7 5.1c-3.5 1.2-7.4 1.8-12 1.8a36 36 0 0 1-11.3-1.6 21 21 0 0 1-8.5-4.8c-2.3-2-4-4.8-5.3-8a30 30 0 0 1-1.8-11.2v-40.7c0-.3.1-.7.3-1s.6-.5 1-.7 1.2-.3 2-.4l3.3-.2c1.3 0 2.4.1 3.3.2s1.6.2 2 .4 1 .4 1 .7.3.6.3 1v39.5c0 2.7.3 5 1 7s1.6 3.6 2.8 4.8c1.2 1.3 2.7 2.2 4.4 3a17 17 0 0 0 5.7 1c2 0 4-.3 5.7-1s3-1.6 4.3-3 2-2.8 2.7-4.7c.6-1.8 1-4 1-6.3v-40.3c0-.3.1-.7.3-1s.6-.5 1-.7 1.2-.3 2-.4l3.3-.2c1.3 0 2.4.1 3.2.2s1.5.2 2 .4 1 .4 1 .7.3.6.3 1V190zm60.2-.5c0 4-.4 7.8-1.3 11a25 25 0 0 1-3.9 8.4c-1.7 2.3-3.8 4-6.3 5.3s-5.4 2-8.6 2c-1.3 0-2.6-.1-3.7-.4a22 22 0 0 1-3.3-1.2c-1-.5-2-1.2-3-2a64 64 0 0 1-3.2-2.8v21.7c0 .3-.1.7-.3 1s-.6.5-1 .7-1.2.3-2 .4-2 .2-3.2.2-2.3-.1-3.2-.2-1.5-.3-2-.4c-.5-.2-1-.4-1-.7s-.3-.6-.3-1V167c0-.3.1-.6.3-1s.5-.5 1-.6c.4-.2 1-.3 1.7-.4s1.6-.1 2.7-.1h2.6c.7.1 1.3.2 1.7.4l1 .6c.2.3.3.6.3 1v5.4c1.3-1.4 2.7-2.6 4-3.6s2.6-2 4-2.6c1.3-.7 2.7-1.2 4.2-1.6 1.4-.3 3-.5 4.6-.5 3.4 0 6.3.7 8.6 2 2.4 1.3 4.3 3 5.8 5.5a25 25 0 0 1 3.3 8c.7 3 1 6.3 1 9.8zm-13.6 1l-.4-5.7c-.3-1.8-.8-3.4-1.5-4.8s-1.6-2.5-2.8-3.4c-1.2-.8-2.6-1.3-4.3-1.3-1 0-1.7.1-2.6.4-.8.3-1.7.7-2.6 1.3s-1.8 1.3-2.7 2.3l-3 3.5V198a34 34 0 0 0 5.2 5.4c1.6 1.3 3.4 2 5.2 2 1.7 0 3-.4 4.3-1.3s2.2-2 3-3.4 1.3-3 1.7-4.7.6-3.6.6-5.4zm128-191h-211C20-.6.2 19.3.2 44v211c0 24.6 20 44.5 44.5 44.5h211c24.6 0 44.5-20 44.5-44.5V44c.1-24.6-19.8-44.5-44.4-44.5zM281 235.6c0 24.6-20 44.5-44.5 44.5H64c-24.6 0-44.5-20-44.5-44.5V63.3c0-24.6 20-44.5 44.5-44.5h172.4c24.6 0 44.5 20 44.5 44.5v172.3z"},
                ]
            }
        ]
    },
    hand:{
        viewBox:"16 16",
        groups:[
            {
                paths:[
                    {d:"M13.5 2.4c-.4-.4-1-.5-1.5-.3 0-.3-.1-.6-.4-.9-.2-.2-.6-.4-1.1-.4-.3 0-.5.1-.7.1 0-.2-.1-.3-.2-.5-.5-.6-1.5-.6-2 0-.2.2-.4.4-.4.6C7 1 6.8.9 6.6.9c-.5 0-.8.2-1.1.5C5 1.9 5 2.7 5 2.7v3.8c-.3-.3-.8-.8-1.5-.8-.2 0-.5.1-.7.2-.4.2-.6.5-.7.9-.3 1 .6 2.4.6 2.5.1.1 1.2 2.7 2.2 3.8C5.9 14.3 7 15 9.8 15c2.9 0 4.2-1.6 4.2-5.1V4.4c0-.1.1-1.3-.5-2zM8 2c0-.3-.1-1 .5-1 .5 0 .5.5.5 1v4c0 .3.2.5.5.5s.5-.2.5-.5V2.2s0-.4.5-.4c.6 0 .5.9.5.9V6c0 .3.2.5.5.5s.5-.2.5-.5V3.6c0-.1 0-.6.5-.6s.5 1 .5 1v5.9c0 3.4-1.3 4.1-3.2 4.1-2.4 0-3.3-.5-4.1-1.6a17 17 0 0 1-2.1-3.7c-.3-.3-.7-1.2-.6-1.6 0-.1.1-.2.2-.3.1 0 .2-.1.2-.1.4 0 .8.5.9.7l.6.9c.1.2.4.3.6.2.4 0 .5-.2.5-.4V2.9c0-.4 0-1 .5-1 .4 0 .5.3.5.8V6c0 .3.2.5.5.5S8 6.3 8 6z"}
                ]
            }
        ]
    }, 
    grab:{
        viewBox:"16 16",
        groups:[
            {
                paths:[
                    {d:"M12.6 4H12c0-.2-.2-.6-.4-.8s-.5-.4-1.1-.4c-.2 0-.4 0-.6.1-.1-.2-.2-.3-.3-.5-.2-.2-.5-.4-1.1-.4-.8 0-1.2.5-1.4 1-.1 0-.3-.1-.5-.1-.5 0-.8.2-1.1.4C5 3.9 5 4.7 5 4.8v.4c-.6 0-1.1.2-1.4.5C3 6.4 3 7.3 3 8.5v.7c0 1.4.7 2.1 1.4 2.8l.3.4C6 13.6 7.2 14 9.8 14c2.9 0 4.2-1.6 4.2-5.1V6.4c0-.7-.2-2.1-1.4-2.4zm-2.1-.2c.4 0 .5.4.5.6v.8c0 .3.2.5.4.5.3 0 .5-.1.5-.4 0 0 0-.4.4-.3.6.2.7 1.1.7 1.3v2.6c0 3.4-1.3 4.1-3.2 4.1-2.4 0-3.3-.3-4.3-1.3l-.4-.4C4.4 10.6 4 10.2 4 9.2v-.6c0-1 0-1.8.3-2.1.1-.2.4-.3.7-.3V7l-.3 1.2c0 .1 0 .1.1.1.1.1.2 0 .2 0l1-1.2V7 5c0-.1 0-.6.2-.8.1-.1.2-.2.4-.2.3 0 .4.2.4.4v.4c0 .2.2.5.5.5S8 5 8 4.8V3.5c0-.1 0-.5.5-.5.3 0 .5.2.5.5v1.2c0 .3.2.6.5.6s.5-.3.5-.5v-.5c0-.3.2-.5.5-.5z"}
                ]
            }
        ]
    },
    mouseMove:{
        viewBox:"405.8 289.5",
        groups:[
            {
                paths:[
                    {d:"M117.6 71v22.6c0 9.7-8 17.6-17.6 17.6s-17.6-8-17.6-17.6V71c0-9.7 8-17.6 17.6-17.6s17.6 8 17.6 17.6zM90 165.5h20v-35.8c16.3-4.5 27.6-19.3 27.6-36.2V71c0-17-11.3-31.7-27.6-36.2V0a100 100 0 0 1 90 99.5v90a100 100 0 0 1-100 100c-55 0-100-67-100-122v-68"},
                    {fill:"#0bbfff",d:"M0 166V99.5A100 100 0 0 1 89.7 0c.1 0 .1 0 .2.1s.1.1.1.2v34.2c0 .1-.1.2-.2.2C73.6 39.3 62.4 54 62.4 71v22.6c0 16.8 11.2 31.6 27.4 36.2.1 0 .2.1.2.2v35.4c0 .1 0 .1.1.2s.1.1.2.1zm403.8-15.6l-39-29.2a5 5 0 0 0-5-.4c-1.6.8-2.7 2.5-2.7 4.3v16h-34.7v-34.6h15.8c2 0 3.6-1 4.4-2.8s.5-3.7-.7-5.2l-29-38.8c-1-1.2-2.4-2-4-2s-3 .7-4 2l-29 39c-1 1.5-1.3 3.4-.4 5s2.5 2.7 4.3 2.7h15.8V141H261v-16c0-1.8-1-3.5-2.7-4.3s-3.6-.7-5 .4l-39 29c-1.2 1-2 2.4-2 4s.7 3 2 4l39 29.2c1.5 1 3.4 1.3 5 .4s2.7-2.5 2.7-4.3v-15.8h34.6v34.7H280c-1.8 0-3.5 1-4.3 2.7s-.7 3.6.4 5l29 39c1 1.2 2.4 2 4 2s3-.7 4-2l29-39c1-1.5 1.3-3.4.4-5s-2.5-2.7-4.3-2.7h-15.8v-34.7H357v15.8h0c0 2 1 3.6 2.8 4.4s3.7.5 5.2-.7l39-29c1.2-1 2-2.4 2-4s-.7-3-2-4z"}
                ]
            }
        ]
    },
    scrollDn:{
        viewBox:"298 289.5",
        groups:[
            {
                paths:[
                    {fill:"#0bbfff",d:"M117.6 71v22.6c0 9.7-8 17.6-17.6 17.6s-17.6-8-17.6-17.6V71c0-9.7 8-17.6 17.6-17.6s17.6 8 17.6 17.6z"},
                    {d:"M200 189.5a100 100 0 1 1-200 0v-90A100 100 0 0 1 90 0v34.7C73.7 39.2 62.4 54 62.4 71v22.6c0 17 11.3 31.7 27.6 36.2v35.8h20v-35.8c16.3-4.5 27.6-19.3 27.6-36.2V71c0-17-11.3-31.7-27.6-36.2V0a100 100 0 0 1 90 99.5z"},
                    {fill:"#0bbfff",d:"M250.7 11.5v53H235c-2 0-3.6 1-4.4 2.8s-.5 3.8.7 5.2l29 39c1 1.2 2.4 2 4 2s3-.7 4-2l29-39c1-1.5 1.3-3.4.4-5s-2.5-2.7-4.3-2.7h-15.8v-53z"}
                ]
            }
        ]
    },
    scrollUp:{
        viewBox:"298 289.5",
        groups:[
            {
                paths:[
                    {fill:"#0bbfff",d:"M117.6 71v22.6c0 9.7-8 17.6-17.6 17.6s-17.6-8-17.6-17.6V71c0-9.7 8-17.6 17.6-17.6s17.6 8 17.6 17.6z"},
                    {d:"M200 189.5a100 100 0 1 1-200 0v-90A100 100 0 0 1 90 0v34.7C73.7 39.2 62.4 54 62.4 71v22.6c0 17 11.3 31.7 27.6 36.2v35.8h20v-35.8c16.3-4.5 27.6-19.3 27.6-36.2V71c0-17-11.3-31.7-27.6-36.2V0a100 100 0 0 1 90 99.5z"},
                    {fill:"#0bbfff",d:"M277.3 113.2v-53h15.8c2 0 3.6-1 4.4-2.8s.5-3.7-.7-5.2l-29-38.8c-1-1.2-2.4-2-4-2s-3 .7-4 2l-29 39c-1 1.5-1.3 3.4-.4 5s2.5 2.7 4.3 2.7h15.8v53z"}
                ]
            }
        ]
    },
    touchZoomOut:{
        viewBox:"305.5 301.2",
        groups:[
            {
                paths:[
                    {d:"M304 173a43 43 0 0 0-17.6-29.8c-5.6-3.8-12-6-18.7-6.7-8.4-11.5-19.2-14-27-14-2.5 0-5 .2-7.3.7a34 34 0 0 0-26.2-11.8h-1v-9.4c0-8.6-3-16.2-9-21.5a29 29 0 0 0-19.4-7.2l-4 .3a1150 1150 0 0 0-55.8 14.6 28 28 0 0 0-21.4 31.3 29 29 0 0 0 13.6 21.5l-4-.4h0c-12.7 0-24 8.4-27.5 20.6a28 28 0 0 0 .8 18.2c2.6 6.3 7.2 11.7 13 15.3 17.5 11.2 36.3 39 45.4 52.5l.6 1 13.8 22.8 13.8 22.6c3.5 5 9.4 8.2 15.6 8.2h78c9.3 0 17.2-6.8 18.6-16l4-25c19.6-30 26.4-58 21.5-87.5zm-33 84.6l-4 26c-.5 3.3-3.4 5.8-6.8 5.8h-78c-2.3 0-4.4-1-5.7-3-5.8-8.5-21.4-36.2-27.7-45.4-9.8-14.5-29.5-44-49.4-56.7-17.3-11.2-8.5-31.8 7.2-31.8 2.5 0 5 .5 7.3 1.5 10 4 17.5 12.8 25.4 19.7 4 3.4 8.4 5.3 12.6 5.3 5 0 8.6-2.8 8.6-9v-37c.1-1.8-.5-3.5-1.8-4.8s-3-2-4.7-2c-.5 0-1 .1-1.5.2l-23 6a19 19 0 0 1-4.8.6c-18 0-23.5-28-3.5-33.2l54.3-14.3 2.3-.2c8.4 0 16.6 5.6 16.6 16.7v15a7 7 0 0 0 6.9 6.9c.4 0 .8 0 1.2-.1a30 30 0 0 1 4.9-.4c7.4-.2 14.4 3.5 18.6 9.6 1.3 1.8 3.3 2.8 5.5 2.8.6 0 1.2-.1 1.8-.2 2.4-.7 5-1 7.5-1 6 0 12.8 2.2 18.2 10.6 1.2 2 3.2 3 5.4 3.2 7.4.3 23.8 3.7 27.7 26.8 3.6 21.6 1.4 47-20.2 80a7 7 0 0 0-1 2.8zm-148.7-113c.8.1 1.6.1 2.4.1 2.5 0 5-.3 7.4-1l16.2-4.3V166c0-.4-1-.8-1.7-1.4l-5-5c-5.5-5.2-11.5-11-19.3-15z"},
                    {fill:"#0bbfff",d:"M25.6 0v65.4H6a6 6 0 0 0-4.6 9.8l35.8 48a6 6 0 0 0 9.6 0l36-48.3a6 6 0 0 0-4.8-9.6H58.5V0zm33 295.7v-65.4H78a6 6 0 0 0 4.6-9.9l-35.8-48a6 6 0 0 0-9.6 0l-36 48.3a6 6 0 0 0 4.8 9.6h19.5v65.4z"}
                ]
            }
        ]
    },
    touchZoomIn:{
        viewBox:"409 299.5",
        groups:[
            {
                paths:[
                    {d:"M101.3 70l84.4 114.5c.6 1 .7 2 .2 3s-1.3 1.6-2.3 1.8a432 432 0 0 0-48.3 10.5c-13.4 3.6-23.6 12.8-28 25a38 38 0 0 0 5.2 35.1c8 11 21.3 16.6 36.4 15.6l35.5-5c17.4-3 34-6 44-2.6a699 699 0 0 1 58.8 28.3c8.8 4.7 19.5 4 27.6-2l83.7-61.7c10.5-7.7 13.4-22.4 7-33.8l-19.5-35.3c-2.6-45-10.7-74-27-96-3.6-4.8-7.6-9.4-12-13.6-16-15.5-31.7-18.4-42-18-9 .3-18 3-25.8 7.5-17.6-5.3-35-.5-48 13.4a45 45 0 0 0-37.8 8.4l-30.2-41c-13-17.6-36.2-21-53.8-8S88.3 52.5 101.3 70zm98 11.7c6.4-6.3 16.8-12.6 31.2-8 3.8 1.2 8-.1 10.5-3.2C247 63.3 259 53 277 60c3 1 6 .7 8.7-1 8.3-5.5 28.4-14.4 50.5 7a91 91 0 0 1 10.1 11.5c14.2 19.3 21.5 45.6 24 88.6.1 1.5.5 3 1.2 4.2l20.3 36.8c2.5 4.4 1.4 10-2.6 13l-83.7 61.7c-3.2 2-7.2 2.3-10.6.5L234 253c-22-7.7-54.5 4.6-86 6.6-10.6.7-18-3.3-22.4-9-8.4-11.4-4.2-30 14-35 15.3-4.3 30.8-7.7 46.5-10.2 6.6-1 12.3-5.4 15-11.6s1.7-13.3-2.2-18.7L115 61.2c-17.6-24 18.2-50.4 36-26.4l33.8 46c1.7 2.3 4.3 3.8 7 4s5.6-.8 7.6-2.8z"},
                    {fill:"#0bbfff",d:"M58.5 125.7V60.3H78a6 6 0 0 0 6-6c0-1.4-.5-2.8-1.5-3.8l-35.8-48a6 6 0 0 0-9.6 0L1 50.8A6 6 0 0 0 6 60.4h19.6v65.4zm-33 44.3v65.4H6a6 6 0 0 0-4.6 9.9l35.8 48a6 6 0 0 0 9.6 0l36-48.3a6 6 0 0 0-4.8-9.6H58.5V170z"}
                ]
            }
        ]
    },
    touchMove:{
        viewBox:"409.5 255.3",
        groups:[
            {
                paths:[
                    {d:"M390.2 96.2c-5.4-3.6-11.6-5.8-18-6.4a33 33 0 0 0-27.2-13.7c-2.5 0-5 .2-7.4.7a33 33 0 0 0-25.6-11.5h-.6V28.5c.2-8-3.2-15.8-9.2-21.2A28 28 0 0 0 282.9 0a29 29 0 0 0-20.4 8.2 28 28 0 0 0-8 20.2l.1 53.2v33.7a31 31 0 0 0-15.3 18.7c-3.7 12.7-.8 29 9 50.2 5.2 11 11.3 21.4 18 31.4l1.7 22a19 19 0 0 0 18.9 17.6l78.6-.1a19 19 0 0 0 18.8-16.5l3-23.3c18.6-29 25.4-59.3 20.2-89.7-2.8-16.5-11-25-17.6-29.5zM377 210c-.6 1-1 2-1 3l-3.2 24.4c-.5 3.4-3.4 6-7 6H287h0c-3.6.1-6.7-2.7-7-6.3l-1.8-23.3a7 7 0 0 0-1.2-3.4c-7.2-10.5-47.4-71.4-14.8-85a7 7 0 0 0 4.3-6.4l-.1-90c0-11 8.2-16.4 16.4-16.4s16.4 5.5 16.4 16.4l.1 42.3a7 7 0 0 0 7 7c.4 0 .7 0 1-.1 1.5-.2 3-.4 4.5-.4 7.2-.1 14 3.4 18 9.3 1.3 1.8 3.4 2.8 5.6 2.8a11 11 0 0 0 1.8-.2c2.5-.6 5-1 7.5-1 6.2 0 13.4 2.2 18.8 10.7 1 1.7 3 2.8 5 2.8 7 .3 23.6 3.4 27.4 26.2 3.5 21 1.8 49.5-19.2 82z"},
                    {fill:"#0bbfff",d:"M231.7 121.6l-47.2-35.2c-2.6-2-6.3-1.3-8.2 1.3-.7 1-1 2-1 3.4v19h-42V68h19c3.2 0 5.8-2.6 5.8-5.8 0-1.4-.5-2.7-1.3-3.8l-35-47c-1-1.3-2.3-2-4-2.3s-3 .2-4.4 1.2c-.4.3-.8.7-1 1L77 58.8c-1.8 2.6-1.3 6.2 1 8.2 1 .8 2.3 1.2 3.6 1h19v42H59V91c0-3.2-2.6-5.8-5.8-5.8-1.3 0-2.5.4-3.5 1L2.4 121.6c-1.3 1-2 2.3-2.3 4s.2 3 1.2 4.4c.4.4.8 1 1 1L49.6 166a6 6 0 0 0 8.2-1.3c.8-1 1.2-2.3 1-3.6v-19h42v42h-19c-3.2 0-5.8 2.6-5.8 5.8 0 1.3.4 2.5 1 3.5l35.2 47.2a6 6 0 0 0 8.2 1.3c.5-.4 1-.8 1.3-1.3l35.2-47.2c1.8-2.6 1.3-6.2-1-8.2-1-.8-2.3-1.2-3.6-1h-19v-42h42v19.3h0c0 3.2 2.6 5.8 5.8 5.8 1.4 0 2.7-.5 3.8-1.3l47-35c1.3-1 2-2.3 2.3-4s-.2-3-1.2-4.4c-.4-.4-.7-1-1.3-1z"}
                ]
            }
        ]
    },
    undo:{
        viewBox:"18.4 20.8",
        groups:[
            {
                paths:[
                    {d:"M0 11.6c0-.1.1-.2.1-.3s.2-.1.3-.1h2.4c.1 0 .2 0 .3.1s.1.2.1.3c0 2.5 1.5 4.6 3.8 5.5s4.9.1 6.5-1.7 1.8-4.5.6-6.7-3.7-3.2-6.1-2.8V8c0 .2-.1.4-.3.5-.2.1-.4 0-.5-.1L2.5 4.6c-.1-.1-.1-.2-.1-.3s.1-.2.1-.3L7.4.2c.1-.2.3-.2.5-.1.2.1.3.3.3.5v2l1-.1c5.1 0 9.2 4.1 9.2 9.2s-4.1 9.2-9.2 9.2S0 16.8 0 11.7z"}
                ]
            }
        ]
    },
    animate:{
        viewBox:"512 512",
        groups:[
            {
                paths:[
                    {d:"M68.8 394.3L90 344.7l51.6 51.6-17 34.7a32 32 0 0 1-6.4 8.9l-64 62.3a32 32 0 1 1-45-45.8l52.5-52a32 32 0 0 0 6.9-10.1zm25-180.8l26.5-10.5-18 82.6a16 16 0 0 0 3.5 13.8l.3.3 53.3 60.3-.2.5.2-.5 32.8 44.2a32 32 0 0 1 5.3 11.1L216 487a32 32 0 1 0 62.3-15.8L257 385.8a32 32 0 0 0-6-12.2l-54.4-68.2 17-65.7 9.7 25.7a32 32 0 0 0 10.6 14.2l34 25.8a32 32 0 1 0 38.8-51l-25-19a32 32 0 0 1-10.2-13.3l-21.7-52.7c-2.8-6.8-8-12-14-15h0s-25.7-17.4-44.5-22.5c-19.6-5.3-50.6-2-54.2-1.5a32 32 0 0 0-11.8 2.2L52 161a10 10 0 0 0-4.3 3.3l-33 44a32 32 0 1 0 51.2 38.5L87 218.7a16 16 0 0 1 6.9-5.2zM199.4 112a56 56 0 1 0 0-112 56 56 0 1 0 0 112z"}
                ]
            }
        ]
    },
    menu:{
        viewBox:"297 297",
        groups:[
            {
                paths:[
                    {d:"M279.4 24.7H103c-9.7 0-17.6 8-17.6 17.6V68c0 9.7 8 17.6 17.6 17.6h176.4c9.7 0 17.6-8 17.6-17.6V42.4c0-9.7-8-17.6-17.6-17.6zm0 93.3H103c-9.7 0-17.6 8-17.6 17.6v25.6c0 9.7 8 17.6 17.6 17.6h176.4c9.7 0 17.6-8 17.6-17.6v-25.6c0-9.7-8-17.6-17.6-17.6zm0 93.4H103c-9.7 0-17.6 8-17.6 17.6v25.6c0 9.7 8 17.6 17.6 17.6h176.4c9.7 0 17.6-8 17.6-17.6V229c0-9.7-8-17.6-17.6-17.6zM46 24.7H17.6C8 24.7 0 32.6 0 42.4V68c0 9.7 8 17.6 17.6 17.6H46c9.7 0 17.6-8 17.6-17.6V42.4c0-9.7-8-17.6-17.6-17.6zm0 93.3H17.6C8 118 0 126 0 135.7v25.6C0 171 8 179 17.6 179H46c9.7 0 17.6-8 17.6-17.6v-25.6c0-9.7-8-17.6-17.6-17.6zm0 93.4H17.6C8 211.4 0 219.4 0 229v25.6c0 9.7 8 17.6 17.6 17.6H46c9.7 0 17.6-8 17.6-17.6V229c0-9.7-8-17.6-17.6-17.6z"}
                ]
            }
        ]
    },
}
const MISC = window.MISC = {//Common functions
    waitUndefinedElem : (clsName:string,index:number)=>{
        return new Promise((resolve:any)=>{
            let wait = setInterval(() => {
                if(typeof(document.getElementsByClassName(clsName!)[index!]) != "undefined"){
                    clearInterval(wait)
                    resolve()
                }
            }, 250);
        })
    },
    newElem: (elem:elemTemplate)=>{
        let nElem : any = document.createElement(elem.type!)

        nElem.id = elem.id || ""
        nElem.className = elem.class || ""
        // nElem.innerHTML = elem.innerHTML || nElem.innerHTML
        nElem.innerText = elem.innerText || ""

        typeof(elem.identity) == "string" ? 
            elem.identity.includes("#") ? nElem.setAttribute("id",elem.identity.substring(1))
            : elem.identity.includes(".") ? nElem.setAttribute("class",elem.identity.substring(1))
            : MISC.throwError("newElem 'identity' must follow jQuery class('."+ elem.identity +"') and id('#"+ elem.identity +"') syntax")
        : null

        if(elem.tabbable == true){nElem.tabIndex = 0}
    
        if(typeof elem.attributes == "object" && Object.entries(elem.attributes).length != 0){
            Object.entries(elem.attributes).forEach(([key,value])=>{
                nElem.setAttribute(key,value)
            })
        }

        if(typeof elem.props == "object" && Object.entries(elem.props).length != 0){
            Object.entries(elem.props).forEach(([key,value])=>{
                nElem[key] = value
            })
        }

        (()=>{ //custom props
            nElem.showState = ()=>{
                MISC.setStyle(nElem,{opacity:""})
                MISC.updateCls(nElem,"-hidden")
            }
            nElem.tempHideState = ()=>{
                MISC.setStyle(nElem,{opacity:0})
                MISC.updateCls(nElem,"-hidden")
            }
            nElem.opacityState = (num:any = "")=>{
                MISC.setStyle(nElem,{opacity:num})
                MISC.updateCls(nElem,"-hidden")
            }
            nElem.hideState = ()=>{
                MISC.updateCls(nElem,"+hidden")
            }
        })();

        if(typeof elem.events == "object" && Object.entries(elem.events).length != 0){
            MISC.setupEvents(nElem,elem.events)
        }
        
        if(typeof elem.appendTo == "object"){
            elem.appendTo.appendChild(nElem)
        }
        
        if(typeof elem.setup == "function"){
            setTimeout(()=>{
                elem.setup()
            },100)
        }

        return nElem
    },
    objMerge:(trgtObj:object,props:object)=>{

        let obj:any = {}

        Object.entries(trgtObj).forEach(([key,value])=>{
            obj[key] = value
        })
        Object.entries(props).forEach(([key,value])=>{
            obj[key] = value
        })

        return obj
    },
    updateCls: (trgtElem:any,args:string | string[])=>{
        let addCls = (trgt:any,item:string)=>!trgt.classList.contains(item.slice(1))?trgt.classList.add(item.slice(1)):null;
        let subCls = (trgt:any,item:string)=>trgt.classList.contains(item.slice(1))?trgt.classList.remove(item.slice(1)):null;
        let verCls = (trgt:any,item:string)=>{
            !item.includes(" ")?
                item.charAt(0) == "-"?
                    subCls(trgt,item)
                : item.charAt(0) == "+"?
                    addCls(trgt,item)
                : MISC.throwError("place '+' or '-' infront of the className to be add or removed")
            : MISC.throwError("className: " + args + " must not have any 'space'")
        }
        let chkClsArray = (trgt:any,args:string[])=>{
            for(let i=0;i<args.length;i++){
                typeof(args[i]) == "string"? verCls(trgt,args[i])
                : MISC.throwError("items of 'args' of updateCls must be a 'string' only")
            } 
        }
        
        if(Array.isArray(trgtElem)){
            for(let i=0;i<trgtElem.length;i++){
                typeof(trgtElem[i]) != "undefined"?
                Array.isArray(args)?chkClsArray(trgtElem[i],args)
                    : typeof(args) == "string"?verCls(trgtElem[i],args)
                    : MISC.throwError("'args' of updateCls can be an 'array' or 'string'")
                : MISC.throwError("trgtElem is 'undefined' on updateCls")
            } 

        } else {
            typeof(trgtElem) != "undefined"?
                Array.isArray(args)?chkClsArray(trgtElem,args)
                : typeof(args) == "string"?verCls(trgtElem,args)
                : MISC.throwError("'args' of updateCls can be an 'array' or 'string'")
            : MISC.throwError("trgtElem is 'undefined' on updateCls")
        }

    },
    throwError:(string:any)=>{
        typeof(string!)=="string"?
            string = new Error(string)
        : string = new Error("throwError only accepts 'string'")

        throw string
    },
    setupEvents:(elem:any,events:eventsTemplate)=>{
        if (typeof(events) == "object"){
            if(Object.entries(events).length == 1 && typeof events.custom != "undefined"){
            } else {
                if(!["undefined","function"].includes(typeof(events.onOver))){
                    MISC.throwError("events.onOver must be a 'function'")
                } else if(!["undefined","function"].includes(typeof(events.onSelect))){
                    MISC.throwError("events.onSelect must be a 'function'")
                } else if(!["undefined","function"].includes(typeof(events.onActive))){
                    MISC.throwError("events.onActive must be a 'function'")
                } else if(!["undefined","function"].includes(typeof(events.onLeave))){
                    MISC.throwError("events.onLeave must be a 'function'")
                } else {
    
                    let dfltFunc = ()=>{}
                    events.onOver = events.onOver || dfltFunc
                    events.onSelect = events.onSelect || dfltFunc
                    events.onActive = events.onActive || dfltFunc
                    events.onLeave =  events.onLeave || dfltFunc
                    events.enableAllKeys = events.enableAllKeys || false //for onSelect fire event on Tab
                    events.disableKeys = events.disableKeys || false //for disabling Keyboard
    
                    let accessibilityFunc = {
                        overAnimCue:(event:any)=>{
                            if(event.target.classList.contains("ui-btn")){
                                event.target.parentElement.style.opacity = 1
                            }
                        },
                        selectAnimCue:(event:any)=>{
                            if(MISC.qs("svg",event.target)){
                                MISC.qsa("svg",event.target).forEach((elem:any) => {
                                    elem.style.padding = "10%"
                                    elem.style.fill = "#ffa500"
                                });
                            }
                        },
                        activeAnimCue:(event:any)=>{
                            if(MISC.qs("svg",event.target)){
                                MISC.qsa("svg",event.target).forEach((elem:any) => {
                                    elem.style.padding = ""
                                    elem.style.fill = ""
                                });
                            }
                        },
                        leaveAnimCue:(event:any)=>{
                            if(MISC.qs("svg",event.target)){
                                MISC.qsa("svg",event.target).forEach((elem:any) => {
                                    elem.style.padding = ""
                                    elem.style.fill = ""
                                });
                            }
                        }
    
                    }
                    let overflowFix = {
                        show:(event:any)=>{
                            if(event.target.classList.contains("ui-btn")){
                                event.target.parentElement.style.overflow = "visible"
                            }
                        },
                        hide:(event:any)=>{
                            if(event.target.classList.contains("ui-btn")){
                                event.target.parentElement.style.overflow = ""
                            }
                        }
                    }
    
                    if(events.disableKeys == true){
                        MISC.setStyle(elem,{
                            pointerEvents: "all"
                        })
                        elem.tabIndex = -1
                    }
    
    
                    let onOver =(event:any)=>{
                        let func = events.onOver
                        if(["pointerover","focus"].includes(event.type)){
                            overflowFix.show(event)
                            accessibilityFunc.overAnimCue(event)
                            func(event)
                        }
                    }
                    let onSelect =(event:any)=>{
                        let func = events.onSelect
                        let isSelected = ()=>event.target.isSelected = true
    
                        if(event.type == "pointerdown" && event.button != 2){
                            isSelected()
                            func(event)
                        } else if (event.type == "keydown" && ["Enter"," "].includes(event.key)){
                            isSelected()
                            accessibilityFunc.selectAnimCue(event)
                            func(event)
                        } else if (event.type == "keydown" && events.enableAllKeys == true){
                            func(event)
                        }
                    }
                    let onActive=(event:any)=>{
                        let func = events.onActive
                        let isSelected = event.target.isSelected
                        let isNotSelected = ()=>event.target.isSelected = false
    
                        if(event.type == "pointerup" && event.button != 2 && isSelected){
                            isNotSelected()
                            func(event)
                        } else if (event.type == "keyup" && ["Enter"," "].includes(event.key) && isSelected){
                            isNotSelected()
                            accessibilityFunc.activeAnimCue(event)
                            func(event)
                        }
                    }
                    let onLeave=(event:any)=>{
                        let func = events.onLeave
                        
                        if(["pointerleave","focusout","blur"].includes(event.type)){
                            overflowFix.hide(event)
                            accessibilityFunc.leaveAnimCue(event)
                            func(event)
                        }
                    }
        
                    elem.addEventListener("pointerover",onOver)
                    elem.addEventListener("focus",onOver)
                    
                    elem.addEventListener("pointerdown",onSelect)
                    elem.addEventListener("keydown",onSelect)
        
                    elem.addEventListener("pointerup",onActive)
                    elem.addEventListener("keyup",onActive)
        
                    elem.addEventListener("pointerleave",onLeave)
                    elem.addEventListener("focusOut",onLeave)
                    elem.addEventListener("blur",onLeave)
                }
            }

            if(typeof (events.custom) == "object" && Object.entries(events.custom).length != 0){
                Object.entries(events.custom).forEach(([key,value])=>{
                    if(typeof value == "function"){
                        elem.addEventListener(key,value)
                    } else MISC.throwError("custom func on setupEvent must be a function")
                })
            }
        } else MISC.throwError("setupEvents' 'elem' && 'events' must be both 'object's")
    },
    useDataImage:(image:string)=>{
        if(typeof(dataImage[image]) != "undefined"){
            return "data:image/svg+xml;base64," + dataImage[image]
        } else MISC.throwError("dataImage." + image + " is missing")
    },
    waitFor:(dur:number)=>{
        return new Promise((resolve:any)=>{
            window.setTimeout(()=>resolve(),dur)
        })
    },
    replaceIfNull:(trgt:any,replacement:any)=>{
        if(typeof(trgt) == "undefined"){
            return replacement
        } else return trgt
    },
    textToSpeech:(text:string)=>{
        var msg = new SpeechSynthesisUtterance(text!);
        msg.rate = 0.7;
        msg.pitch = 1;
        window.speechSynthesis.speak(msg);
    },
    toHH_MM_SS:(time:number)=>{
        if(time! > 3600){
            return new Date(time * 1000).toISOString().substr(11, 8)
        } else {
            return new Date(time * 1000).toISOString().substr(14, 5)
        }
    },
    toSeconds:(time:string)=>{
        let timeArray = time.split(":")
        // var HH,MM,SS
        if(timeArray.length == 3){
            let HH = parseFloat(timeArray[0])
            let MM = parseFloat(timeArray[1])
            let SS = parseFloat(timeArray[2])

            return (HH * 60 * 60) + (MM * 60) + SS
        } else if (timeArray.length == 2){
            let MM = parseFloat(timeArray[0])
            let SS = parseFloat(timeArray[1])

            return (MM * 60) + SS
        }

    },
    getSVG:(name:string)=>{
        if(typeof(dataImage[name]) != "undefined"){
            let trgtSvg = dataImage[name]
            let xmlns = "http://www.w3.org/2000/svg";

            if(typeof trgtSvg.src != "undefined"){
                let svg:any = MISC.getSVG(trgtSvg.src)
                if (typeof trgtSvg.styles != "undefined"){
                    trgtSvg.styles.forEach((style:any)=>{
                        MISC.setStyle(svg,{
                            [style.name]: style.val
                        })
                    })
                    return svg
                } else {MISC.throwError("dataImage['" + name + "'].styles is undefined")}
            } else {
                let svg = document.createElementNS(xmlns, "svg")
                svg.setAttributeNS(null,"viewBox","0 0 " + trgtSvg.viewBox)
                svg.setAttributeNS(null,"width",trgtSvg.viewBox.split(" ")[0])
                svg.setAttributeNS(null,"height",trgtSvg.viewBox.split(" ")[1])

                trgtSvg.groups.forEach((group:{ //setup groups
                    styles?:string[],
                    paths:any
                })=>{
                    let cGroup = document.createElementNS(xmlns,"g")

                    if(typeof group.styles != "undefined"){
                        group.styles.forEach((style:any)=>{
                            MISC.setSVGStyle(cGroup,style.name,style.val)
                        })
                    }

                    group.paths.forEach((shape:{ //setup paths for each group
                        type?:string,
                        d?:string,
                        points?:string,
                        x1?:string,
                        x2?:string,
                        y1?:string,
                        y2?:string,
                        rx?:string,
                        ry?:string,
                        cx?:string,
                        cy?:string,
                        r?:string,
                        x?:string,
                        y?:string,
                        width?:string,
                        height?:string,
                        fill?:string,
                        stroke?:string,
                        styles?:string[]
                    })=>{
                        let nShape :any;
                        if(shape.type == "circle"){
                            nShape = document.createElementNS(xmlns,"circle")
                            nShape.setAttributeNS(null,"r",shape.r!)
                            nShape.setAttributeNS(null,"cx",shape.cx!)
                            nShape.setAttributeNS(null,"cy",shape.cy!)
                        } else if (shape.type == "rect"){
                            nShape = document.createElementNS(xmlns,"rect")
                            nShape.setAttributeNS(null,"width",shape.width || "")
                            nShape.setAttributeNS(null,"height",shape.height || "")
                            if(typeof shape.rx != "undefined"){
                                nShape.setAttributeNS(null,"rx",shape.rx || "")
                            }
                            if(typeof shape.ry != "undefined"){
                                nShape.setAttributeNS(null,"ry",shape.ry || "")
                            }
                            if(typeof shape.x != "undefined"){
                                nShape.setAttributeNS(null,"x",shape.x || "")
                            }
                            if(typeof shape.y != "undefined"){
                                nShape.setAttributeNS(null,"y",shape.y || "")
                            }
                        } else if (shape.type == "ellipse"){
                            nShape = document.createElementNS(xmlns,"ellipse")
                            nShape.setAttributeNS(null,"cx",shape.cx!)
                            nShape.setAttributeNS(null,"cy",shape.cy!)
                            nShape.setAttributeNS(null,"rx",shape.rx!)
                            nShape.setAttributeNS(null,"ry",shape.ry!)
                        } else if (shape.type == "line"){
                            nShape = document.createElementNS(xmlns,"line")
                            nShape.setAttributeNS(null,"x1",shape.x1!)
                            nShape.setAttributeNS(null,"x2",shape.x2!)
                            nShape.setAttributeNS(null,"y1",shape.y1!)
                            nShape.setAttributeNS(null,"y2",shape.y2!)
                        } else if (shape.type == "polyline"){
                            nShape = document.createElementNS(xmlns,"polyline")
                            nShape.setAttributeNS(null,"points",shape.points!)
                        } else if (shape.type == "polygon"){
                            nShape = document.createElementNS(xmlns,"polygon")
                            nShape.setAttributeNS(null,"points",shape.points!)
                        } else {
                            nShape = document.createElementNS(xmlns,"path")
                            nShape.setAttributeNS(null,"d",shape.d!)
                        }
    
                        //colors
                        if(typeof shape.fill != "undefined"){
                            nShape.setAttribute("fill",shape.fill)
                        }
                        if(typeof shape.stroke != "undefined"){
                            nShape.setAttribute("stroke",shape.stroke)
                        }
                        if(typeof shape.styles != "undefined"){
                            shape.styles.forEach((style:any)=>{
                                MISC.setSVGStyle(cGroup,style.name,style.val)
                            })
                        }
                        cGroup.appendChild(nShape)
                    })
    
                    svg.appendChild(cGroup)
                })
    
                return svg
            }

            
            
        } else MISC.throwError("dataImage['" + name + "'] is undefined")
    },
    setSVGStyle:(elem:any,styleName:string,styleVal:string)=>{
        elem.setAttributeNS(null,styleName,styleVal)
    },
    setStyle:(elem:any,styles:object)=>{
        Object.entries(styles).forEach(([key,value])=>{
            elem.style[key] = value
        })
    },
    qs:(selector:string, parent:any = document)=>{
        return parent.querySelector(selector)
    },
    qsa:(selector:string, parent:any = document)=>{
        return parent.querySelectorAll(selector)
    },
    getHHcat:(time:number)=>{//get hour category
        return Math.trunc(time/3600) + "HH"
        //remove remainder to get the integer only
    },
    getMMcat:(time:number)=>{//get ##min category
        return Math.trunc((time % 3600) / (60*10)) * 10 +"MM"
        //get remainder by removing every 3600 seconds
        //isolate 10's place first digit by Math.trunc and divide by 60 secs * 10 minutes
        //multiply by 10 to get 10's place
    },
    getMcat:(time:number)=>{//get #min category
        return Math.trunc((time % 3600)/60) % 10 + "M"
        //get remainder by removing every 3600 seconds
        //divide by 60secs to get all minutes and then remove remainder
        //get remainder by removing every 10 minutes
    },
    getSScat:(time:number)=>{//get ##sec category
        return Math.trunc(((time%3600)%60)/10) * 10 + "SS"
        //get remainder by removing every 3600 seconds
        //get remainder by removing every 60 seconds
        //isolate first digit of the 10s digit and then MAth.trunc()
        //restore 10s first digit position
    },
    getScat:(time:number)=>{//get #sec category
        return Math.trunc(((((time%3600)%60)/10)%1)*10) + "S"
        //get remainder by removing every 3600 seconds
        //get remainder by removing every 60 seconds
        //isolate first digit of the 10s digit and then MAth.trunc()
        //get remainder by removing every 1 second
        //multiply 10 to restore single digit integer
        //Math.round to ensure no decimals, cuz JS add decimals wtf?
    },
    timeTemplate:()=>{
        let DDobj = (label = "MM")=>{
            return {
                ["0" + label]: SDobj(),
                ["10" + label]: SDobj(),
                ["20" + label]: SDobj(),
                ["30" + label]: SDobj(),
                ["40" + label]: SDobj(),
                ["50" + label]: SDobj(),
            }
        }
        let SDobj = (label = "M")=>{
            return {
                ["0" + label]: DDobj2(),
                ["1" + label]: DDobj2(),
                ["2" + label]: DDobj2(),
                ["3" + label]: DDobj2(),
                ["4" + label]: DDobj2(),
                ["5" + label]: DDobj2(),
                ["6" + label]: DDobj2(),
                ["7" + label]: DDobj2(),
                ["8" + label]: DDobj2(),
                ["9" + label]: DDobj2(),
            }
        }
        let DDobj2 = (label = "SS")=>{
            return {
                ["0" + label]: SDobj2(),
                ["10" + label]: SDobj2(),
                ["20" + label]: SDobj2(),
                ["30" + label]: SDobj2(),
                ["40" + label]: SDobj2(),
                ["50" + label]: SDobj2(),
            }
        }
        let SDobj2 = (label = "S")=>{
            return {
                ["0" + label]: addSnDCat(),
                ["1" + label]: addSnDCat(),
                ["2" + label]: addSnDCat(),
                ["3" + label]: addSnDCat(),
                ["4" + label]: addSnDCat(),
                ["5" + label]: addSnDCat(),
                ["6" + label]: addSnDCat(),
                ["7" + label]: addSnDCat(),
                ["8" + label]: addSnDCat(),
                ["9" + label]: addSnDCat(),
            }
        }
        let addSnDCat = ()=>{ //add spawn and despawn objects
            return {
                spawn:[],
                deSpawn:[],
            }
        }

        return DDobj()
        /* 
        HH1
            MM10
                MM1
                    SS10
                        SS0
                        SS1
                        SS2
                        SS3
                        SS4
                        SS5
                        SS6
                        SS7
                        SS8
                        SS9
                    SS20
                    SS30
                    SS40
                    SS50
                    SS60
                MM2
                MM3
                MM4
                MM5
                MM6
                MM7
                MM8
                MM9
            MM20
            MM30
            MM40
            MM50
            MM60
        HH2
    
        */
    },
    isEmpty:(trgt:any)=>{
        if(trgt == null || typeof trgt == "undefined"){
            return true
        } else return false
    },
    addToWindows:()=>{

    },
    isKeyEvent:(e:any)=>{
        if(e instanceof KeyboardEvent){
            return true
        } else return false
    },
    events:{
        onTabForward:(event:any)=>{
            if(event.key == "Tab" && !event.shiftKey){
                return true
            } else return false
        },
        onTabBackward:(event:any)=>{
            if(event.key == "Tab" && event.shiftKey){
                return true
            } else return false
        },
    },
    onBoundaryLeave: (obj:{ //chk if pointer is outside elem
        elem:any
        parent:string,
        setup:any
    })=>{
        //if outside elem the fire func()

        if(MISC.isEmpty(obj.elem.autoCloseToggle)){
            obj.elem.autoCloseToggle = 0
            obj.elem.autoClose = ()=>{
                let elemBelow = window.elemBelow
                let inside = elemBelow.closest(obj.parent) !== null
    
                if(!inside){
                    obj.setup()
                    if(typeof obj.elem.autoClose == "function"){
                        obj.elem.autoCloseToggle = 0
                        window.removeEventListener("pointerup",obj.elem.autoClose)
                    }
                }
            }
        }


        if(!MISC.isEmpty(obj.elem.autoCloseToggle) || obj.elem.autoCloseToggle != 1){
            obj.elem.autoCloseToggle = 1
            window.addEventListener("pointerup",obj.elem.autoClose)
        }
    }
}

//setup displayContainers
let loaderCont:any,
    hintCont:any,
    uiCont,
    inspectCont,
    panoCont,
    mdlCont,
    carouselCont,
    slideCont,
    docCont:any,
    interactiveVidCont
(()=>{
    let dfltCls = "flex-center hidden"
    loaderCont = MISC.newElem({
        type:"div",
        identity:".loading-screen flex-center",
        appendTo:document.body
    })
    hintCont = MISC.newElem({
        type:"div",
        identity:".ui-hints " + dfltCls,
        appendTo:document.body
    })
    uiCont = MISC.newElem({
        type:"div",
        identity:".ui-controls flex-center",
        appendTo:document.body
    })
    inspectCont = MISC.newElem({ //img,vid,link,audio
        type:"div",
        identity:".inspect-viewer " + dfltCls,
        appendTo:document.body
    })
    panoCont = MISC.newElem({
        type:"div",
        identity:".panorama-viewer " + dfltCls,
        appendTo:document.body
    })
    mdlCont = MISC.newElem({
        type:"div",
        identity:".model-viewer " + dfltCls,
        appendTo:document.body
    })
    carouselCont = MISC.newElem({
        type:"div",
        identity:".carousel-viewer " + dfltCls,
        appendTo:document.body
    })
    slideCont = MISC.newElem({
        type:"div",
        identity:".slideshow-viewer " + dfltCls,
        appendTo:document.body
    })
    docCont = MISC.newElem({
        type:"div",
        identity:".document-viewer " + dfltCls,
        appendTo:document.body
    })
    carouselCont = MISC.newElem({
        type:"div",
        identity:".interactive-viewer " + dfltCls,
        appendTo:document.body
    })

    MISC.updateCls(document.body,[
        "+vivify",
        "+dur-100",
        "+flex-center",
    ])

})();

(()=>{ //setup loader && default backgroundColor
    const loaderSVG = MISC.getSVG("loading")
    const loaderTXT = MISC.newElem({
        type:"div",
        identity:".loading-screen__text",
        innerText:"Loading..."
    })
    
    window.loader = {
        hide:()=>{
            window.loader.visible = false
            MISC.setSVGStyle(loaderSVG,"display","none")
            MISC.setStyle(loaderTXT,{
                display:"none"
            })
        },
        show:()=>{
            window.loader.visible = true
            MISC.setSVGStyle(loaderSVG,"display","")
            MISC.setStyle(loaderTXT,{
                display:""
            })
        },
        visible:true
    }

    loaderCont.appendChild(loaderSVG)
    loaderCont.appendChild(loaderTXT)
})();

(()=>{ //setup hints
    let interactiveHint1 = MISC.newElem({
        type:"div",
        identity:".interactiveHint-1 ui-4x4 hidden",
        tabbable:true
    });
    (()=>{

        let exitBtn = MISC.newElem({
            type:"div",
            identity:".hint-exit",
            // innerText:"×",
            // innerHTML:MISC.getSVG("exitViewer"),
            tabbable:true
        })
        let exitSvg = MISC.getSVG("exitViewer")
        exitBtn.appendChild(exitSvg)

        let genTitle=(name:string,cls?:string)=>{
            let title = MISC.newElem({
                type:"span",
                identity:".hint-title " + cls,
                innerText:name,
            })
            return title
        }
        let genImg=(src:string, name:string,cls?:string)=>{
            let imgCont = MISC.newElem({
                type:"div",
                identity: "." + cls
            })
            let svg = MISC.getSVG(src)
            let imgName = MISC.newElem({
                type:"span",
                identity:".hint-desc",
                innerText:name
            })

            imgCont.appendChild(svg)
            imgCont.appendChild(imgName)
            return imgCont
        }
        
        interactiveHint1.appendChild(exitBtn)
        interactiveHint1.appendChild(genTitle(""))
        interactiveHint1.appendChild(genTitle("MOVE"))
        interactiveHint1.appendChild(genTitle("ZoomIn"))
        interactiveHint1.appendChild(genTitle("ZoomOut"))

        interactiveHint1.appendChild(genTitle("Keyboard","interact-key"))
        interactiveHint1.appendChild(genImg("keyStrokes","Arrow Keys","interact-key hint-L-border"))
        interactiveHint1.appendChild(genImg("pageDown","Page Down","interact-key hint-L-border"))
        interactiveHint1.appendChild(genImg("pageUp","Page Up","interact-key hint-L-border"))

        interactiveHint1.appendChild(genTitle("Mouse","interact-mouse"))
        interactiveHint1.appendChild(genImg("mouseMove","Click & Drag","interact-mouse hint-L-border"))
        interactiveHint1.appendChild(genImg("scrollUp","Scroll Up","interact-mouse hint-L-border"))
        interactiveHint1.appendChild(genImg("scrollDn","Scroll Down","interact-mouse hint-L-border"))
        
        interactiveHint1.appendChild(genTitle("Touch","interact-touch"))
        interactiveHint1.appendChild(genImg("touchMove","Touch & Move","interact-touch hint-L-border"))
        interactiveHint1.appendChild(genImg("touchZoomIn","Stretch","interact-touch hint-L-border"))
        interactiveHint1.appendChild(genImg("touchZoomOut","Pinch","interact-touch hint-L-border"))
        
        MISC.setupEvents(exitBtn,{
            onActive:()=>{
                MISC.updateCls(interactiveHint1,"+hidden")
                MISC.updateCls(hintCont,"+hidden")
            },
            onSelect:(event:any)=>{
                if(event.key == "Tab" && !event.shiftKey){
                    console.log("nope")
                    event.preventDefault()
                } else{
                    console.log("go")
                }
            },
            enableAllKeys:true
        })
        // MISC.setupEvents(interactiveHint1,{
        //     onSelect:(event:any)=>{
        //         if(event.key == "Tab" && event.shiftKey){
        //             event.preventDefault()
        //         }
        //     },
        //     enableAllKeys:true
        // })
    })()

    hintCont.appendChild(interactiveHint1)
})();

(()=>{ //setup ui controls
    /* 
    Settings should contain "Volume", "Subtitles","Fullscreen","Exit", "Settings?","Hint"
    
    */
    interface UItemplate{
        clsName:string,
        toggle?:boolean,
        isSecondary?:boolean,
        isHidden?:boolean,
        events?:any,
        srcName?:string,
        uiName:string,
        props?:any,
        placement?:string,
        tooltip?:boolean
        appendTo?:any,
    }

    let genUI = (obj:UItemplate)=>{

        //creat container
        let uiCont : any = MISC.newElem({
            type:"div",
            identity:(()=>{
                
                let cls = obj.clsName + " ui-btn"

                if(obj.isSecondary ){
                    cls = cls + " secondary"
                }
                if(obj.isHidden){
                    cls = cls + " hidden"
                }

                return cls
            })(),
            // identity:obj.clsName + " ui-btn",
            setup:()=>{

                //button 
                let btn = uiCont.btn = MISC.newElem({
                    type:"button",
                    events:obj.events,
                    props:{...obj.props || {},...{
                        toggle: (()=>{
                            if(obj.toggle){return 0
                            } else return null
                        })()
                    }},
                    setup:()=>{ // image
                        if(typeof obj.srcName != "undefined"){
                            uiCont.icon = MISC.getSVG(obj.srcName)
                            uiCont.btn.appendChild(uiCont.icon)
                        }
                    },
                    appendTo: uiCont
                })

                if(obj.tooltip != false){
                    genTooltip({
                        elem:btn,
                        name:obj.uiName,
                        placement:obj.placement
                    })
                }
            },
            appendTo:obj.appendTo
        })

        return uiCont
    }
    let genTooltip = (obj:{
        elem:any,
        name:string,
        placement?:any
    })=>{
        obj.elem.tooltip = tippy(obj.elem, {
            placement: obj.placement || "top", //default top
            content: obj.name,
            touch:false,    
            // theme:"translucent"
            // followCursor:"initial",
            // plugins:[followCursor]
        });
    }
    let genTimeline =(obj:UItemplate)=>{
        let uiCont = MISC.newElem({
            type:"div",
            identity:obj.clsName + " ui-btn",
            props:{
                update:()=>{
                    uiTimeline.update()
                    timecode.update()
                }
            }
        })
        if(obj.isSecondary && obj.isHidden){
            MISC.updateCls(uiCont,[
                "+secondary",
                "+ui-hidden",
            ])
            uiCont.tabIndex = -1
        }
        if(obj.isSecondary){
            MISC.updateCls(uiCont,"+secondary")
        }
        if(typeof obj.events == "object"){MISC.setupEvents(uiCont,obj.events)}

        //Timeline
        let uiTimeline = uiCont.timeline = MISC.newElem({
            type:"input",
            identity:".ui-timeline",
            tabbable:true,
            props:{
                type:"range",
                value:0,
                min:0,
                max:100,
                update:(media = playerBar.videoBar.currentMedia)=>{
                    const min = 0
                    const max = uiTimeline.max = media.duration
                    const val = uiTimeline.value = media.currentTime
                    const nVal = (val - min) * 100 / (max - min)
                    uiTimeline.style.backgroundSize = nVal + '% 100%'
                }
            }
        });
        (()=>{
            uiTimeline.tooltip = tippy(uiTimeline, {
                placement: "top",
                hideOnClick:false,
                content: "NaN%",
                touch:false,
                // trigger:"mouseenter",
                followCursor:"horizontal",
                plugins:[followCursor]
            });
            
            MISC.setupEvents(uiTimeline,{
                onActive:(event:any)=>{
                    if(event.type == "keyup"){
                        let playPauseUI = playerBar.videoBar.playPauseUI
    
                        if(playPauseUI.btn.toggle == 0){
                            playerBar.videoBar.playState()
                        } else {
                            playerBar.videoBar.pauseState()
                        }
                    }
                },
                custom:{
                    pointermove:(event:any, media = playerBar.videoBar.currentMedia)=>{
                        let percentage = Math.trunc(((event.clientX - uiCont.getBoundingClientRect().x)) * 100 /uiCont.getBoundingClientRect().width)
                        let durT = media.duration

                        if(percentage < 0){
                            percentage = 0
                        } else if (percentage > 100){
                            percentage = 100
                        }

                        let curT = durT * (percentage/100)
                        let timeCode = MISC.toHH_MM_SS(curT)

                        uiTimeline.tooltip.setProps({ //update tooltip value
                            content:timeCode
                        }) 
                    },
                    input:(event:any)=>{
                        const min = event.target.min
                        const max = event.target.max
                        const val = event.target.value
                        const nVal = (val - min) * 100 / (max - min)

                        playerBar.videoBar.currentMedia.currentTime = val //jump to time
                        uiTimeline.style.backgroundSize = nVal + '% 100%' //update timeline css
                    },
                    focusin:()=>{
                        uiTimeline.tooltip.setProps({ //update tooltip value
                            content:"Timeline"
                        }) 
                    }
                }
            })
        })();

        //Timecode
        let timecode = uiCont.timeCode =MISC.newElem({
            type:"span",
            identity:".ui-timecode",
            innerText:"00:00 / 00:00",
            props:{
                update:(media = playerBar.videoBar.currentMedia)=>{
                    let curT = media.currentTime
                    let durT = media.duration
                    let a = MISC.toHH_MM_SS(curT)
                    let b = MISC.toHH_MM_SS(durT)
                    let c = a + " / " + b
                    timecode.innerText = c
                },
            }
        })

        uiCont.appendChild(uiTimeline)
        uiCont.appendChild(timecode)

        uiCont.tabIndex = -1

        return uiCont
    }
    let genTriangularVolume = (obj:UItemplate)=>{
        let uiCont = MISC.newElem({
            type:"div",
            identity:obj.clsName + " ui-btn player-bar-volume ui-trivolume"
        })
        if(obj.isSecondary && obj.isHidden){
            MISC.updateCls(uiCont,[
                "+secondary",
                "+ui-hidden",
            ])
            uiCont.tabIndex = -1
        }
        if(obj.isSecondary){
            MISC.updateCls(uiCont,"+secondary")
        }
        if(typeof obj.events == "object"){MISC.setupEvents(uiCont,obj.events)}
        
        let vlmBg = MISC.newElem({ //hide upper triangle
            type:"div",
            identity:".ui-trivolume-bg"
        })
        let vlmTxt = MISC.newElem({ //shows percentage
            type:"span",
            identity:".ui-trivolume-text",
            innerText:"Vol"
        })
        let vlmSlider = uiCont.volume = MISC.newElem({ //main slider
            type:"input",
            identity:".ui-trivolume-slider",
            tabbable:true,
            props:{
                type:"range",
                value:100,
                min:0,
                max:100,
                step:2,
                link:(elem:any)=>{
                    elem.volume = vlmSlider.value/100
                },
            }
        });
        (()=>{
            MISC.setStyle(vlmSlider,{
                backgroundSize:"100% 100%"
            })
            vlmSlider.tooltip = tippy(vlmSlider, {
                placement: "top",
                hideOnClick:false,
                content: "100%",
                touch:false,
                // followCursor:"horizontal",
                // plugins:[followCursor]
            });
            MISC.setupEvents(vlmSlider,{
                onActive:(event:any)=>{
                    if(event.type == "keyup"){
                        let playPauseUI = playerBar.videoBar.playPauseUI
    
                        if(playPauseUI.btn.toggle == 0){
                            playerBar.videoBar.playState()
                        } else {
                            playerBar.videoBar.pauseState()
                        }
                    }
                },
                custom:{
                    input:(event:any)=>{
                        const min = event.target.min
                        const max = event.target.max
                        const val = event.target.value
                        const nVal = (val - min) * 100 / (max - min)
                        vlmSlider.tooltip.setProps({
                            content:nVal + "%"
                        })
                        vlmSlider.style.backgroundSize = nVal + '% 100%'
                        playerBar.videoBar.currentMedia.volume = nVal/100
                    }
                }
            })
        })();

        uiCont.appendChild(vlmSlider)
        uiCont.appendChild(vlmBg)
        uiCont.appendChild(vlmTxt)
        return uiCont
    }
    let genPlayerOption = (obj:{ //only used by genPlayerOptions()
        optClsName: string,
        srcName: string,
        uiName: string,
        uiFill?: string,
        showArrow?: boolean,
        hideArrow?:boolean,
        funcs?:any,
        props?:object
    })=>{
        let option = MISC.newElem({
            type:"button",
            identity:obj.optClsName + " ui-opt",
            props:obj.props
        })
        MISC.setupEvents(option,obj.funcs)
        option.tabIndex = 0

        let optionImg = MISC.newElem({
            type:"div",
            identity:".opt_icon"
        })
        let uiIcon = MISC.getSVG(obj.srcName)
        optionImg.appendChild(uiIcon)

        let optionText = MISC.newElem({
            type:"span",
            innerText:obj.uiName
        })
        let optionTextEditable = MISC.newElem({
            type:"span",
            identity:".editable",
            innerText:obj.uiFill || "",
        })
        optionText.appendChild(optionTextEditable)
        
        option.appendChild(optionImg)
        option.appendChild(optionText)
        
        if(obj.showArrow != false){
            let optionArrow = MISC.newElem({
                type:"div",
                identity:".opt_arrow"
            })
            let uiArrow = MISC.getSVG("caretRight")

            if(obj.hideArrow == true){
                optionArrow.style.visibility = "hidden"
            }

            optionArrow.appendChild(uiArrow)
            option.appendChild(optionArrow)
        }

        return option
    }
    let genPlayerVideoOptions = (obj:UItemplate)=>{
        let gear = genUI(obj);
    
        //Main options
        let optionsMain = gear.main = MISC.newElem({
            type:"div",
            identity:".player-bar-options main-opt hidden"
        })
        let optionMainCol = MISC.newElem({
            type:"div",
            identity: ".ui-opts"
        })
        let optionMain1 = genPlayerOption({ //Play Speed
            optClsName: ".player-bar-playbackspeed",
            uiName: "Speed: ",
            uiFill:"Normal",
            srcName: "playspeed",
            funcs:{
                onActive:()=>{
                    MISC.updateCls(optionsMain,"+hidden")
                    MISC.updateCls(optionsSpeed,"-hidden")

                    switch(optionMain1.val){
                        case 0.25:
                            optionSpeed1.focus();break;
                        case 0.5:
                            optionSpeed2.focus();break;
                        case 0.75:
                            optionSpeed3.focus();break;
                        case 1.0:
                            optionSpeed4.focus();break;
                        case 1.25:
                            optionSpeed5.focus();break;
                        case 1.5:
                            optionSpeed6.focus();break;
                        case 1.75:
                            optionSpeed7.focus();break;
                        case 2.0:
                            optionSpeed8.focus()
                    }
                },
                onSelect:(event:any)=>{
                    if(event.key == "Tab" && event.shiftKey){
                        playerBar.videoBar.hideSettings()
                    }
                },
                enableAllKeys:true
            },
            props:{
                val: 1,
            }
        })

        // let optionMain3 = genPlayerOption({
        //     optClsName: ".player-bar-annotation hidden",
        //     uiName: "Hotspot:",
        //     uiFill:"ON",
        //     srcName: "annotation",
        //     funcs:{
        //         onActive:()=>{
        //             MISC.updateCls(optionsMain,"+hidden")
        //             MISC.updateCls(optionsAnnotation,"-hidden")
        //         }
        //     }
        // })
        let optionMain4 = genPlayerOption({ // Download
            optClsName: ".player-bar-download",
            uiName: "Download",
            uiFill:"",
            srcName: "download",
            hideArrow: true,
            funcs:{
                onSelect:(event:any)=>{
                    if(event.key == "Tab" && !event.shiftKey){
                        playerBar.videoBar.hideSettings()
                    }
                },
                onActive:()=>{
                    let src = playerBar.videoBar.currentMedia.src
                    let srcName = src.split("/")[src.split("/").length - 1]
                    optionMain4.dl.href = src
                    optionMain4.dl.download = srcName

                    optionMain4.dl.click()
                },
                enableAllKeys:true
            }
        });
        (()=>{
            let downloadable = optionMain4.dl = MISC.newElem({
                type:"a",
                identity:".hidden",
                props:{
                    href:"",
                    download:""
                }
            })
            optionMain4.appendChild(downloadable)
        })()
        
        optionMainCol.appendChild(optionMain1)
        // optionMainCol.appendChild(optionMain3)
        optionMainCol.appendChild(optionMain4)
        optionsMain.appendChild(optionMainCol)
        
        //Speed options
        let optionsSpeed = gear.speed = MISC.newElem({
            type:"div",
            identity:".player-bar-options speed-opt hidden",
            props:{
                exit:(nVal:number)=>{ //common exit function
                    MISC.qs(".editable",optionMain1).innerText = nVal + "x"
                    MISC.updateCls(optionsMain,"-hidden")
                    MISC.updateCls(optionsSpeed,"+hidden")
                    optionMain1.val = nVal
                    playerBar.videoBar.currentMedia.playbackRate = nVal
                    optionMain1.focus()
                },
                reset:()=>{
                    optionMain1.val = 1.0
                    MISC.qs(".editable",optionMain1).innerText = 1.0 + "x"
                }
            }
        })
        let optionSpeedCol = MISC.newElem({
            type:"div",
            identity: ".ui-opts"
        })
        let optionSpeed1 = genPlayerOption({
            optClsName: ".play-bar-playbackspeed-0.25",
            uiName: "0.25x",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    optionsSpeed.exit(optionSpeed1.val)
                }
            },
            props:{
                val: 0.25,
            }
        })
        let optionSpeed2 = genPlayerOption({
            optClsName: ".play-bar-playbackspeed-0.5",
            uiName: "0.5x",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    optionsSpeed.exit(optionSpeed2.val)
                }
            },
            props:{
                val: 0.5,
            }
        })
        let optionSpeed3 = genPlayerOption({
            optClsName: ".play-bar-playbackspeed-0.75",
            uiName: "0.75x",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    optionsSpeed.exit(optionSpeed3.val)
                }
            },
            props:{
                val: 0.75,
            }
        })
        let optionSpeed4 = genPlayerOption({
            optClsName: ".play-bar-playbackspeed-1",
            uiName: "Normal",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    optionsSpeed.exit(optionSpeed4.val)
                }
            },
            props:{
                val: 1.0,
            }
        })
        let optionSpeed5 = genPlayerOption({
            optClsName: ".play-bar-playbackspeed-1.25",
            uiName: "1.25x",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    optionsSpeed.exit(optionSpeed5.val)

                }
            },
            props:{
                val: 1.25,
            }
        })
        let optionSpeed6 = genPlayerOption({
            optClsName: ".play-bar-playbackspeed-1.5",
            uiName: "1.5x",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    optionsSpeed.exit(optionSpeed6.val)

                }
            },
            props:{
                val: 1.5,
            }
        })
        let optionSpeed7 = genPlayerOption({
            optClsName: ".play-bar-playbackspeed-1.75",
            uiName: "1.75x",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    optionsSpeed.exit(optionSpeed7.val)
                }
            },
            props:{
                val: 1.75,
            }
        })
        let optionSpeed8 = genPlayerOption({
            optClsName: ".play-bar-playbackspeed-2",
            uiName: "2.0x",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    optionsSpeed.exit(optionSpeed8.val)
                },
                onSelect:(event:any)=>{
                    if(event.key == "Tab" && !event.shiftKey){
                        playerBar.videoBar.hideSettings()
                    }
                },
                enableAllKeys:true
            },
            props:{
                val: 2.0,
            }
        })

        optionSpeedCol.appendChild(optionSpeed1)
        optionSpeedCol.appendChild(optionSpeed2)
        optionSpeedCol.appendChild(optionSpeed3)
        optionSpeedCol.appendChild(optionSpeed4)
        optionSpeedCol.appendChild(optionSpeed5)
        optionSpeedCol.appendChild(optionSpeed6)
        optionSpeedCol.appendChild(optionSpeed7)
        optionSpeedCol.appendChild(optionSpeed8)
        optionsSpeed.appendChild(optionSpeedCol)

        /* 
        // Annotation options
        let optionsAnnotation = MISC.newElem({
            type:"div",
            identity:".player-bar-options annotation-opt hidden"
        })
        let optionAnnotation1 = genPlayerOption({
            optClsName: ".play-bar-annotation-ON",
            uiName: "ON",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    MISC.updateCls(optionsMain,"-hidden")
                    MISC.updateCls(optionsAnnotation,"+hidden")
                    optionMain3.querySelector(".editable").innerText = "ON"
                }
            }
        })
        let optionAnnotation2 = genPlayerOption({
            optClsName: ".play-bar-annotation-OFF",
            uiName: "OFF",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    MISC.updateCls(optionsMain,"-hidden")
                    MISC.updateCls(optionsAnnotation,"+hidden")
                    optionMain3.querySelector(".editable").innerText = "OFF"
                }
            }
        })

        optionsAnnotation.appendChild(optionAnnotation1)
        optionsAnnotation.appendChild(optionAnnotation2)
        */

        gear.appendChild(optionsMain)
        gear.appendChild(optionsSpeed)
        // gear.appendChild(optionsAnnotation)

        // gear.main = optionsMain
        // gear.speed = optionsSpeed
        // gear.quality = optionsQuality

        return gear
    }
    let genPlayerViewerOptions = (obj:UItemplate)=>{
        let gear = genUI(obj);

        //Main options
        let optionsMain = MISC.newElem({
            type:"div",
            identity:".player-bar-options main-opt hidden"
        })
        let optionMainCol = MISC.newElem({
            type:"div",
            identity: ".ui-opts"
        })
        let optionMain1 = genPlayerOption({
            optClsName: ".player-bar-annotation hidden",
            uiName: "Hotspot:",
            uiFill:"ON",
            srcName: "annotation",
            funcs:{
                onActive:()=>{
                    MISC.updateCls(optionsMain,"+hidden")
                    MISC.updateCls(optionsAnnotation,"-hidden")

                    switch(optionMain1.val){
                        case 0:
                            optionAnnotation2.focus();break;
                        case 1:
                            optionAnnotation1.focus()
                    }
                }
            },
            props:{
                val:1,
            }
        })
        let optionMain2 = genPlayerOption({
            optClsName: ".player-bar-download",
            uiName: "Download",
            uiFill:"",
            srcName: "download",
            hideArrow: true,
            funcs:{
                onSelect:(event:any)=>{
                    if(event.key == "Tab" && !event.shiftKey){
                        playerBar.viewerBar.hideSettings()
                    }
                },
                enableAllKeys:true
            }
        })
        optionMainCol.appendChild(optionMain1)
        optionMainCol.appendChild(optionMain2)
        optionsMain.appendChild(optionMainCol)

        //Hotpsot
        let optionsAnnotation = MISC.newElem({
            type:"div",
            identity:".player-bar-options annotation-opt hidden",
            props:{
                exit:(nVal:number)=>{
                    MISC.updateCls(optionsMain,"-hidden")
                    MISC.updateCls(optionsAnnotation,"+hidden")
                    optionMain1.val = nVal
                    optionMain1.focus()
                    switch(nVal){
                        case 0:
                            MISC.qs(".editable",optionMain1).innerText = "OFF"; break;
                        case 1:
                            MISC.qs(".editable",optionMain1).innerText = "ON"
                    }
                }
            }
        })
        let optionAnnotationCol = MISC.newElem({
            type:"div",
            identity: ".ui-opts"
        })
        let optionAnnotation1 = genPlayerOption({
            optClsName: ".play-bar-annotation-ON",
            uiName: "ON",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    optionsAnnotation.exit(optionAnnotation1.val)
                }
            },
            props:{
                val:1
            }
        })
        let optionAnnotation2 = genPlayerOption({
            optClsName: ".play-bar-annotation-OFF",
            uiName: "OFF",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    optionsAnnotation.exit(optionAnnotation2.val)
                },
                onSelect:(event:any)=>{
                    if(event.key == "Tab" && !event.shiftKey){
                        playerBar.viewerBar.hideSettings()
                    }
                },
                enableAllKeys:true
            },
            props:{
                val:0
            }
        })
        optionAnnotationCol.appendChild(optionAnnotation1)
        optionAnnotationCol.appendChild(optionAnnotation2)
        optionsAnnotation.appendChild(optionAnnotationCol)


        gear.appendChild(optionsMain)
        gear.appendChild(optionsAnnotation)
        gear.main = optionsMain
        gear.annotation = optionsAnnotation
        
        return gear
    }
    let genPlayerDocOptions = (obj:UItemplate)=>{
        let gear = genUI(obj);
    
        //Main options //Display Hotspots & Downloads
        let optionsMain = MISC.newElem({
            type:"div",
            identity:".player-bar-options main-opt hidden"
        })
        let optionMainCol = MISC.newElem({
            type:"div",
            identity: ".ui-opts"
        })
        let optionMain1 = genPlayerOption({
            optClsName: ".player-bar-annotation",
            uiName: "Hotspot:",
            uiFill:"ON",
            srcName: "annotation",
            funcs:{
                onActive:()=>{
                    MISC.updateCls(optionsMain,"+hidden")
                    MISC.updateCls(optionsAnnotation,"-hidden")

                    switch(optionMain1.val){
                        case 0:
                            optionAnnotation2.focus();break;
                        case 1:
                            optionAnnotation1.focus()
                    }
                }
            },
            props:{
                val: 1
            }
        })
        let optionMain2 = genPlayerOption({
            optClsName: ".player-bar-download",
            uiName: "Download",
            uiFill:"",
            srcName: "download",
            hideArrow: true,
            funcs:{
                onSelect:(event:any)=>{
                    if(event.key == "Tab" && !event.shiftKey){
                        playerBar.docBar.hideSettings()
                    }
                },
                enableAllKeys:true
            }
        })

        optionMainCol.appendChild(optionMain1)
        optionMainCol.appendChild(optionMain2)
        optionsMain.appendChild(optionMainCol)

        //Annotation options //Display ON & OFF for Hotspots
        let optionsAnnotation = MISC.newElem({
            type:"div",
            identity:".player-bar-options annotation-opt hidden",
            props:{
                exit:(nVal:number)=>{
                    MISC.updateCls(optionsMain,"-hidden")
                    MISC.updateCls(optionsAnnotation,"+hidden")
                    optionMain1.val = nVal
                    optionMain1.focus()
                    switch(nVal){
                        case 0:
                            MISC.qs(".editable",optionMain1).innerText = "OFF";break;
                        case 1:
                            MISC.qs(".editable",optionMain1).innerText = "ON";
                    }
                }
            }
        })
        let optionAnnotationCol = MISC.newElem({
            type:"div",
            identity: ".ui-opts"
        })
        let optionAnnotation1 = genPlayerOption({
            optClsName: ".play-bar-annotation-ON",
            uiName: "ON",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    optionsAnnotation.exit(optionAnnotation1.val)
                }
            },
            props:{
                val: 1
            }
        })
        let optionAnnotation2 = genPlayerOption({
            optClsName: ".play-bar-annotation-OFF",
            uiName: "OFF",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    optionsAnnotation.exit(optionAnnotation2.val)
                },
                onSelect:(event:any)=>{
                    if(event.key == "Tab" && !event.shiftKey){
                        playerBar.docBar.hideSettings()
                    }
                },
                enableAllKeys:true
            },
            props:{
                val: 0
            }
        })

        optionAnnotationCol.appendChild(optionAnnotation1)
        optionAnnotationCol.appendChild(optionAnnotation2)
        optionsAnnotation.appendChild(optionAnnotationCol)

        gear.main = optionsMain
        gear.annotation = optionsAnnotation

        gear.appendChild(optionsMain)
        gear.appendChild(optionsAnnotation)

        return gear
    }
    let genPlayerModelOptions = (obj:UItemplate)=>{
        let gear = genUI(obj);
    
        //Main options
        let optionsMain = MISC.newElem({
            type:"div",
            identity:".player-bar-options main-opt hidden"
        })
        let optionMainCol = MISC.newElem({
            type:"div",
            identity: ".ui-opts"
        })
        let optionMain1 = genPlayerOption({
            optClsName: ".player-bar-annotation",
            uiName: "Hotspot:",
            uiFill:"ON",
            srcName: "annotation",
            funcs:{
                onActive:()=>{
                    MISC.updateCls(optionsMain,"+hidden")
                    MISC.updateCls(optionsAnnotation,"-hidden")
                }
            }
        })
        let optionMain2 = genPlayerOption({
            optClsName: ".player-bar-autorotate",
            uiName: "Auto-rotate:",
            uiFill:"OFF",
            srcName: "undo",
            funcs:{
                onActive:()=>{
                    MISC.updateCls(optionsMain,"+hidden")
                    MISC.updateCls(optionsAutoRotate,"-hidden")
                }
            }
        })

        optionMainCol.appendChild(optionMain1)
        optionMainCol.appendChild(optionMain2)
        optionsMain.appendChild(optionMainCol)

        //Annotation options
        let optionsAnnotation = MISC.newElem({
            type:"div",
            identity:".player-bar-options annotation-opt hidden"
        })
        let optionAnnotationCol = MISC.newElem({
            type:"div",
            identity: ".ui-opts"
        })
        let optionAnnotation1 = genPlayerOption({
            optClsName: ".play-bar-annotation-ON",
            uiName: "ON",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    MISC.updateCls(optionsMain,"-hidden")
                    MISC.updateCls(optionsAnnotation,"+hidden")
                    MISC.qs(".editable",optionMain1).innerText = "ON"
                }
            }
        })
        let optionAnnotation2 = genPlayerOption({
            optClsName: ".play-bar-annotation-OFF",
            uiName: "OFF",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    MISC.updateCls(optionsMain,"-hidden")
                    MISC.updateCls(optionsAnnotation,"+hidden")
                    MISC.qs(".editable",optionMain1).innerText = "OFF"
                }
            }
        })

        optionAnnotationCol.appendChild(optionAnnotation1)
        optionAnnotationCol.appendChild(optionAnnotation2)
        optionsAnnotation.appendChild(optionAnnotationCol)

        //AutoRotateoptions
        let optionsAutoRotate = MISC.newElem({
            type:"div",
            identity:".player-bar-options autoRotate-opt hidden"
        })
        let optionAutoRotateCol = MISC.newElem({
            type:"div",
            identity: ".ui-opts"
        })
        let optionAutoRotate1 = genPlayerOption({
            optClsName: ".play-bar-autoRotate-ON",
            uiName: "ON",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    MISC.updateCls(optionsMain,"-hidden")
                    MISC.updateCls(optionsAutoRotate,"+hidden")
                    MISC.qs(".editable",optionMain2).innerText = "ON"
                }
            }
        })
        let optionAutoRotate2 = genPlayerOption({
            optClsName: ".play-bar-autoRotate-OFF",
            uiName: "OFF",
            srcName: "caretLeft",
            hideArrow: true,
            funcs:{
                onActive:()=>{
                    MISC.updateCls(optionsMain,"-hidden")
                    MISC.updateCls(optionsAutoRotate,"+hidden")
                    MISC.qs(".editable",optionMain2).innerText = "OFF"
                }
            }
        })

        optionAutoRotateCol.appendChild(optionAutoRotate1)
        optionAutoRotateCol.appendChild(optionAutoRotate2)
        optionsAutoRotate.appendChild(optionAutoRotateCol)

        gear.main = optionsMain
        gear.annotation = optionsAnnotation
        gear.autoRotate = optionsAutoRotate

        gear.appendChild(optionsMain)
        gear.appendChild(optionsAnnotation)
        gear.appendChild(optionsAutoRotate)

        return gear
    }
    let genLabel = (obj:UItemplate)=>{
        let uiCont = MISC.newElem({
            type:"div",
            identity:(()=>{
                let cls = obj.clsName + " ui-btn ui-nopointer"

                if(obj.isHidden) cls = cls + " hidden"
                
                return cls
            })(),
            events:obj.events,
            tabbable: false,
            setup:()=>{
                let nameCont = MISC.newElem({
                    type:"div",
                    identity:".ui-name ui-divider",
                    setup:()=>{
                        MISC.newElem({
                            type:"span",
                            innerText:obj.uiName,
                            appendTo:nameCont
                        })
                    },
                    appendTo:uiCont
                })
                console
                console.log(obj.uiName)
            },
            appendTo:obj.appendTo
        })

        return uiCont
    }
    let genSlideCount = (obj:{
        clsName: string,
        numLimit: number,
        tabbable?: boolean,
        isHidden?: boolean,
        funcs?:any
    })=>{
        let uiCont : any;

        if(obj.tabbable == true){
            uiCont = MISC.newElem({
                type:"div",
                identity:obj.clsName + " ui-btn",
                tabbable: true,
            })
        } else {
            uiCont = MISC.newElem({
                type:"div",
                identity:obj.clsName + " ui-btn ui-slidecounter",
                tabbable: false,
            })
        }

        if(obj.isHidden == true){
            MISC.updateCls(uiCont,"+hidden")
        }

        MISC.setupEvents(uiCont,obj.funcs || {})

        let uiNameCont = MISC.newElem({
            type:"div",
            identity:".ui-name"
        })
        let uiInput = MISC.newElem({
            type:"input",
            identity:".ui-editable",
            props:{
                value: 0,
                type:"number",
                toggle:0
            }
        })
        
        MISC.setupEvents(uiInput,{
            onSelect:(event:any)=>{
                if (event.type == "pointerdown"){
                    MISC.onBoundaryLeave({
                        elem:uiCont,
                        parent: obj.clsName + " ui-btn",
                        setup: ()=>{
                            MISC.updateCls(uiOptions,"+hidden")
                            uiInput.toggle = 0
                        }
                    })
                } else if (event.key == "Tab"){
                    MISC.updateCls(uiOptions,"+hidden")
                    uiInput.toggle = 0
                }

            },
            onLeave:()=>{
                if(uiInput.value == ""){
                    uiInput.value = 0
                } else if (parseFloat(uiInput.value) > uiInput.limit){
                    uiInput.value = uiInput.limit
                }
            },
            onActive:(event:any)=>{
                if (event.type == "pointerup"){
                    if(uiInput.toggle == "0"){
                        uiOptions.gen()
                        MISC.updateCls(uiOptions,"-hidden")
                        uiInput.toggle = 1
                        uiOptions.querySelector(".doc-opt"+uiInput.value).focus() //focuses on active num
                    } else {
                        MISC.updateCls(uiOptions,"+hidden")
                        uiInput.toggle = 0
                    }
                }
            },
            custom:{
                paste: (e:any)=>e.preventDefault(),
                input: (e:any)=>{
                    let cVal = parseFloat(uiInput.value)
                    
                    if(cVal >= uiInput.limit || ["-","+","."].includes(e.data)){
                        uiInput.value = uiInput.prevNum
                    } else { //store prev num
                        uiInput.value = uiInput.prevNum = cVal
                    }
                }
            },
            enableAllKeys: true
        })

        let uiLimit = MISC.newElem({
            type:"span",
            innerText:" of " + obj.numLimit
        })
        let uiOptions = MISC.newElem({
            type:"div",
            identity:".ui-slide-menu hidden"
        })
        uiOptions.gen = ()=>{
            if(uiOptions.childElementCount != uiInput.limit + 1){
                for (let i=0; i < (uiInput.limit + 1); i++){
                    let tempOptions =MISC.newElem({
                        type:"span", //can't be button cuz tabbing ):
                        innerText:i + "",
                        identity:".doc-opt"+i,
                        tabbable: true,
                    })
                    MISC.setupEvents(tempOptions,{
                        onActive:()=>{
                            uiInput.value = parseFloat(tempOptions.innerText)
                        },
                        onSelect:(event:any)=>{
                            if (event.key == "Tab"){
                                MISC.updateCls(uiOptions,"+hidden")
                                uiInput.toggle = 0
                                uiInput.focus()
                            }
                        },
                        enableAllKeys:true,
                    })
                    uiOptions.appendChild(tempOptions)
                }
            }

        }

        uiInput.limit = obj.numLimit
        uiNameCont.appendChild(uiInput)
        uiNameCont.appendChild(uiLimit)
        uiNameCont.appendChild(uiOptions)

        
        MISC.updateCls(uiNameCont,"+ui-divider")
        MISC.updateCls(uiCont,"+ui-nopointer")
        uiCont.appendChild(uiNameCont)

        return uiCont
    }
    let genAnimList = (obj:UItemplate)=>{
        let menu = genUI(obj);

        let menuItems = MISC.newElem({
            type:"div",
            identity:".ui-anim-menu hidden"
        })
        let menuItemsCont = MISC.newElem({
            type:"div",
        })
        menuItems.appendChild(menuItemsCont)

        for (let i=0; i < 10; i++){
            let testOption =MISC.newElem({
                type:"button",
                innerText:"Sample Anim" + i,
            })
            menuItemsCont.appendChild(testOption)
        }

        menu.menu = menuItems
        menu.appendChild(menuItems)

        return menu
    };

    (()=>{ //setup Window Events
        window.showBars = ()=>{
            settingBar.showState()
            sideBar.showState()
            playerBar.showState()
            mediaCont.subDisplay.float()
        }
        window.hideBars = ()=>{
            settingBar.tempHideState()
            sideBar.tempHideState()
            playerBar.tempHideState()
            mediaCont.subDisplay.unFloat()
            console.log(document.activeElement)


            let trgt:any = document.body.lastElementChild
            if(!MISC.isEmpty(trgt._tippy)){
                trgt._tippy.hide()
            }

        }

        let uiVisibilityManager:any = window.uiVisibilityManager = ()=>{
            let cond1 = window.movement != true
            let cond2 = window.autoHideBars == true
            let cond3 = typeof playerBar.videoBar.currentMedia != null
            let cond4 = uiVisibilityManager.inUse != true
            // let cond5 = playerBar.videoBar.currentMedia.paused
            
            console.log("vis check")
            if(cond1 && cond2 && cond3 && cond4 && !playerBar.videoBar.currentMedia.paused){
                uiVisibilityManager.inUse = true
                window.movement = true
                window.showBars()

                setTimeout(()=>{
                    uiVisibilityManager.inUse = false
                    window.movement = false

                    setTimeout(()=>{
                        let cond1 = window.movement != true
                        let cond2 = window.autoHideBars == true
                        let cond3 = playerBar.videoBar.currentMedia.paused
                        if(cond1 && cond2 && !cond3){
                            window.hideBars()
                        }
                    },1000)

                }, 1000)
            }
        }

        let showOnBarsMove = ()=>{
            console.log("reseting pointermove")
            window.removeEventListener("pointermove",showOnBarsMove)
            checkUIVisibility()

            setTimeout(()=>{
                checkUIVisibility()
                window.addEventListener("pointermove",showOnBarsMove)
            },1500)
        }
        let checkUIVisibility = ()=>{
            if(uiVisibilityManager.inUse != true){
                uiVisibilityManager()
            }
        }

        MISC.setupEvents(window,{
            custom:{
                pointerdown:(event:any)=>{
                    window.elemBelow = document.elementFromPoint(event.clientX,event.clientY)
                    console.log("elembelow is:", {elem: window.elemBelow})
                },
                pointermove:showOnBarsMove,
                pointerup:checkUIVisibility,
                keyup:checkUIVisibility
                // keydown:()=>{window.uiVisibilityManager()},
            }
        })

        window.sizeObserver = new ResizeObserver((entries)=>{
            // console.log(entries)
            // console.log(playerBar.videoBar.currentMedia)

            let cMedia = playerBar.videoBar.currentMedia
            if(!MISC.isEmpty(cMedia) && cMedia.tagName == "VIDEO"){
                console.log("vid detected")

                if(innerHeight < cMedia.offsetHeight){
                    MISC.updateCls(cMedia,["-vid-landscape","+vid-portrait"])
                } else if (innerWidth < cMedia.offsetWidth){
                    MISC.updateCls(cMedia,["+vid-landscape","-vid-portrait"])
                }
            }
        })
        window.sizeObserver.observe(document.body)

    })();


    //top Settings
    let settingBar = window.settingBar = MISC.newElem({
        type:"div",
        identity:".ui-controls__settings ui-mini-hoverable",
        props:{
            expand:(event:any)=>{
                //hide moreUI
                settingBar.moreUI.hideState()
                MISC.updateCls(settingBar,"-ui-mini-hoverable")
    
                //show secondary settings
                MISC.qsa(".secondary",settingBar).forEach((elem:any)=>{
                    elem.showState()
                })
                
                if(MISC.isKeyEvent(event)){
                    settingBar.audioUI.btn.focus()
                }
            },
            shrink:(event:any)=>{
                //show and focus moreUI
                settingBar.moreUI.showState()
                MISC.updateCls(settingBar,"+ui-mini-hoverable")
                                        
                //hide secondary settings
                MISC.qsa(".secondary",settingBar).forEach(async(elem:any)=>{
                    elem.hideState()
                })

                if(MISC.isKeyEvent(event) && document.activeElement != settingBar.fullscreenUI.btn){
                    settingBar.moreUI.btn.focus()
                }

            },
            modalActive:()=>{
                settingBar.exitUI.showState()
            },
            modalInactive:()=>{
                settingBar.exitUI.hideState()
            },
            visToggle:{
                onOver:()=>{
                    settingBar.opacityState(1)
                },
                onLeave:()=>{
                    settingBar.opacityState()
                },
            },
        },
        setup:()=>{
            /* 
                fullscreenUI - enters||exit fullscreen
                exitUI - only shows when a viewer is active, closes current viewer
                moreUI - shows other settings
                volumeUI - opens Volume settings (Speech,BgAudio,UIAudio)
                displayUI - open Display settings (Subtitle,Auto-hid settings, settings opacity)
                controlsUI - shows the user the config of keyboard, mouse, touch
                hintUI - shows the new user how the UI works
                lessUI - hides other settings
            */

            settingBar.fullscreenUI = genUI({
                clsName:".ui-controls__settings-fullscreen",
                srcName:"enterFullscreen",
                uiName:"Enter Fullcreen",
                placement:"bottom-start",
                toggle:true,
                props:{
                    enterFullscreen:()=>{
                        let btn = settingBar.fullscreenUI.btn
                        
                        let mainCont = MISC.qs(".Interactive-container",parent.window.document)
                        mainCont.requestFullscreen()
                        window.isFullscreen = true
                        
                        btn.tooltip.setProps({
                            content:"Exit Fullscreen"
                        })

                        btn.innerHTML = ""
                        btn.appendChild(btn.exitFSIcon)
                        btn.toggle = 1 
                    },
                    exitFullscreen:()=>{
                        let btn = settingBar.fullscreenUI.btn

                        parent.window.document.exitFullscreen()
                        window.isFullscreen = false
                        
                        btn.tooltip.setProps({
                            content:"Enter Fullscreen"
                        })

                        btn.innerHTML = ""
                        btn.appendChild(btn.enterFSIcon)
                        btn.toggle = 0
                    },
                    enterFSIcon:MISC.getSVG("enterFullscreen"),
                    exitFSIcon:MISC.getSVG("exitFullscreen"),
                },
                events:{...settingBar.visToggle,...{
                    onActive:()=>{
                        let btn = settingBar.fullscreenUI.btn

                        if(btn.toggle == 0){
                            btn.enterFullscreen()
                        } else {
                            btn.exitFullscreen()
                        }
                    },
                    onSelect:(event:any)=>{
                        if(MISC.events.onTabBackward(event)){
                            settingBar.shrink(event)
                        }
                    },
                    enableAllKeys:true,
                }},
                appendTo:settingBar

            })
            settingBar.exitUI = genUI({
                clsName:".ui-controls__settings-exit hidden",
                srcName:"exitViewer",
                uiName:"Close Viewer",
                placement:"bottom",
                events:settingBar.visToggle,
                appendTo:settingBar
            })
            settingBar.moreUI = genUI({
                clsName:".ui-controls__settings-more extra-margin-left",
                srcName:"caretLeft",
                uiName:"More",
                placement:"bottom",
                events:{...settingBar.visToggle,...{
                    onActive:(event:any)=>{
                        settingBar.expand(event)
                        MISC.onBoundaryLeave({
                            elem:settingBar.moreUI,
                            parent:".ui-controls__settings",
                            setup:settingBar.shrink
                        })
                    },
                }},
                appendTo:settingBar

            })
            settingBar.audioUI = genUI({
                clsName:".ui-controls__settings-audio",
                srcName:"musicNote",
                uiName:"Audio",
                placement:"bottom",
                isSecondary:true,
                isHidden:true,
                events:settingBar.visToggle,
                appendTo:settingBar
            })
            settingBar.displayUI = genUI({
                clsName:".ui-controls__settings-display",
                srcName:"image",
                uiName:"Display",
                placement:"bottom",
                isSecondary:true,
                isHidden:true,
                events:settingBar.visToggle,
                appendTo:settingBar
            })
            settingBar.controlsUI = genUI({
                clsName:".ui-controls__settings-controls",
                srcName:"control",
                uiName:"Shortcuts",
                placement:"bottom",
                isSecondary:true,
                isHidden:true,
                events:settingBar.visToggle,
                appendTo:settingBar
            })
            settingBar.hintUI = genUI({
                clsName:".ui-controls__settings-hint",
                srcName:"question",
                uiName:"Hint",
                placement:"bottom",
                isSecondary:true,
                isHidden:true,
                events:settingBar.visToggle,
                appendTo:settingBar
            })
            settingBar.lessUI = genUI({
                clsName:".ui-controls__settings-less extra-margin-left",
                srcName:"caretRight",
                uiName:"Less",
                placement:"bottom",
                isSecondary:true,
                isHidden:true,
                events:{...settingBar.visToggle,...{
                    onActive:(event:any)=>{
                        settingBar.shrink(event)
                    },
                    onSelect:(event:any)=>{
                        if(MISC.events.onTabForward(event)){
                            settingBar.shrink(event)
                        }
                    },
                    enableAllKeys:true,
                }},
                appendTo:settingBar
            })
        },
        appendTo:uiCont
    });

    //left Settings 
    let sideBar = window.sideBar = MISC.newElem({
        type:"div",
        identity:".ui-controls__side-bar",
        props:{
            unminify:(event:any)=>{
                MISC.setStyle(sideBar,{cursor:"auto"})
                
                sideBar.showState()
    
                //hide moreUI and moreUIlabel
                sideBar.moreUI.hideState()
                sideBar.moreUILabel.hideState()
                
                //hide mini mode size
                MISC.updateCls(sideBar,[
                    "-ui-mini-sidebar",
                    "-ui-mini-hoverable",
                    "-ui-justify-content-center" //remove justify-content = center
                ])
                
                //show all secondary
                MISC.qsa(".secondary",sideBar).forEach((elem:any)=>{
                    elem.showState()
                })
                
                if(MISC.isKeyEvent(event)){
                    sideBar.lessUI.btn.focus()
                }
            },
            minify:(event:any)=>{ //go to mini mode
                MISC.setStyle(sideBar,{cursor:"pointer"})
    
                //show moreUI and moreUIlabel
                sideBar.moreUI.showState()
                sideBar.moreUILabel.showState()
                
                //show mini mode size
                MISC.updateCls(sideBar,["+ui-mini-sidebar","+ui-mini-hoverable"])
    
                //set justify-content = center
                MISC.updateCls(sideBar,"+ui-justify-content-center")
    
                //hide all secondary
                MISC.qsa(".secondary",sideBar).forEach((elem:any)=>{
                    elem.hideState()
                })

                if(MISC.isKeyEvent(event)){
                    sideBar.moreUI.btn.focus()
                }
            },
            visToggle:{
                onOver:()=>{
                    sideBar.opacityState(1)
                },
                onLeave:()=>{
                    sideBar.opacityState()
                },
            },
        },
        events:{
            onActive:(event:any)=>{
                if(sideBar.classList.contains("ui-mini-sidebar")){
                    sideBar.unminify(event)
                }
            }
        },
        setup:()=>{

            sideBar.zoomInUI = genUI({
                clsName:".ui-controls__sideBar-zoomIn",
                srcName:"zoomIn",
                uiName:"Zoom In",
                placement:"right",
                isSecondary:true,
                events:sideBar.visToggle,
                appendTo:sideBar
            })
            sideBar.zoomOutUI = genUI({
                clsName:".ui-controls__sideBar-zoomOut",
                srcName:"zoomOut",
                uiName:"Zoom Out",
                placement:"right",
                isSecondary:true,
                events:sideBar.visToggle,
                appendTo:sideBar
            })
            sideBar.undoUI = genUI({
                clsName:".ui-controls__sideBar-undo",
                srcName:"undo",
                uiName:"Undo All",
                placement:"right",
                isSecondary:true,
                events:sideBar.visToggle,
                appendTo:sideBar
            })
            sideBar.tileUI = genUI({
                clsName:".ui-controls__sideBar-tile hidden",
                srcName:"tileView",
                uiName:"Tile View",
                placement:"right",
                isSecondary:true,
                events:sideBar.visToggle,
                appendTo:sideBar
            })
            sideBar.moreUI = genUI({
                clsName:".ui-controls__sideBar-more hidden",
                srcName:"caretRight",
                uiName:"Show",
                placement:"right",
                tooltip:true,
                events:{...sideBar.visToggle,...{onActive:(event:any)=>{
                    sideBar.unminify(event)
                }}},
                appendTo:sideBar
            })
            sideBar.moreUILabel = genLabel({
                clsName:".ui-controls__sideBar-more-label ui-vertical-text hidden",
                uiName:"Show",
                appendTo:sideBar
            })
            sideBar.lessUI = genUI({
                clsName:".ui-controls__sideBar-less",
                srcName:"caretLeft",
                uiName:"Less",
                placement:"right",
                isSecondary:true,
                events:{...sideBar.visToggle,...{onActive:(event:any)=>{
                    sideBar.minify(event)
                }}},
                appendTo:sideBar
            })
        },
        appendTo:uiCont,
    });


    //media Container //For Adding Media
    let mediaCont = window.mediaCont = MISC.newElem({
        type:"div",
        identity:".ui-controls__mediaCont",
        appendTo:uiCont
    });
    (()=>{
        interface mediaTemplate{
            src:string,
            sub?:string,
            cls:string,
        }

        
        /* Test commands
        
        audioFile.add({
            src:testAudio,
            sub:testSub,
            cls:"mrBlue"
        })
        audioFile.mrBlue.set()
        
        videoFile.add({
            src:testAudio,
            sub:testSub,
            cls:"mrBlue"
        })
        videoFile.mrBlue.set()
        */

        let vidFiles = mediaCont.vidFiles = window.videoFile = MISC.newElem({
            type:"div",
            identity:".mediaCont__vidFiles",
            props:{
                activeVideos:[],
                resize:()=>{
                    vidFiles.activeVideos.forEach((item:any)=>{
                        console.log("vid size adjusted")
                    })
                }
            }
        });
        (()=>{
            MISC.setupEvents(window,{
                custom:{
                    resize:()=>{
                        vidFiles.resize()
                    }
                }
            })
            
            vidFiles.add = (obj:{
                src:string,
                sub?:string,
                cls:string,
            })=>{
                let video:any = MISC.newElem({
                    type:"video",
                    identity:"." + obj.cls + " vid-landscape hidden",
                    props:{
                        src:obj.src,
                        preload:"auto"
                    }
                })
                

                MISC.setupEvents(video,{
                    custom:{
                        timeupdate:()=>{
                            playerBar.videoBar.timelineUI.update()
                        },
                        ended:()=>{
                            playerBar.videoBar.pauseState()
                        },
                        playing:()=>{
                            window.loader.hide()
                            window.autoHideBars = true
                        },
                        pause:()=>{
                            window.showBars()
                            window.autoHideBars = false
                        },
                        waiting:()=>{
                            window.loader.show()
                        }

                    }
                })

                video.subs = {}
                video.activeObjs = []
                // audio.missedObjs = []
                video.subSrc = obj.sub
                video.subReady = false

                video.set = ()=>{
                    playerBar.videoBar.set(video)
                }
                video.start = ()=>{
                    playerBar.videoBar.play(video)
                }
                video.show = ()=>{
                    MISC.updateCls(video,"-hidden")
                }
                video.hide = ()=>{
                    MISC.updateCls(video,"+hidden")
                }
    
                vidFiles[obj.cls!] = video
                vidFiles.appendChild(video)
            }
        })();

        let audFiles = mediaCont.audFiles = window.audioFile = MISC.newElem({
            type:"div",
            identity:".mediaCont__audFiles"
        });
        (()=>{
            let audDisplay = audFiles.display = MISC.newElem({
                type:"canvas",
                identity:".audFiles__display",
                props:{
                    height:"500",
                    width:"500",
                    active:false,
                    resize:()=>{
                        audFiles.display.height = innerHeight * .75
                        audFiles.display.width = innerWidth * .75
                    }
                }
            });
            (()=>{
                let ctx  = audDisplay.getContext("2d")
                /* 
                audDisplay is called whenever a audio is play
                
                */
                audDisplay.start = ()=>{
                    if(audDisplay.active == false){
                        audDisplay.active = true
                        audDisplay.drawVisualizer()
                    }
                }
                audDisplay.drawVisualizer = ()=>{
                    let bars = 32;
                    let barWidth = Math.trunc(audDisplay.width)/(bars * 2)
                    ctx.clearRect(0, 0, audDisplay.width, audDisplay.height); //clears whole canvas
                    
                    if(audDisplay.active == true){ //check if active
                        let audio = playerBar.videoBar.currentMedia

                        if(!MISC.isEmpty(audio)){
                            audio.analyser.getByteFrequencyData(audio.frequencyArray)
                            
                            for(let i=0;i<bars;i++){
                                if(i%2 == 1){ //use odd only
                                    let height = audio.frequencyArray[Math.trunc((870/bars)*(i-1))]/2 
                                    audDisplay.drawline(i,height,barWidth)
                                }
                            }
                        }
                        requestAnimationFrame(audDisplay.drawVisualizer)
                    } else {
                        for(let i=0;i<bars;i++){
                            audDisplay.drawline(i,1,barWidth)
                        }
                    }
                }
                audDisplay.drawline = (bar:number,height:number,width:number)=>{
                    let centerX = audDisplay.width / 2;
                    let centerY = audDisplay.height / 2;
                    let lineWidth = width;
                    let coordX = bar * lineWidth

                    // draw the bar
                    ctx.strokeStyle = "#ffa500";
                    ctx.lineWidth = lineWidth;
                    ctx.lineCap = "round";
                    ctx.beginPath();
                    ctx.moveTo(centerX + coordX, centerY);
                    ctx.lineTo(centerX + coordX, centerY + height);
                    ctx.stroke();
                
                    ctx.beginPath();
                    ctx.moveTo(centerX + coordX, centerY);
                    ctx.lineTo(centerX + coordX, centerY - height);
                    ctx.stroke();

                    ctx.beginPath();
                    ctx.moveTo(centerX - coordX, centerY);
                    ctx.lineTo(centerX - coordX, centerY + height);
                    ctx.stroke();
                
                    ctx.beginPath();
                    ctx.moveTo(centerX - coordX, centerY);
                    ctx.lineTo(centerX - coordX, centerY - height);
                    ctx.stroke();
                }


            })();

            MISC.setupEvents(window,{
                custom:{
                    resize:()=>{
                        audDisplay.resize()
                    }
                }
            })

            audFiles.add = (obj:{
                src:string,
                sub?:string,
                cls:string,
            })=>{
                let audio:any = MISC.newElem({
                    type:"audio",
                    identity: "." + obj.cls + " hidden",
                    props:{
                        src:obj.src,
                        preload:"auto"
                    }
                })
    
                MISC.setupEvents(audio,{
                    custom:{
                        timeupdate:()=>{
                            audDisplay.start()
                            playerBar.videoBar.timelineUI.update()
                        },
                        ended:()=>playerBar.videoBar.pauseState(),
                        playing:()=>{
                            // console.log("PLAYING")
                            window.loader.hide()
                        },
                        waiting:()=>{
                            // console.log("WAITING")
                            window.loader.show()
                        }
                    }
                })

                audio.subs = {}
                audio.activeObjs = []
                audio.subSrc = obj.sub
                audio.subReady = false

                audio.frequencyArray = []
                let context = new (window.AudioContext || window.webkitAudioContext)(); //call WEB audio API
                let analyser = audio.analyser = context.createAnalyser(); //get audio interpreter
                let source = context.createMediaElementSource(audio); //target audio to visualize

                source.connect(analyser) //connect source to audio interpreter
                analyser.connect(context.destination) //connect speaker aka context.destination

                audio.frequencyArray = new Uint8Array(analyser.frequencyBinCount) //store interpreted data
                
                audio.set = ()=>{
                    playerBar.videoBar.set(audio)
                }
                audio.start = ()=>{
                    playerBar.videoBar.play(audio)
                }
                audio.show = ()=>{
                    MISC.updateCls(audio,"-hidden")
                }
                audio.hide = ()=>{
                    MISC.updateCls(audio,"+hidden")
                }
                
    
                audFiles[obj.cls!] = audio
                audFiles.appendChild(audio)
            }

            audFiles.appendChild(audDisplay)

            // audioFile.add({
            //     src:testAudio,
            //     sub:testSub,
            //     cls:"mrBlue"
            // })
        })();

        let subDisplay = mediaCont.subDisplay = MISC.newElem({
            type:"div",
            identity:".mediaCont__subDisplay subtitleFloat"
        });
        (()=>{
            let subText = subDisplay.text = MISC.newElem({
                type:"span",
                identity:".subDisplay__text",
                innerText:"The quick brown fox jump over the lazy sheep"
            })
            subDisplay.appendChild(subText)
            subDisplay.float = ()=>{
                MISC.updateCls(subDisplay,"+subtitleFloat")
            }
            subDisplay.unFloat = ()=>{
                MISC.updateCls(subDisplay,"-subtitleFloat")
            }
        })();

        //For Docs
        //For Slides
        //For Models

        mediaCont.appendChild(vidFiles)
        mediaCont.appendChild(audFiles)
        mediaCont.appendChild(subDisplay)
    })();

    //bottom Settings //USE playerBar.show(#) to switch bottom players
    let playerBar = window.playerBar = MISC.newElem({
        type:"div",
        identity:".ui-controls__player-bar",
        appendTo:uiCont
    });
    (()=>{ //function to switch playerBar
        playerBar.activeBar = 0;
        playerBar.hide = ()=>{
            MISC.updateCls(videoBar,"+hidden")
            MISC.updateCls(viewerBar,"+hidden")
            MISC.updateCls(docBar,"+hidden")
            MISC.updateCls(modelBar,"+hidden")
            MISC.updateCls(miniBar,"+hidden")
        }
        playerBar.show = (num:number,expand?:boolean)=>{
            playerBar.hide()
            MISC.setStyle(playerBar,{
                cursor:"auto"
            })

            if(num >= 0 && num <=3){ //num assigning
                playerBar.activeBar = num
            }

            if(num == 0){ //video
                MISC.updateCls(videoBar,"-hidden")
            } else if (num == 1){ //view
                MISC.updateCls(viewerBar,"-hidden")
                if(expand){viewerBar.lessUI.btn.focus()}
            } else if (num == 2){ //doc
                MISC.updateCls(docBar,"-hidden")
                if(expand){docBar.lessUI.btn.focus()}
            } else if (num == 3){ //model
                MISC.updateCls(modelBar,"-hidden")
                if(expand){modelBar.lessUI.btn.focus()}
            }
        }
        playerBar.minify = ()=>{ //switch to miniBar
            playerBar.hide()
            MISC.setStyle(playerBar,{
                cursor:"pointer"
            })
            MISC.updateCls(miniBar,"-hidden")
            miniBar.moreUI.btn.focus()
        }
        playerBar.showState = ()=>{
            MISC.setStyle(playerBar,{opacity:""})
        }
        playerBar.hideState = ()=>{
            MISC.setStyle(playerBar,{opacity:0})
            videoBar.hideSettings()
            viewerBar.hideSettings()
            docBar.hideSettings()
            modelBar.hideSettings()
        }
        MISC.setupEvents(playerBar,{
            onOver:()=>{
                if(!miniBar.classList.contains("hidden")){
                    playerBar.showUIBtn.focus()
                }
            },
            onActive:()=>{
                if(!miniBar.classList.contains("hidden")){
                    playerBar.show(playerBar.activeBar,true) //uses number to show playerBar
                }
            }
        })

        //For Interactive Video

        //For Video and Audio
        let videoBar = playerBar.videoBar = MISC.newElem({
            type:"div",
            identity:".player-bar__Inspect",
            props:{
                currentMedia:null
            }
        });
        (()=>{
            videoBar.set = (elem:any)=>{
                elem.show()
                videoBar.currentMedia = elem //set current media

                mediaCont.audFiles.display.resize()

                if(elem.readyState == 4){
                    videoBar.pauseState()
                    volumeUI.volume.link(elem)
                    timelineUI.timeline.update(elem)
                    timelineUI.timeCode.update(elem)
                    settingUI.speed.reset()
                    mediaCont.subDisplay.text.innerText = "" //clears prev subtitles
    
                    if(!MISC.isEmpty(elem.subSrc)){
                        
                        if(elem.subReady == false){
                            
                            fetch(elem.subSrc).then(r=>r.text())
                            .then(a=> //extract and sort subs to object
                                a.split("\n\n").map((item)=>{
                                    let parts = item.split("\n");
        
                                    if(parts.length == 3){
        
                                        elem.subs["line"+parts[0]] = {
                                            start:MISC.toSeconds(parts[1].split(" --> ")[0]),
                                            end:MISC.toSeconds(parts[1].split(" --> ")[1]),
                                            text: parts[2],
                                        }
        
                                        //determine how many hours max for sorting
                                        elem.subs["HHlimit"] = elem.subs["line"+parts[0]].end / 3600
                                    }
                                })
                            ).then(()=>{ //sort subs to time template
                                // videoBar.addTimeUpdateEvent()
        
                                let tempSort:any = videoBar.currentMedia.subSort = {}
                                let cHHlimit = Math.trunc(videoBar.currentMedia.subs.HHlimit)
        
                                for(let i=0;i<=cHHlimit;i++){
                                    tempSort[i+"HH"] = MISC.timeTemplate()
                                }
        
                                Object.entries(videoBar.currentMedia.subs).forEach((sub)=>{
                                    let id:any = sub[0]
                                    let line:any = sub[1]
        
                                    console.log({
                                        id:id,
                                        line:line,
                                        startT:Math.trunc(line.start),
                                        endT:Math.trunc(line.end)
                                    })
        
                                    if(id.includes("line")){
        
                                        //find how long it should be live
                                        let durT = Math.trunc(line.end) - Math.trunc(line.start)
        
                                        for(let i=0;i<=durT;i++){
                                            let visibleT = line.start + i //time it should be visible
        
                                            let liveT = {
                                                HH: MISC.getHHcat(visibleT),
                                                MM: MISC.getMMcat(visibleT),
                                                M: MISC.getMcat(visibleT),
                                                SS: MISC.getSScat(visibleT),
                                                S: MISC.getScat(visibleT),
                                            }
        
                                            tempSort[liveT.HH][liveT.MM][liveT.M][liveT.SS][liveT.S].spawn.push(id)
        
                                        }
                                    }
                                })
        
                                console.log(tempSort)
        
                                elem.subReady = true //prevent re fetching of subs again
                            })
                        }

                        playerBar.videoBar.captionUI.enable()
                    } else playerBar.videoBar.captionUI.disable()

                    
                    
                    videoBar.addTimeUpdateEvent()
                } else MISC.throwError("target media is not yet ready")
            }
            videoBar.play = (media = videoBar.currentMedia)=>{
                if(!MISC.isEmpty(media)){
                    videoBar.set(media)
                }
                if(!MISC.isEmpty(videoBar.currentMedia)){
                    media.play()
                } else MISC.throwError("videoBar.currentMedia is empty")

            }
            videoBar.addTimeUpdateEvent = ()=>{

                if(videoBar.currentMedia.timeEventAdded != true){
                    let spawnObj = (event:any,item:string)=>{
                        // console.log(event.target.subs[item].text)
                        if(captionUI.btn.toggle == 1){
                            mediaCont.subDisplay.text.innerText = event.target.subs[item].text
                            event.target.activeObjs.push(item)
                        } else {
                            mediaCont.subDisplay.text.innerText = ""
                        }
    
                    }
                    let despawnObj = (event:any,item:string)=>{
    
                        let cText = mediaCont.subDisplay.text.innerText
    
                        mediaCont.subDisplay.text.innerText = cText.replace(event.target.subs[item].text,"")
                        event.target.activeObjs.splice(event.target.activeObjs.indexOf(item),1)
                    }
    
                    videoBar.currentMedia.addEventListener("timeupdate",(event:any)=>{
                        let cTime = event.target.currentTime
    
                        let selection:any
                        let cond1 = !MISC.isEmpty(event.target.prevT)
                        let cond2 = Math.trunc(cTime) == Math.trunc(event.target.prevT)
                        // let cond3 = selection == event.target.prevSelection
    
                        //efficient paging system for querying spawn and despawn
                        if(cond1 && cond2){
                            // console.log(cTime)
                            selection = event.target.prevSelection
                        } else {
                            console.log(Math.trunc(cTime))
                            let liveT = {
                                HH: MISC.getHHcat(cTime),
                                MM: MISC.getMMcat(cTime),
                                M: MISC.getMcat(cTime),
                                SS: MISC.getSScat(cTime),
                                S: MISC.getScat(cTime),
                            }
                            selection = event.target.prevSelection = event.target.subSort[liveT.HH][liveT.MM][liveT.M][liveT.SS][liveT.S]
                        }
    
                        if(event.target.activeObjs.length !=0){ //check whether to despawn activeObjs
                            let tempActiveObjs = event.target.activeObjs
    
                            tempActiveObjs.forEach((item:string)=>{
                                let lowerHitbox = event.target.subs[item].start
                                let upperHitBox = event.target.subs[item].end
    
                                if(cTime < lowerHitbox || upperHitBox < cTime){
                                    despawnObj(event,item)
                                }
                            })
    
                        }
    
                        if(Object.entries(selection.spawn).length != 0){//spawn?
                            selection.spawn.forEach((item:string)=>{
                                let cond1 = event.target.activeObjs.includes(item)
                                let cond2 = cTime >= event.target.subs[item].start
                                let cond3 = cTime < event.target.subs[item].end
    
                                if(!cond1 && cond2 && cond3){
                                    spawnObj(event,item)
                                }
      
                            })
                        }
    
                        event.target.prevT = cTime
                    })

                    videoBar.currentMedia.timeEventAdded = true
                }
            }
            videoBar.update = (media = videoBar.currentMedia)=>{
                timelineUI.timeline.update(media)
                timelineUI.timeCode.update(media)
            }
            videoBar.playState = (btn = playPauseUI.btn)=>{
                window.autoHideBars = true
                btn.toggle = 1
                btn.tooltip.setProps({
                    content:"Pause"
                })
                btn.innerText = ""
                btn.appendChild(MISC.getSVG("pause"))
                videoBar.currentMedia.play()
            }
            videoBar.pauseState = (btn = playPauseUI.btn)=>{
                window.showBars()
                window.autoHideBars = false
                btn.toggle = 0
                btn.tooltip.setProps({
                    content:"Play"
                })
                btn.innerText = ""
                btn.appendChild(MISC.getSVG("play"))
                videoBar.currentMedia.pause()
            }
            videoBar.showSettings = ()=>{
                //show main
                MISC.updateCls(settingUI.main,"-hidden")
                MISC.qsa(".ui-opt",settingUI.main).forEach((elem:any) => {
                    MISC.updateCls(elem,"-hidden")
                });

                settingUI.btn.toggle = 1
            }
            videoBar.hideSettings = ()=>{
                
                MISC.updateCls(settingUI.main,"+hidden")
                MISC.updateCls(settingUI.speed,"+hidden")
                // MISC.updateCls(settingUI.quality,"+hidden")
                MISC.qsa(".ui-opt",settingUI.main).forEach((elem:any) => {
                    MISC.updateCls(elem,"+hidden")
                });
                
                settingUI.btn.toggle = 0
            }
            
            
            
            let playPauseUI = videoBar.playPauseUI = genUI({
                clsName:".ui-controls__playerBar-play",
                srcName:"play",
                uiName:"Play",
                isSecondary:true,
                toggle:true,
                events:{
                    onActive:(event:any)=>{
                        if(event.target == playPauseUI.btn){
                            if(playPauseUI.btn.toggle == 0){
                                videoBar.playState()
                            } else {
                                videoBar.pauseState()
                            }
                        }
                    }
                }
            })
            let timelineUI = videoBar.timelineUI = genTimeline({
                clsName:".ui-controls__playerBar-timeline player-bar-timeline",
                srcName:"",
                uiName:"Timeline",
                isSecondary:true,
                events:{},
            })
            let volumeUI = videoBar.volumeUI = genTriangularVolume({
                clsName:".ui-controls__playerBar-volume",
                uiName:"Volume",
                isSecondary:true,
                srcName:"nope",
                events:{},
            })
            let captionUI = videoBar.captionUI = genUI({
                clsName:".ui-controls__playerBar-caption",
                srcName:"caption",
                uiName:"Subtitles/closed captions",
                toggle:true,
                isSecondary:true,
                events:{
                    onActive:(event:any)=>{
                        if(event.target.toggle == 0){
                            MISC.updateCls(MISC.qs("svg",event.target),"+ui-caption")
                            event.target.toggle = 1
                        } else {
                            
                            mediaCont.subDisplay.text.innerText = ""
                            
                            MISC.updateCls(MISC.qs("svg",event.target),"-ui-caption")
                            event.target.toggle = 0

                            let tempActiveObjs = videoBar.currentMedia.activeObjs
                            tempActiveObjs.forEach((item:string)=>{
                                if(item.includes("line")){
                                    videoBar.currentMedia.activeObjs.splice(videoBar.currentMedia.activeObjs.indexOf(item),1)
                                }
                            })
                        }
                    }
                },
            });
            (()=>{
                captionUI.enable = ()=>{
                    MISC.updateCls(captionUI,"-hidden")
                    captionUI.showCC()
                }
                captionUI.disable = ()=>{
                    MISC.updateCls(captionUI,"+hidden")
                    captionUI.hideCC()
                }
                captionUI.showCC = ()=>{
                    captionUI.btn.toggle = 1
                    MISC.updateCls(MISC.qs("svg",captionUI.btn),"+ui-caption")
                }
                captionUI.hideCC = ()=>{
                    captionUI.btn.toggle = 0
                    MISC.updateCls(MISC.qs("svg",captionUI.btn),"-ui-caption")

                    let tempActiveObjs = videoBar.currentMedia.activeObjs
                    tempActiveObjs.forEach((item:string)=>{
                        if(item.includes("line")){
                            videoBar.currentMedia.activeObjs.splice(videoBar.currentMedia.activeObjs.indexOf(item),1)
                        }
                    })

                    mediaCont.subDisplay.text.innerText = ""
                }
                
            })();
            let settingUI = videoBar.settingUI = genPlayerVideoOptions({
                clsName:".ui-controls__playerBar-setting videoBar-settings",
                srcName:"setting",
                uiName:"Settings",
                toggle:true,
                isSecondary:true,
                events:{
                    onActive: (event:any)=>{
                        if(event.target == settingUI.btn){
                            if(settingUI.btn.toggle == 0){
                                videoBar.showSettings()
                                MISC.onBoundaryLeave({
                                    elem:settingUI,
                                    parent: ".ui-controls__playerBar-setting",
                                    setup: videoBar.hideSettings
                                })
                            } else {
                                videoBar.hideSettings()
                            }
                        }
                    },
                    onSelect:(event:any)=>{
                        if(settingUI.btn.toggle == 1 && event.key == "Tab" && event.shiftKey){
                            videoBar.hideSettings()
                        }
                    },
                    enableAllKeys:true,
                }
            })
            
            videoBar.appendChild(playPauseUI)
            videoBar.appendChild(timelineUI)
            videoBar.appendChild(volumeUI)
            videoBar.appendChild(captionUI)
            videoBar.appendChild(settingUI)
        })();

        //For Image and Image Panorama
        let viewerBar = playerBar.viewerBar = MISC.newElem({
            type:"div",
            identity:".player-bar__ImagePanorama hidden"
        });
        (()=>{ //setup playerBar for Inspect Image, Panorama, 
            viewerBar.showSettings = ()=>{
                MISC.updateCls(settingUI.main,"-hidden")
                MISC.qsa(".ui-opt",settingUI.main).forEach((elem:any) => {
                    MISC.updateCls(elem,"-hidden")
                });

                settingUI.btn.toggle = 1
            }
            viewerBar.hideSettings = ()=>{
                MISC.updateCls(settingUI.main,"+hidden")
                MISC.updateCls(settingUI.annotation,"+hidden")
                MISC.qsa(".ui-opt",settingUI.main).forEach((elem:any) => {
                    MISC.updateCls(elem,"+hidden")
                });

                settingUI.btn.toggle = 0
            }

            let hintUI = viewerBar.hintUI = genUI({
                clsName:".ui-controls__playerBar-hint ui-hint",
                srcName:"question",
                uiName:"Hint",
                isSecondary:true,
                events:{
                    onActive:()=>{
                        MISC.updateCls(hintCont,"-hidden")
                        MISC.updateCls(MISC.qs(".interactiveHint-1",hintCont),"-hidden")
                        MISC.qs(".interactiveHint-1",hintCont).focus()
                    }
                }
            })
            let settingUI = viewerBar.settingUI = genPlayerViewerOptions({
                clsName:".ui-controls__playerBar-download viewerBar-settings",
                srcName:"setting",
                uiName:"Settings",
                toggle:true,
                isSecondary:true,
                events:{
                    onActive:(event:any)=>{
                        if(event.target == settingUI.btn){
                            if(settingUI.btn.toggle == 0){
                                viewerBar.showSettings()
                                MISC.onBoundaryLeave({
                                    elem:settingUI,
                                    parent: ".ui-controls__playerBar-download",
                                    setup: viewerBar.hideSettings
                                })
                            } else {
                                viewerBar.hideSettings()
                            }
                        }
                    },
                    onSelect:(event:any)=>{
                        if(event.key == "Tab" && event.shiftKey){
                            viewerBar.hideSettings()
                        }
                    },
                    enableAllKeys:true
                }
            })
            let lessUI = viewerBar.lessUI = genUI({
                clsName:".ui-controls__playerBar-hide",
                srcName:"caretBottom",
                uiName:"Less",
                isSecondary:true,
                events:{
                    onActive:()=>{
                        playerBar.activeBar = 1
                        playerBar.minify()
                    }
                }
            })

            viewerBar.appendChild(settingUI)
            viewerBar.appendChild(hintUI)
            viewerBar.appendChild(lessUI)
        })();

        //For Documents (PDF,Slides)
        let docBar = playerBar.docBar = MISC.newElem({
            type:"div",
            identity:".player-bar__Doc hidden"
        });
        (()=>{
            docBar.showSettings = ()=>{
                MISC.updateCls(settingUI.main,"-hidden")
                MISC.qsa(".ui-opt",settingUI.main).forEach((elem:any) => {
                    MISC.updateCls(elem,"-hidden")
                });

                settingUI.btn.toggle = 1
            }
            docBar.hideSettings = ()=>{
                MISC.updateCls(settingUI.main,"+hidden")
                MISC.updateCls(settingUI.annotation,"+hidden")
                MISC.qsa(".ui-opt",settingUI.main).forEach((elem:any) => {
                    MISC.updateCls(elem,"+hidden")
                });

                settingUI.btn.toggle = 0
            }
            
            let leftUI = docBar.leftUI = genUI({
                clsName:".ui-controls__playerBar-backward",
                srcName:"leftArrow",
                uiName:"Previous Page",
                events:{
                    onActive:()=>{
                        let trgt = MISC.qs(".ui-editable",docBar)
                        let nVal = parseFloat(trgt.value) - 1
                        if(nVal < 0){
                            trgt.value = 0
                        } else {
                            trgt.value = nVal
                        }
                    }
                }
            })
            let slideLabelUI = docBar.slideLabelUI = genSlideCount({
                clsName:".ui-controls__playerBar-divider",
                numLimit: 100,
            })
            let rightUI = docBar.rightUI = genUI({
                clsName:".ui-controls__playerBar-forward",
                srcName:"rightArrow",
                uiName:"Next Page",
                events:{
                    onActive:()=>{
                        let trgt = MISC.qs(".ui-editable",docBar)
                        let nVal = parseFloat(trgt.value) + 1
                        if(nVal > trgt.limit){
                            trgt.value = trgt.limit
                        } else {
                            trgt.value = nVal
                        }
                    }
                }
            })
            let dividerUI = docBar.dividerUI = genLabel({
                clsName:".ui-controls__playerBar-divider",
                uiName: "|"
            })
            let settingUI = docBar.settingUI = genPlayerDocOptions({
                clsName:".ui-controls__playerBar-setting docBar-settings",
                srcName:"setting",
                uiName:"Settings",
                toggle:true,
                isSecondary:true,
                events:{
                    onActive:(event:any)=>{
                        if(event.target == settingUI.btn){
                            if(settingUI.btn.toggle == 0){
                                docBar.showSettings()
                                MISC.onBoundaryLeave({
                                    elem:settingUI,
                                    parent: ".ui-controls__playerBar-setting",
                                    setup: docBar.hideSettings
                                })
                            } else {
                                docBar.hideSettings()
                            }
                        }
                    },
                    onSelect:(event:any)=>{
                        if(event.key == "Tab" && event.shiftKey){
                            docBar.hideSettings()
                        }
                    },
                    enableAllKeys:true
                }
            })
            let hintUI = docBar.hintUI = genUI({
                clsName:".ui-controls__playerBar-hint",
                srcName:"question",
                uiName:"Hint",
                isSecondary:true,
                events:{
                    onActive:()=>{
                        MISC.updateCls(hintCont,"-hidden")
                        MISC.updateCls(MISC.qs(".interactiveHint-1",hintCont),"-hidden")
                        MISC.qs(".interactiveHint-1",hintCont).focus()
                    }
                }
            })
            let lessUI = docBar.lessUI = genUI({
                clsName:".ui-controls__playerBar-hide",
                srcName:"caretBottom",
                uiName:"Less",
                isSecondary:true,
                events:{
                    onActive:()=>{
                        playerBar.minify()
                        playerBar.activeBar = 2
                    }
                }
            })

            docBar.appendChild(leftUI)
            docBar.appendChild(slideLabelUI)
            docBar.appendChild(rightUI)
            docBar.appendChild(dividerUI)
            docBar.appendChild(settingUI)
            docBar.appendChild(hintUI)
            docBar.appendChild(lessUI)
        })();

        // https://stackoverflow.com/a/66110761 enable txt selection for DocBar


        //For Model
        let modelBar = playerBar.modelBar = MISC.newElem({
            type:"div",
            identity:".player-bar__ModelViewer modelBar-settings hidden"
        });
        (()=>{ //setup playerBar for MdlViewer 
            modelBar.showSettings = ()=>{
                MISC.updateCls(settingUI.main,"-hidden")
                MISC.qsa(".ui-opt",settingUI.main).forEach((elem:any) => {
                    MISC.updateCls(elem,"-hidden")
                });

                settingUI.btn.toggle = 1
            }
            modelBar.hideSettings = ()=>{
                MISC.updateCls(settingUI.main,"+hidden")
                MISC.updateCls(settingUI.annotation,"+hidden")
                MISC.updateCls(settingUI.autoRotate,"+hidden")

                MISC.qsa(".ui-opt",settingUI.main).forEach((elem:any) => {
                    MISC.updateCls(elem,"+hidden")
                });

                settingUI.btn.toggle = 0
            }
            modelBar.showMenu = ()=>{
                MISC.updateCls(menuUI.menu,"-hidden")
                menuUI.btn.toggle = 1
            }
            modelBar.hideMenu = ()=>{
                MISC.updateCls(menuUI.menu,"+hidden")
                menuUI.btn.toggle = 0
            }

            let playUI = modelBar.playUI = genUI({
                clsName:".ui-controls__playerBar-play",
                srcName:"play",
                uiName:"Play",
                isSecondary:true,
                events:{}
            })
            let pauseUI = modelBar.pauseUI = genUI({
                clsName:".ui-controls__playerBar-pause hidden",
                srcName:"pause",
                uiName:"Pause",
                isSecondary:true,
                events:{}
            })
            let dividerUI = modelBar.dividerUI = genLabel({
                clsName:".ui-controls__playerBar-divider",
                uiName: "|"
            })
            let menuUI = modelBar.menuUI = genAnimList({
                clsName:".ui-controls__playerBar-animate",
                srcName:"menu",
                uiName:"Select Animation",
                isSecondary:true,
                toggle:true,
                events:{
                    onActive:()=>{
                        if(menuUI.btn.toggle == 0){
                            modelBar.showMenu()
                            MISC.onBoundaryLeave({
                                elem: menuUI,
                                parent:".ui-controls__playerBar-animate",
                                setup: modelBar.hideMenu
                            })
                        } else {
                            modelBar.hideMenu()
                        }
                    }
                }
            })
            let dividerUI1 = modelBar.dividerUI1 = genLabel({
                clsName:".ui-controls__playerBar-divider",
                uiName: "|",
            })

            let settingUI = modelBar.settingUI = genPlayerModelOptions({
                clsName:".ui-controls__playerBar-setting modelBar-settings",
                srcName:"setting",
                uiName:"Settings",
                toggle:true,
                isSecondary:true,
                events:{
                    onActive:(event:any)=>{
                        if(settingUI.btn.toggle == 0){
                            modelBar.showSettings()
                            MISC.onBoundaryLeave({
                                elem:settingUI,
                                parent: ".ui-controls__playerBar-setting",
                                setup: modelBar.hideSettings
                            })
                        } else {
                            modelBar.hideSettings()
                        }
                    }
                }
            })
            let hintUI = modelBar.hintUI = genUI({
                clsName:".ui-controls__playerBar-hint",
                srcName:"question",
                uiName:"Hint",
                isSecondary:true,
                events:{
                    onActive:()=>{
                        MISC.updateCls(hintCont,"-hidden")
                        MISC.updateCls(MISC.qs(".interactiveHint-1",hintCont),"-hidden")
                        MISC.qs(".interactiveHint-1",hintCont).focus()
                    }
                }
            })
            let lessUI = modelBar.lessUI = genUI({
                clsName:".ui-controls__playerBar-hide",
                srcName:"caretBottom",
                uiName:"Less",
                isSecondary:true,
                events:{
                    onActive:()=>{
                        playerBar.minify()
                        playerBar.activeBar = 3
                    }
                }
            })

            // auto rotate
            // annotation
            modelBar.appendChild(playUI)
            modelBar.appendChild(pauseUI)
            modelBar.appendChild(dividerUI)
            modelBar.appendChild(menuUI)
            modelBar.appendChild(dividerUI1)
            modelBar.appendChild(settingUI)
            modelBar.appendChild(hintUI)
            modelBar.appendChild(lessUI)
        })();

        /* editorBar WIP
        let editorBar = MISC.newElem({
            type:"div",
            identity:".player-bar__Editor"
        });
        (()=>{//setup editor
            let addBoxUI = genUI({
                clsName:".ui-controls__playerBar-leftArrow",
                srcName:"leftArrow",
                uiName:"Left",
                toggle:false,
                isSecondary:true,
                events:{}
            })
            let dupBoxUI = genUI({
                clsName:".ui-controls__playerBar-leftArrow",
                srcName:"leftArrow",
                uiName:"Left",
                toggle:false,
                isSecondary:true,
                events:{}
            })
            let delBoxUI = genUI({
                clsName:".ui-controls__playerBar-leftArrow",
                srcName:"leftArrow",
                uiName:"Left",
                toggle:false,
                isSecondary:true,
                events:{}
            })
            let controlDividerUI = genLabel({
                clsName:".ui-controls__playerBar-divider",
                uiName: "|"
            })
            let moveBoxUI = genUI({
                clsName:".ui-controls__playerBar-leftArrow",
                srcName:"leftArrow",
                uiName:"Left",
                toggle:false,
                isSecondary:true,
                events:{}
            })
            let resizeBoxUI = genUI({
                clsName:".ui-controls__playerBar-leftArrow",
                srcName:"leftArrow",
                uiName:"Left",
                toggle:false,
                isSecondary:true,
                events:{}
            })
            let selectBoxUI = genUI({
                clsName:".ui-controls__playerBar-leftArrow",
                srcName:"leftArrow",
                uiName:"Left",
                toggle:false,
                isSecondary:true,
                events:{}
            })
            let lockBoxUI = genUI({
                clsName:".ui-controls__playerBar-leftArrow",
                srcName:"leftArrow",
                uiName:"Left",
                toggle:false,
                isSecondary:true,
                events:{}
            })
            let controlDividerUI2 = genLabel({
                clsName:".ui-controls__playerBar-divider",
                uiName: "|"
            })


        }); */

        // Minified bar
        let miniBar = playerBar.miniBar = MISC.newElem({
            type:"div",
            identity:".player-bar__Hidden ui-mini-playerbar hidden"
        });
        (()=>{
            let moreUI = miniBar.moreUI = genUI({
                clsName:".ui-controls__playerBar-show",
                srcName:"caretTop",
                uiName:"More",
                isSecondary:true,
                events:{
                    onActive:()=>{
                        playerBar.show(playerBar.activeBar,true) //uses number to show playerBar
                    }
                }
            })
            let moreUILabel = miniBar.moreUILabel = genLabel({
                clsName:".ui-controls__playerBar-divider",
                uiName: "Show",
            })

            miniBar.appendChild(moreUI)
            miniBar.appendChild(moreUILabel)
        })();

        playerBar.appendChild(videoBar)
        playerBar.appendChild(viewerBar)
        playerBar.appendChild(docBar)
        playerBar.appendChild(modelBar)
        playerBar.appendChild(miniBar)
        
    })();
    




    let isMobile = ()=>{
        window.device = new window.MobileDetect(window.navigator.userAgent)
        if(window.device.phone() || window.device.tablet() || window.device.mobile()){
            MISC.updateCls(MISC.qs(".ui-trivolume",playerBar),"+hidden")
            MISC.qsa(".ui-btn").forEach((elem:any)=>{
                if(!elem.classList.contains("ui-nopointer")){
                    MISC.updateCls(elem,"+ui-btn-mobile")
                }
                
                if(elem.classList.contains("ui-navigation-tip") || elem.classList.contains("ui-navigation-tip-divider")){
                    MISC.updateCls(elem,"+hidden")
                }
            })

        } else {
            MISC.updateCls(MISC.qs(".ui-trivolume",playerBar),"-hidden")
            MISC.qsa(".ui-btn").forEach((elem:any)=>{
                if(!elem.classList.contains("ui-nopointer")){
                    MISC.updateCls(elem,"-ui-btn-mobile")
                }
                if(elem.classList.contains("ui-navigation-tip") || elem.classList.contains("ui-navigation-tip-divider")){
                    MISC.updateCls(elem,"-hidden")
                }
            })
        }
    }
    window.addEventListener("resize",isMobile)
    window.setTimeout(()=>isMobile(),1000);

    let hideSettings = ()=>{
        let settings = MISC.qs(".ui-controls_settings")
        let sidebar = MISC.qs(".ui-controls_side-bar")
        let playerbar = MISC.qs(".ui-controls_player-bar")

        if(window.isFullscreen){
        } else {

        }
    }
    // window.addEventListener("resize",hideSettings)
})();

(()=>{ //setup docCont
    const docCanvas = MISC.newElem({
        identity:".docCanvas",
        type:"canvas"
    })
    const textLayer = MISC.newElem({
        identity:".textLayer",
        type:"div"
    })

    // instructions: https://stackoverflow.com/a/66110761
    var pdfDoc:any = null,
        pageNum = 1,
        pageRendering = false,
        pageNumPending:any = null,
        scale = 1,
        canvas = docCanvas,
        ctx = canvas.getContext('2d');

    function renderPage(num:number) {
        pageRendering = true;
        // Using promise to fetch the page
        pdfDoc.getPage(num).then(function(page:any) {
            var viewport = page.getViewport({scale: scale});
            console.log(viewport)
            canvas.height = viewport.height;
            canvas.width = viewport.width;
      
            // Render PDF page into canvas context
            var renderContext = {
                canvasContext: ctx,
                viewport: viewport
            }; 
            var renderTask = page.render(renderContext);
      
            // Wait for rendering to finish
            renderTask.promise.then(function() {
                pageRendering = false;
                if (pageNumPending !== null) {
                // New page rendering is pending
                renderPage(pageNumPending);
                pageNumPending = null;
                }
            }).then(function() {
                // Returns a promise, on resolving it will return text contents of the page
                return page.getTextContent();
            }).then(function(textContent:any) {
                //unhide the docCont
                MISC.updateCls(docCont,"-hidden")

                // Assign CSS to the textLayer element
                textLayer.style.left = canvas.offsetLeft + 'px';
                textLayer.style.top = canvas.offsetTop + 'px';
                textLayer.style.height = canvas.offsetHeight + 'px';
                textLayer.style.width = canvas.offsetWidth + 'px';
        
                // Pass the data to the method for rendering of text over the pdf canvas.
                window.pdfjsLib.renderTextLayer({
                textContent: textContent,
                container: textLayer,
                viewport: viewport,
                textDivs: []
                });
            });
        });
      
        // Update page counters
        // document.getElementById('page_num').textContent = num;
        console.log("update page num:" + num)
        console.log(docCanvas.offsetLeft)
        console.log(docCanvas.offsetHeight)
    }
      
      /**
       * If another page rendering in progress, waits until the rendering is
       * finised. Otherwise, executes rendering immediately.
       */
      function queueRenderPage(num:number) {
        if (pageRendering) {
          pageNumPending = num;
        } else {
          renderPage(num);
        }
      }
      
      /**
       * Displays previous page.
       */
      window.pdfjsLib.PrevPage = ()=>{
        if (pageNum <= 1) {
          return;
        }
        pageNum--;
        queueRenderPage(pageNum);
      }
    //   document.getElementById('prev').addEventListener('click', onPrevPage);
      
      /**
       * Displays next page.
       */
      window.pdfjsLib.nextPage = ()=>{
        if (pageNum >= pdfDoc.numPages) {
          return;
        }
        pageNum++;
        queueRenderPage(pageNum);
      }
    //   document.getElementById('next').addEventListener('click', onNextPage);
      
      /**
       * Asynchronously downloads PDF.
       */

      window.pdfjsLib.getDocument(window.origin + "/sample.pdf")
      .promise.then(function(pdfDoc_ :any) {
        pdfDoc = pdfDoc_;
        console.log("total pages:" + pdfDoc.numPages)
        // document.getElementById('page_count').textContent = pdfDoc.numPages;
      
        // Initial/first page rendering
        renderPage(pageNum);
      });


    docCont.appendChild(docCanvas)
    docCont.appendChild(textLayer)



});

(()=>{
    let audio = new Audio()
    let frequencyArray:any = []
    let context = new (window.AudioContext || window.webkitAudioContext)(); //call WEB audio API
    let analyser = context.createAnalyser(); //get audio interpreter
    let source = context.createMediaElementSource(audio); //target audio to visualize

    source.connect(analyser) //connect source to audio interpreter
    analyser.connect(context.destination) //connect speaker aka context.destination

    frequencyArray = new Uint8Array(analyser.frequencyBinCount) //store interpreted data
    audio.play()
});

(()=>{
    // console.log(playerBar)
    // var audio = new Audio("data:audio/wav;base64,UklGRhwMAABXQVZFZm10IBAAAAABAAEAgD4AAIA+AAABAAgAZGF0Ya4LAACAgICAgICAgICAgICAgICAgICAgICAgICAf3hxeH+AfXZ1eHx6dnR5fYGFgoOKi42aloubq6GOjI2Op7ythXJ0eYF5aV1AOFFib32HmZSHhpCalIiYi4SRkZaLfnhxaWptb21qaWBea2BRYmZTVmFgWFNXVVVhaGdbYGhZbXh1gXZ1goeIlot1k6yxtKaOkaWhq7KonKCZoaCjoKWuqqmurK6ztrO7tbTAvru/vb68vbW6vLGqsLOfm5yal5KKhoyBeHt2dXBnbmljVlJWUEBBPDw9Mi4zKRwhIBYaGRQcHBURGB0XFxwhGxocJSstMjg6PTc6PUxVV1lWV2JqaXN0coCHhIyPjpOenqWppK6xu72yxMu9us7Pw83Wy9nY29ve6OPr6uvs6ezu6ejk6erm3uPj3dbT1sjBzdDFuMHAt7m1r7W6qaCupJOTkpWPgHqAd3JrbGlnY1peX1hTUk9PTFRKR0RFQkRBRUVEQkdBPjs9Pzo6NT04Njs+PTxAPzo/Ojk6PEA5PUJAQD04PkRCREZLUk1KT1BRUVdXU1VRV1tZV1xgXltcXF9hXl9eY2VmZmlna3J0b3F3eHyBfX+JgIWJiouTlZCTmpybnqSgnqyrqrO3srK2uL2/u7jAwMLFxsfEv8XLzcrIy83JzcrP0s3M0dTP0drY1dPR1dzc19za19XX2dnU1NjU0dXPzdHQy8rMysfGxMLBvLu3ta+sraeioJ2YlI+MioeFfX55cnJsaWVjXVlbVE5RTktHRUVAPDw3NC8uLyknKSIiJiUdHiEeGx4eHRwZHB8cHiAfHh8eHSEhISMoJyMnKisrLCszNy8yOTg9QEJFRUVITVFOTlJVWltaXmNfX2ZqZ21xb3R3eHqAhoeJkZKTlZmhpJ6kqKeur6yxtLW1trW4t6+us7axrbK2tLa6ury7u7u9u7vCwb+/vr7Ev7y9v8G8vby6vru4uLq+tri8ubi5t7W4uLW5uLKxs7G0tLGwt7Wvs7avr7O0tLW4trS4uLO1trW1trm1tLm0r7Kyr66wramsqaKlp52bmpeWl5KQkImEhIB8fXh3eHJrbW5mYGNcWFhUUE1LRENDQUI9ODcxLy8vMCsqLCgoKCgpKScoKCYoKygpKyssLi0sLi0uMDIwMTIuLzQ0Njg4Njc8ODlBQ0A/RUdGSU5RUVFUV1pdXWFjZGdpbG1vcXJ2eXh6fICAgIWIio2OkJGSlJWanJqbnZ2cn6Kkp6enq62srbCysrO1uLy4uL+/vL7CwMHAvb/Cvbq9vLm5uba2t7Sysq+urqyqqaalpqShoJ+enZuamZqXlZWTkpGSkpCNjpCMioqLioiHhoeGhYSGg4GDhoKDg4GBg4GBgoGBgoOChISChISChIWDg4WEgoSEgYODgYGCgYGAgICAgX99f398fX18e3p6e3t7enp7fHx4e3x6e3x7fHx9fX59fn1+fX19fH19fnx9fn19fX18fHx7fHx6fH18fXx8fHx7fH1+fXx+f319fn19fn1+gH9+f4B/fn+AgICAgH+AgICAgIGAgICAgH9+f4B+f35+fn58e3t8e3p5eXh4d3Z1dHRzcXBvb21sbmxqaWhlZmVjYmFfX2BfXV1cXFxaWVlaWVlYV1hYV1hYWVhZWFlaWllbXFpbXV5fX15fYWJhYmNiYWJhYWJjZGVmZ2hqbG1ub3Fxc3V3dnd6e3t8e3x+f3+AgICAgoGBgoKDhISFh4aHiYqKi4uMjYyOj4+QkZKUlZWXmJmbm52enqCioqSlpqeoqaqrrK2ur7CxsrGys7O0tbW2tba3t7i3uLe4t7a3t7i3tre2tba1tLSzsrKysbCvrq2sq6qop6alo6OioJ+dnJqZmJeWlJKSkI+OjoyLioiIh4WEg4GBgH9+fXt6eXh3d3V0c3JxcG9ubWxsamppaWhnZmVlZGRjYmNiYWBhYGBfYF9fXl5fXl1dXVxdXF1dXF1cXF1cXF1dXV5dXV5fXl9eX19gYGFgYWJhYmFiY2NiY2RjZGNkZWRlZGVmZmVmZmVmZ2dmZ2hnaGhnaGloZ2hpaWhpamlqaWpqa2pra2xtbGxtbm1ubm5vcG9wcXBxcnFycnN0c3N0dXV2d3d4eHh5ent6e3x9fn5/f4CAgIGCg4SEhYaGh4iIiYqLi4uMjY2Oj5CQkZGSk5OUlJWWlpeYl5iZmZqbm5ybnJ2cnZ6en56fn6ChoKChoqGio6KjpKOko6SjpKWkpaSkpKSlpKWkpaSlpKSlpKOkpKOko6KioaKhoaCfoJ+enp2dnJybmpmZmJeXlpWUk5STkZGQj4+OjYyLioqJh4eGhYSEgoKBgIB/fn59fHt7enl5eHd3dnZ1dHRzc3JycXBxcG9vbm5tbWxrbGxraWppaWhpaGdnZ2dmZ2ZlZmVmZWRlZGVkY2RjZGNkZGRkZGRkZGRkZGRjZGRkY2RjZGNkZWRlZGVmZWZmZ2ZnZ2doaWhpaWpra2xsbW5tbm9ub29wcXFycnNzdHV1dXZ2d3d4eXl6enp7fHx9fX5+f4CAgIGAgYGCgoOEhISFhoWGhoeIh4iJiImKiYqLiouLjI2MjI2OjY6Pj46PkI+QkZCRkJGQkZGSkZKRkpGSkZGRkZKRkpKRkpGSkZKRkpGSkZKRkpGSkZCRkZCRkI+Qj5CPkI+Pjo+OjY6Njo2MjYyLjIuMi4qLioqJiomJiImIh4iHh4aHhoaFhoWFhIWEg4SDg4KDgoKBgoGAgYCBgICAgICAf4CAf39+f35/fn1+fX59fHx9fH18e3x7fHt6e3p7ent6e3p5enl6enl6eXp5eXl4eXh5eHl4eXh5eHl4eXh5eHh3eHh4d3h4d3h3d3h4d3l4eHd4d3h3eHd4d3h3eHh4eXh5eHl4eHl4eXh5enl6eXp5enl6eXp5ent6ent6e3x7fHx9fH18fX19fn1+fX5/fn9+f4B/gH+Af4CAgICAgIGAgYCBgoGCgYKCgoKDgoOEg4OEg4SFhIWEhYSFhoWGhYaHhoeHhoeGh4iHiIiHiImIiImKiYqJiYqJiouKi4qLiouKi4qLiouKi4qLiouKi4qLi4qLiouKi4qLiomJiomIiYiJiImIh4iIh4iHhoeGhYWGhYaFhIWEg4OEg4KDgoOCgYKBgIGAgICAgH+Af39+f359fn18fX19fHx8e3t6e3p7enl6eXp5enl6enl5eXh5eHh5eHl4eXh5eHl4eHd5eHd3eHl4d3h3eHd4d3h3eHh4d3h4d3h3d3h5eHl4eXh5eHl5eXp5enl6eXp7ent6e3p7e3t7fHt8e3x8fHx9fH1+fX59fn9+f35/gH+AgICAgICAgYGAgYKBgoGCgoKDgoOEg4SEhIWFhIWFhoWGhYaGhoaHhoeGh4aHhoeIh4iHiIeHiIeIh4iHiIeIiIiHiIeIh4iHiIiHiIeIh4iHiIeIh4eIh4eIh4aHh4aHhoeGh4aHhoWGhYaFhoWFhIWEhYSFhIWEhISDhIOEg4OCg4OCg4KDgYKCgYKCgYCBgIGAgYCBgICAgICAgICAf4B/f4B/gH+Af35/fn9+f35/fn1+fn19fn1+fX59fn19fX19fH18fXx9fH18fXx9fH18fXx8fHt8e3x7fHt8e3x7fHt8e3x7fHt8e3x7fHt8e3x7fHt8e3x8e3x7fHt8e3x7fHx8fXx9fH18fX5+fX59fn9+f35+f35/gH+Af4B/gICAgICAgICAgICAgYCBgIGAgIGAgYGBgoGCgYKBgoGCgYKBgoGCgoKDgoOCg4KDgoOCg4KDgoOCg4KDgoOCg4KDgoOCg4KDgoOCg4KDgoOCg4KDgoOCg4KDgoOCg4KDgoOCg4KCgoGCgYKBgoGCgYKBgoGCgYKBgoGCgYKBgoGCgYKBgoGCgYKBgoGCgYKBgoGBgYCBgIGAgYCBgIGAgYCBgIGAgYCBgIGAgYCBgIGAgYCAgICBgIGAgYCBgIGAgYCBgIGAgYCBgExJU1RCAAAASU5GT0lDUkQMAAAAMjAwOC0wOS0yMQAASUVORwMAAAAgAAABSVNGVBYAAABTb255IFNvdW5kIEZvcmdlIDguMAAA")
    // let audioElement = document.querySelector("#audioElmId");
    // let canvasElement = document.querySelector("#canvasElmId");
    // let wave = new Wave(audioElement, canvasElement);

    // https://www.happyscribe.com/subtitle-tools/online-subtitle-editor/free

    //For subtitles calling
    // fetch(testSub).then(r=>r.text()).then(a=>
    //     a.split("\n\n").map((item)=>{
    //         var parts = item.split("\n");
    //         console.log (
    //             {
    //                 number: parts[0],
    //                 time: parts[1],
    //                 text: parts[2],
    //             } 
    //         )
    //     }))


    
})



// DIRECTORY FOR ALL FILES TO BE HOSTED???

/* 
inspect vid
inspect audio

inspect img


inspect link    //hidden






playerbar types
    inspect video/audio
    panorama
    mdlviewer
    interactive slideshow
    carousel

inspect img
    sidebar
    visible HS
    invisible HS
    marked HS
inspect link
    just a container YT
    just a container Vimeo
inspect video
    playerbar
inspect audio
    playerbar

panorama
    playerbar

mdlviewer
    playerbar

slideshow iframe
    just a container
interactive slideshow
    playerbar

carousel
    use splidejs

main viewer

*/